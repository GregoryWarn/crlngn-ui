{"version":3,"file":"crlngn-ui.js","sources":["../../src/constants/Hooks.mjs","../../src/constants/General.mjs","../../src/components/LogUtil.mjs","../../src/constants/Settings.mjs","../../src/components/settings-dialogs/CameraDockSettings.mjs","../../src/components/settings-dialogs/ChatMessagesSettings.mjs","../../src/components/GeneralUtil.mjs","../../src/components/settings-dialogs/CustomFontSettings.mjs","../../src/components/settings-dialogs/LeftControlsSettings.mjs","../../src/components/settings-dialogs/SceneNavSettings.mjs","../../src/components/settings-dialogs/ThemeAndStylesSettings.mjs","../../src/constants/SettingMenus.mjs","../../src/components/CameraUtil.mjs","../../src/components/ChatUtil.mjs","../../src/components/ModuleCompatUtil.mjs","../../src/components/TopNavUtil.mjs","../../src/components/SceneFoldersUtil.mjs","../../src/components/SettingsUtil.mjs","../../src/components/PlayersListUtil.mjs","../../src/components/LeftControlsUtil.mjs","../../src/components/UpdateNewsUtil.mjs","../../src/components/Main.mjs","../../src/module.mjs"],"sourcesContent":["/**\n * Foundry Core hooks\n * https://foundryvtt.com/api/classes/client.Hooks.html\n * https://foundryvtt.com/api/modules/hookEvents.html\n * */ \nexport const HOOKS_CORE = {\n  INIT: \"init\", \n  READY: \"ready\", \n\n  /* Chat Messages */\n  RENDER_CHAT_MESSAGE: \"renderChatMessage\" ,\n\n  /* Left Side Controls */\n  GET_SCENE_CONTROLS: \"getSceneControlButtons\",\n  RENDER_SCENE_CONTROLS: \"renderSceneControls\",\n  RENDER_PLAYERS_LIST: \"renderPlayerList\",\n\n  /* Scenes */\n  RENDER_SCENE_NAV: \"renderSceneNavigation\",\n  COLLAPSE_SCENE_NAV: \"collapseSceneNavigation\",\n  EXPAND_SCENE_NAV: \"expandSceneNavigation\",\n  GET_SCENE_NAV_CONTEXT: \"getSceneNavigationContext\",\n\n  /* Document Directory */\n  RENDER_DOCUMENT_DIRECTORY: \"renderDocumentDirectory\",\n  GET_SCENE_DIRECTORY_ENTRY_CONTEXT: \"getSceneDirectoryEntryContext\",\n  RENDER_SCENE_DIRECTORY: \"renderSceneDirectory\",\n\n  /* Folders */\n  CREATE_FOLDER: \"createFolder\",\n  UPDATE_FOLDER: \"updateFolder\",\n  DELETE_FOLDER: \"deleteFolder\",\n\n  /* Scene Document */\n  CREATE_SCENE: \"createScene\",\n  UPDATE_SCENE: \"updateScene\",\n  DELETE_SCENE: \"deleteScene\",\n\n  /* Right Side Panel */\n  COLLAPSE_SIDE_BAR: \"collapseSidebar\",\n\n  /* Macros */\n  RENDER_HOTBAR: \"renderHotbar\",\n\n  /* Camera Views */\n  RENDER_CAMERA_VIEWS: \"renderCameraViews\",\n\n  /* Update user */\n  UPDATE_USER: \"updateUser\",\n  UPDATE_DOCUMENT: \"updateDocument\"\n}","export const MODULE_ID = \"crlngn-ui\";\nexport const MODULE_TITLE = \"Carolingian UI\";\nexport const MODULE_SHORT = \"crlngn-ui\";\nexport const DEBUG_TAG = [\n  `%cCarolingian UI`,\n  `color:rgb(54, 0, 119); font-weight: bold;`,\n  `|`,\n];\n\nexport const ROLL_TYPES = {\n  abilityCheck: \"ability\",\n  abilitySave: \"save\",\n  attack: \"attack\",\n  check: \"check\",\n  concentration: \"concentration\",\n  damage: \"damage\",\n  deathSave: \"death\",\n  formula: \"formula\",\n  healing: \"heal\",\n  custom: \"roll\",\n  skillCheck: \"skill\",\n  toolCheck: \"tool\"\n}\n\nexport const CHAR_ABILITIES = [\n  { abbrev: \"str\", name: \"strength\" },\n  { abbrev: \"dex\", name: \"dexterity\" },\n  { abbrev: \"con\", name: \"constitution\" },\n  { abbrev: \"int\", name: \"intelligence\" },\n  { abbrev: \"wis\", name: \"wisdom\" },\n  { abbrev: \"cha\", name: \"charisma\" }\n]\n\nexport const CLASS_PREFIX = 'crlngn';","import { DEBUG_TAG } from \"../constants/General.mjs\";\n\n/**\n * Utility class for handling logging operations in the module\n * Provides methods for debug, warning, and error logging with module context\n */\nexport class LogUtil {\n  /** @type {boolean} Whether debug logging is enabled */\n  static debugOn = false;\n  /**\n   * Outputs information on console, adding module name and reference\n   * @param {string} ref - Reference information to log after module name\n   * @param {any[]} data - data to log on console\n   */\n  static log(ref=\"\", data=[], bypassSettings=false){\n    try{\n      const debugSetting = LogUtil.debugOn;\n      const isDebugModeOn = bypassSettings || debugSetting;\n      if(!isDebugModeOn){ return };\n      console.log(...DEBUG_TAG, ref, ...data);\n    }catch(e){\n      console.log(...DEBUG_TAG, ref, ...data);\n    }\n  }\n\n  /**\n   * Outputs information on console, adding module name and reference\n   * @param {string} ref - Reference information to log after module name\n   * @param {any[]} data - data to log on console\n   */\n  static warn(ref=\"\", data=[]){\n    console.warn(...DEBUG_TAG, ref, ...data);\n  }\n\n  /**\n   * Logs an error to the console and/or UI notification\n   * @param {string} strRef - Reference string for the error\n   * @param {object} options - Error logging configuration\n   * @param {boolean} [options.ui=false] - Whether to show UI notification\n   * @param {boolean} [options.console=true] - Whether to log to console\n   * @param {boolean} [options.permanent=false] - Whether UI notification should be permanent\n   * @static\n   */\n  static logError(strRef, options){ // = { ui:false, console:true, permanent:false }) {\n      if(options.ui){\n          // console.log(ui.notifications);\n          ui.notifications?.error(strRef, { localize: true, permanent: options.permanent });\n      }\n      if(options.console) console.error(...DEBUG_TAG, strRef);\n  }\n}\n\n","export const SETTING_INPUT = {\n  select: \"select\", \n  checkbox: \"checkbox\",\n  text: \"text\",\n  number: \"number\"\n}\n\nexport const SETTING_SCOPE = {\n  client: \"client\",\n  world: \"world\"\n}\n\nexport const MODULE_SETTINGS = {\n  lastUpdateId: \"lastUpdateId\",\n  // Add other module settings here...\n}\n\nexport const ICON_SIZES = {\n  small: { name: 'small', size: '36px'},\n  regular: { name: 'regular', size: '42px'},\n}\n\nexport const BORDER_COLOR_TYPES = {\n  playerColor: { name: 'playerColor'},\n  rollType: { name: 'rollType'},\n  none: {\n    name: 'none'\n  }\n}\n\nexport const THEMES = [\n  {\n    label: 'Carolingian Teal',\n    className: '',\n    colorPreview: [\n      'rgb(62, 62, 88)',\n      'rgb(68, 147, 173)'\n    ]\n  },\n  {\n    label: \"Gold and Chocolate\",\n    className: 'crlngn-theme-gold-chocolate',\n    colorPreview: [\n      'rgb(34, 25, 25)',\n      'rgb(164, 138, 51)'\n    ]\n  },\n  {\n    label: \"Royal Blood\",\n    className: 'crlngn-theme-royal-blood',\n    colorPreview: [\n      'rgb(40, 31, 49)',\n      'rgb(127, 18, 36)'\n    ]\n  },\n  {\n    label: \"Dark Sorcery\",\n    className: 'crlngn-theme-dark-sorcery',\n    colorPreview: [\n      'rgb(31, 47, 49)',\n      'rgb(94, 57, 127)'\n    ]\n  },\n  {\n    label: \"Tangerine\",\n    className: 'crlngn-theme-tangerine',\n    colorPreview: [\n      'rgb(40, 31, 49)',\n      'rgb(220, 120, 43)'\n    ]\n  }\n];\n\nexport function getSettings() { \n  return {\n    customFontsMenu: {\n      tag: \"custom-font-families\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.label\"),\n      title: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.title\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.hint\"),\n      description: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.description\"),\n      propType: Object,\n      inputType: SETTING_INPUT.button,\n      fields: [\n        'uiFontBody',\n        'uiFontTitles',\n        'journalFontBody',\n        'journalFontTitles'\n      ],\n      default: {\n        uiFontBody: `\"Work Sans\", Arial, sans-serif`,\n        uiFontTitles: `\"Roboto Slab\", Arial, sans-serif`,\n        journalFontBody: `\"Work Sans\", Arial, sans-serif`, \n        journalFontTitles: `\"Roboto Slab\", Arial, sans-serif`\n      },\n      scope: SETTING_SCOPE.world,\n      config: false, \n      requiresReload: false \n    },\n\n    themeAndStylesMenu: {\n      tag: \"theme-styles-menu\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.label\"),\n      title: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.title\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.hint\"),\n      propType: String,\n      fields: [\n        \"colorTheme\", \n        \"adjustOtherModules\", \n        \"customStyles\" \n      ],\n      default: {\n        colorTheme: '',\n        adjustOtherModules: false,\n        customStyles: ''\n      },\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n\n    chatMessagesMenu: {\n      tag: \"chat-messages-menu\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.hint\"),\n      propType: Object,\n      inputType: SETTING_INPUT.button,\n      fields: [\n        \"enableChatStyles\",\n        \"chatBorderColor\"\n      ],\n      default: { \n        enableChatStyles: true,\n        chatBorderColor: BORDER_COLOR_TYPES.playerColor.name\n      },\n      scope: SETTING_SCOPE.client,\n      config: false,\n      requiresReload: false\n    },\n\n    leftControlsMenu: {\n      tag: \"left-controls-menu\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.hint\"),\n      propType: Object,\n      inputType: SETTING_INPUT.button,\n      fields: [\n        \"controlsBottomBuffer\",\n        \"controlsIconSize\",\n        \"controlsAutoHide\",\n        \"hideFoundryLogo\"\n      ],\n      default: { \n        bottomBuffer: 200,\n        iconSize: ICON_SIZES.small.name,\n        autoHideSecondary: false,\n        hideFoundryLogo: true\n      },\n      scope: SETTING_SCOPE.client,\n      config: false,\n      requiresReload: false\n    },\n\n    cameraDockMenu: {\n      tag: \"camera-dock-menu\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.hint\"),\n      propType: Object,\n      inputType: SETTING_INPUT.button,\n      fields: {\n        enableFloatingDock: { \n          tag: \"enable-floating-camera-dock\", \n          label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.enableFloatingDock.label\"), \n          hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.enableFloatingDock.hint\"), \n          inputType: SETTING_INPUT.checkbox\n        },\n        dockPosX: {\n          tag: \"camera-dock-x\",\n          label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockPosX.label\"),\n          hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockPosX.hint\"),\n          inputType: SETTING_INPUT.number\n        },\n        dockPosY: {\n          tag: \"camera-dock-y\",\n          label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockPosY.label\"),\n          hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockPosY.hint\"),\n          inputType: SETTING_INPUT.number\n        },\n        dockWidth: {\n          tag: \"camera-dock-width\",\n          label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockWidth.label\"),\n          hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockWidth.hint\"),\n          inputType: SETTING_INPUT.number\n        },\n        dockHeight: {\n          tag: \"camera-dock-height\",\n          label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockHeight.label\"),\n          hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.fields.dockHeight.hint\"),\n          inputType: SETTING_INPUT.number\n        },\n      },\n      default: {\n        enableFloatingDock: true,\n        dockPosX: 0,\n        dockPosY: 120,\n        dockWidth: 140,\n        dockHeight: 140\n      },\n      scope: SETTING_SCOPE.client,\n      config: false, \n      requiresReload: false \n    },\n\n    sceneNavMenu: {\n      tag: \"scene-nav-menu\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.hint\"),\n      propType: Object,\n      inputType: SETTING_INPUT.button,\n      fields: [\n        \"sceneNavEnabled\",\n        \"navFoldersEnabled\",\n        \"showFolderListOnClick\",\n        \"navStartCollapsed\",\n        \"showNavOnHover\"\n      ],\n      default: {\n        sceneNavEnabled: true,\n        navFoldersEnabled: true,\n        navStartCollapsed: false,\n        showFolderListOnClick: false,\n        showNavOnHover: false\n      },\n      scope: SETTING_SCOPE.client,\n      config: false, \n      requiresReload: true \n    },\n\n    // sceneNavMenu: {\n    //   tag: \"scene-nav-menu\", \n    //   label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.label\"),\n    //   hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.hint\"),\n    //   propType: Object,\n    //   inputType: SETTING_INPUT.button,\n    //   fields: {\n    //     sceneNavEnabled: { \n    //       tag: \"scene-nav-enabled\", \n    //       label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.sceneNavEnabled.label\"), \n    //       hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.sceneNavEnabled.hint\"), \n    //       inputType: SETTING_INPUT.checkbox\n    //     },\n    //     showNavOnHover: {\n    //       tag: \"show-nav-on-hover\", \n    //       label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.showNavOnHover.label\"), \n    //       hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.showNavOnHover.hint\"), \n    //       inputType: SETTING_INPUT.checkbox\n    //     }\n    //   },\n    //   default: {\n    //     sceneNavEnabled: true,\n    //     showNavOnHover: false\n    //   },\n    //   scope: SETTING_SCOPE.client,\n    //   config: false, \n    //   requiresReload: true \n    // },\n\n    sceneNavEnabled: { \n      tag: \"scene-nav-enabled\", \n      oldName: \"sceneNavEnabled\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.sceneNavEnabled.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.sceneNavEnabled.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    navFoldersEnabled: { \n      tag: \"nav-folders-enabled\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.navFoldersEnabled.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.navFoldersEnabled.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    navFoldersForPlayers: { \n      tag: \"nav-folders-for-players\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.navFoldersForPlayers.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.navFoldersForPlayers.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: false, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    navStartCollapsed: { \n      tag: \"nav-start-collapsed\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.navStartCollapsed.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.navStartCollapsed.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox,\n      default: false, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    showFolderListOnClick: { \n      tag: \"nav-folders-list-on-click\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.showFolderListOnClick.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.showFolderListOnClick.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: false, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    showNavOnHover: { \n      tag: \"show-nav-on-hover\", \n      oldName: \"showNavOnHover\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.showNavOnHover.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.fields.showNavOnHover.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: false, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    sceneNavCollapsed: { \n      tag: \"scene-nav-collapsed\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavCollapsed.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavCollapsed.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },  \n\n    sceneNavPos: { \n      tag: \"scene-nav-pos\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavPos.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavPos.hint\"), \n      propType: Number, \n      inputType: SETTING_INPUT.number, \n      default: 0, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n\n    /*\n    enableChatStyles: { \n      tag: \"enable-chat-styles\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.enableChatStyles.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.enableChatStyles.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: true, \n      requiresReload: true \n    },\n    */\n\n    enableMacroLayout: { \n      tag: \"enable-macro-layout\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.enableMacroLayout.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.enableMacroLayout.hint\"), \n      propType: Boolean,\n      inputType: SETTING_INPUT.checkbox,\n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: true, \n      requiresReload: false \n    },\n\n    collapseMacroBar: { \n      tag: \"collapse-macro-bar\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.collapseMacroBar.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.collapseMacroBar.hint\"), \n      propType: Boolean,\n      inputType: SETTING_INPUT.checkbox,\n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: true, \n      requiresReload: false \n    },\n\n    /* DARK MODE */\n    enforceDarkMode: { \n      tag: \"enforce-dark-mode\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.enforceDarkMode.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.enforceDarkMode.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox, \n      default: true, \n      scope: SETTING_SCOPE.world, \n      config: true \n    },  \n\n    autoHidePlayerList: { \n      tag: \"auto-hide-player-list\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.autoHidePlayersList.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.autoHidePlayersList.hint\"), \n      propType: Boolean,\n      inputType: SETTING_INPUT.checkbox,\n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: true, \n      requiresReload: false \n    },\n\n    debugMode: { \n      tag: \"debug-mode\", \n      label: game.i18n.localize(\"CRLNGN_UI.settings.debugMode.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.debugMode.hint\"), \n      propType: Boolean,\n      inputType: SETTING_INPUT.checkbox,\n      default: false,\n      scope: SETTING_SCOPE.client,\n      config: true\n    },\n\n    /* NON-CONFIG SETTINGS */\n    /* FONTS */\n    uiFontBody: {\n      tag: \"ui-font-body\",\n      oldName: \"uiFont\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.uiBody.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.uiBody.hint\"),\n      inputType: SETTING_INPUT.text,\n      propType: String,\n      default: `\"Work Sans\", Arial, sans-serif`,\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n    uiFontTitles: {\n      tag: \"ui-font-titles\",\n      oldName: \"uiTitles\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.uiTitles.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.uiTitles.hint\"),\n      inputType: SETTING_INPUT.text,\n      propType: String,\n      default: `\"Roboto Slab\", Arial, sans-serif`,\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n    journalFontBody: {\n      tag: \"journal-font-body\",\n      oldName: \"journalBody\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.journalBody.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.journalBody.hint\"),\n      inputType: SETTING_INPUT.text,\n      propType: String,\n      default: `\"Work Sans\", Arial, sans-serif`,\n      scope: SETTING_SCOPE.world,\n      config: false\n    }, \n    journalFontTitles: {\n      tag: \"journal-font-titles\",\n      oldName: \"journalTitles\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.journalTitles.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.fields.journalTitles.hint\"),\n      inputType: SETTING_INPUT.text,\n      propType: String,\n      default: `\"Roboto Slab\", Arial, sans-serif`,\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n\n    /* THEME AND STYLES */\n    colorTheme:{\n      tag: \"color-theme\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.fields.colorTheme.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.fields.colorTheme.hint\"),\n      inputType: SETTING_INPUT.text,\n      propType: String,\n      default: \"\",\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n\n    adjustOtherModules: {\n      tag: \"adjust-other-modules\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.fields.adjustOtherModules.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.fields.adjustOtherModules.hint\"),\n      inputType: SETTING_INPUT.checkbox,\n      propType: Boolean,\n      default: false,\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n\n    customStyles:{\n      tag: \"custom-styles\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.fields.customStyles.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.fields.customStyles.hint\"),\n      inputType: SETTING_INPUT.text,\n      propType: String,\n      default: \"\",\n      scope: SETTING_SCOPE.world,\n      config: false\n    },\n\n    /* CHAT STYLES */\n    chatBorderColor: {\n      tag: \"chat-border-color\",\n      oldName: \"borderColor\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.borderColor.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.borderColor.hint\"),\n      options: {\n        playerColor: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.borderColor.options.playerColor\"), \n        rollType: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.borderColor.options.rollType\"), \n        none: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.borderColor.options.none\")\n      }, \n      propType: String, \n      inputType: SETTING_INPUT.text, \n      default: BORDER_COLOR_TYPES.playerColor.name, \n      scope: SETTING_SCOPE.client, \n      config: false \n    },\n    enableChatStyles:{\n      tag: \"enable-chat-styles\", \n      oldName: \"enableChatStyles\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.enableChatStyles.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.fields.enableChatStyles.hint\"), \n      propType: Boolean, \n      inputType: SETTING_INPUT.checkbox,\n      default: true, \n      scope: SETTING_SCOPE.client, \n      config: false,\n      requiresReload: true \n    },\n\n    /* CONTROLS SETTINGS */\n    controlsBottomBuffer:{\n      tag: \"control-bottom-buffer\",\n      oldName: \"bottomBuffer\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.bottomBuffer.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.bottomBuffer.hint\"),\n      propType: Number,\n      inputType: SETTING_INPUT.number,\n      default: 200,\n      scope: SETTING_SCOPE.client,\n      config: false\n    }, \n    controlsIconSize: {\n      tag: \"control-icon-size\",\n      oldName: \"iconSize\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.iconSize.label\"),\n      hint: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.iconSize.hint\"),\n      inputType: SETTING_INPUT.select, \n      options: {\n        small: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.iconSize.options.small\"), \n        regular: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.iconSize.options.regular\")\n      },\n      propType: String,\n      default: ICON_SIZES.small.name,\n      scope: SETTING_SCOPE.client,\n      config: false\n    },\n    controlsAutoHide: {\n      tag: \"auto-hide-secondary-controls\",\n      oldName: \"autoHideSecondary\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.autoHideSecondary.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.autoHideSecondary.hint\"), \n      inputType: SETTING_INPUT.checkbox,\n      propType: Boolean,\n      default: false,\n      scope: SETTING_SCOPE.client,\n      config: false\n    },\n    hideFoundryLogo: {\n      tag: \"hide-foundry-logo\",\n      oldName: \"hideFoundryLogo\",\n      label: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.hideFoundryLogo.label\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.fields.hideFoundryLogo.hint\"), \n      inputType: SETTING_INPUT.checkbox,\n      propType: Boolean,\n      default: true,\n      scope: SETTING_SCOPE.client,\n      config: false\n    },\n\n    //\n    lastUpdateId: {\n      tag: 'last-update-id',\n      label: \"\",/*game.i18n.localize(\"CRLNGN_UI.ui.updates.label\"), */\n      hint: \"\",/*game.i18n.localize(\"CRLNGN_UI.ui.updates.hint\"), */\n      propType: String,\n      scope: SETTING_SCOPE.world,\n      config: false,\n      default: ''\n    },\n\n  }\n\n}","import { getSettings } from \"../../constants/Settings.mjs\";\nimport { LogUtil } from \"../LogUtil.mjs\";\nimport { SettingsUtil } from \"../SettingsUtil.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Camera Dock Settings application for managing camera-related configurations.\n * Provides a form interface for users to customize camera dock behavior and appearance.\n * @extends {HandlebarsApplicationMixin(ApplicationV2)}\n */\nexport class CameraDockSettings extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * Default application options\n   * @static\n   * @returns {object} Configuration object containing default settings for the application\n   */\n  static get DEFAULT_OPTIONS() {\n    const SETTINGS = getSettings();\n    \n    return {\n      id: SETTINGS.cameraDockMenu.tag,\n      actions: {\n        redefine: CameraDockSettings.#onReset,\n      },\n      // classes: [\"standard-form\"],\n      form: {\n        handler: CameraDockSettings.#onSubmit,\n        closeOnSubmit: true,\n      },\n      position: {\n        width: 480,\n        height: \"auto\",\n      },\n      tag: \"form\",\n      window: {\n        icon: \"fas fa-camera\",\n        title: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.title\"),\n        contentClasses: [\"standard-form\", \"crlngn\"],\n        resizable: false\n      }\n    }\n  }\n\n  // Define template parts\n  /**\n   * Template parts used for rendering the application\n   * @static\n   */\n  static PARTS = {\n    content: {\n      template: \"modules/crlngn-ui/templates/camera-dock-settings.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\"\n      // \"templates/generic/custom-fonts-settings-footer.hbs\",\n    },\n  };\n  \n  /**\n   * Get the localized title for the settings dialog\n   * @returns {string} Localized title string\n   */\n  get title() {\n    return game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.title\");\n    // return `My Module: ${game.i18n.localize(this.options.window.title)}`;\n  }\n\n\n  /** \n   * Handles form submission and updates FoundryVTT settings.\n   * Uses `foundry.utils.expandObject()` to parse form data.\n   */\n  /**\n   * Handles form submission and updates FoundryVTT settings\n   * @private\n   * @static\n   * @param {Event} event - The form submission event\n   * @param {HTMLFormElement} form - The form element\n   * @param {FormData} formData - The form data object\n   * @returns {Promise<void>}\n   */\n  static async #onSubmit(event, form, formData) {\n    const SETTINGS = getSettings();\n    let controlSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n    let isFloating = controlSettings.enableFloatingDock;\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Convert FormData into an object with proper keys and handle checkboxes\n    const rawData = formData.object;\n    // Ensure checkbox fields are properly represented as booleans\n    if (!rawData.hasOwnProperty('enableFloatingDock')) {\n      rawData.enableFloatingDock = false;\n    }\n    const settings = foundry.utils.expandObject(rawData);\n\n    await SettingsUtil.set(SETTINGS.cameraDockMenu.tag, settings);\n    controlSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n\n    LogUtil.log(\"Saving settings:\", [SETTINGS.cameraDockMenu.tag, form, formData.object, settings, controlSettings]); // Debugging\n\n    ui.notifications.info(game.i18n.localize('CRLNGN_UI.ui.notifications.settingsUpdated'));\n\n    if(controlSettings.enableFloatingDock != isFloating){\n      location.reload();\n    }\n  }\n\n  /**\n   * Resets form fields to their default values\n   * @private\n   * @static\n   * @param {Event} a - The reset event\n   * @param {HTMLElement} b - The form element\n   * @returns {Promise<void>}\n   */\n  static async #onReset(a, b){\n    const SETTINGS = getSettings();\n    const html = this.element;\n    const inputs = html.querySelectorAll(\"input, select\");\n    const defaults = SETTINGS.cameraDockMenu.default;\n\n    inputs.forEach(inputField => {\n      inputField.value = defaults[inputField.name];\n      if(inputField.type==='checkbox'){\n        inputField.checked = defaults[inputField.name];\n      }\n    })\n\n    LogUtil.log(\"#onReset\", [a, b, SETTINGS.cameraDockMenu.default]);\n  }\n\n  /**\n   * Prepare context to be sent to handlebars template\n   * @param {*} options \n   * @returns \n   */\n  /**\n   * Prepares the context data for the template\n   * @protected\n   * @param {object} options - Application options\n   * @returns {object} The prepared context object\n   */\n  _prepareContext(options) {\n    const SETTINGS = getSettings();\n    const setting = {\n      ...SettingsUtil.get(SETTINGS.cameraDockMenu.tag),\n      default: {\n        ...SETTINGS.cameraDockMenu.default\n      },\n      fields: { ...SETTINGS.cameraDockMenu.fields },\n      buttons: [ \n        { type: \"button\", icon: \"\", label: \"CRLNGN_UI.settings.cameraDockMenu.reset\", action: 'redefine' },\n        { type: \"submit\", icon: \"\", label: \"CRLNGN_UI.settings.cameraDockMenu.save\" }\n      ]\n    }\n\n    LogUtil.log(\"_prepareContext\", [setting, options]);\n    return setting;\n  }\n\n  /**\n   * Prepare context that is specific to only a single rendered part.\n   *\n   * It is recommended to augment or mutate the shared context so that downstream methods like _onRender have\n   * visibility into the data that was used for rendering. It is acceptable to return a different context object\n   * rather than mutating the shared context at the expense of this transparency.\n   *\n   * @param {string} partId                         The part being rendered\n   * @param {ApplicationRenderContext} context      Shared context provided by _prepareContext\n   * @returns {Promise<ApplicationRenderContext>}   Context data for a specific part\n   * @protected\n   */\n  async _preparePartContext(partId, context) {\n    context.partId = `${partId}-${this.id}`;\n    LogUtil.log(\"_preparePartContext\",[partId, context]);\n    return context;\n  }\n\n  _onRender(context, options) {\n    LogUtil.log(\"_onRender\", [context, options]);\n  }\n\n\n}\n","import { getSettings } from \"../../constants/Settings.mjs\";\nimport { LogUtil } from \"../LogUtil.mjs\";\nimport { SettingsUtil } from \"../SettingsUtil.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Chat Messages Settings application for managing chat-related configurations.\n * Provides a form interface for customizing chat message appearance and behavior.\n * @extends {HandlebarsApplicationMixin(ApplicationV2)}\n */\nexport class ChatMessagesSettings extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * Default application options\n   * @static\n   * @returns {object} Configuration object containing default settings for the application\n   */\n  static get DEFAULT_OPTIONS() {\n    const SETTINGS = getSettings();\n\n    return {\n      id: SETTINGS.chatMessagesMenu.tag,\n      actions: {\n        redefine: ChatMessagesSettings.#onReset,\n      },\n      // classes: [\"standard-form\"],\n      form: {\n        handler: ChatMessagesSettings.#onSubmit,\n        closeOnSubmit: true,\n      },\n      position: {\n        width: 480,\n        height: \"auto\",\n      },\n      tag: \"form\",\n      window: {\n        icon: \"fas fa-cog\",\n        title: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.title\"),\n        contentClasses: [\"standard-form\", \"crlngn\"],\n        resizable: false\n      }\n    }\n  }\n\n  // Define template parts\n  /**\n   * Template parts used for rendering the application\n   * @static\n   */\n  static PARTS = {\n    content: {\n      template: \"modules/crlngn-ui/templates/chat-messages-settings.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\"\n      // \"templates/generic/custom-fonts-settings-footer.hbs\",\n    },\n  };\n  \n  /**\n   * Get the localized title for the settings dialog\n   * @returns {string} Localized title string\n   */\n  get title() {\n    return game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.title\");\n    // return `My Module: ${game.i18n.localize(this.options.window.title)}`;\n  }\n\n  /** \n   * Handles form submission and updates FoundryVTT settings.\n   * Uses `foundry.utils.expandObject()` to parse form data.\n   */\n  /**\n   * Handles form submission and updates chat message settings\n   * @private\n   * @static\n   * @param {Event} event - The form submission event\n   * @param {HTMLFormElement} form - The form element\n   * @param {FormData} formData - The form data object\n   * @returns {Promise<void>}\n   */\n  static async #onSubmit(event, form, formData) {\n    const SETTINGS = getSettings();\n    event.preventDefault();\n    event.stopPropagation();\n    const fieldNames = SETTINGS.chatMessagesMenu.fields;\n\n    // Convert FormData into an object with proper keys and handle checkboxes\n    const rawData = formData.object;\n    // Ensure checkbox fields are properly represented as booleans\n    fieldNames.forEach((fieldName) => {\n      if (SETTINGS[fieldName].inputType === 'checkbox' && !rawData.hasOwnProperty(fieldName)) {\n        rawData[fieldName] = false;\n      }\n    });\n    const settings = foundry.utils.expandObject(rawData);\n    const currBorderSettings = SettingsUtil.get(SETTINGS.chatBorderColor.tag);\n    LogUtil.log(\"Compared settings:\", [ settings.chatBorderColor, currBorderSettings ]);\n    \n    fieldNames.forEach((fieldName) => {\n      LogUtil.log(\"Saving setting >>\", [SETTINGS[fieldName].tag, settings[fieldName]]);\n      if(settings[fieldName] !== undefined) {\n        SettingsUtil.set(SETTINGS[fieldName].tag, settings[fieldName]);\n      }\n    });\n    \n    // if(settings.enforceDarkMode === undefined){\n    //   delete settings.enforceDarkMode;\n    // }\n\n    await SettingsUtil.set(SETTINGS.chatMessagesMenu.tag, settings);\n    // await SettingsUtil.set(SETTINGS.enforceDarkMode.tag, settings.enforceDarkMode);\n\n    const borderSettings = settings.chatBorderColor;\n    if(borderSettings !== currBorderSettings){\n      location.reload();\n    }\n\n    ui.notifications.info(game.i18n.localize('CRLNGN_UI.ui.notifications.settingsUpdated'));\n  }\n\n  /**\n   * Resets form fields to their default values\n   * @private\n   * @static\n   * @param {Event} a - The reset event\n   * @param {HTMLElement} b - The form element\n   * @returns {Promise<void>}\n   */\n  static async #onReset(a, b){\n    const SETTINGS = getSettings();\n    const html = this.element;\n    const inputs = html.querySelectorAll(\"input, select\");\n    const fieldNames = SETTINGS.chatMessagesMenu.fields;\n\n    const fields = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    inputs.forEach(inputField => {\n      inputField.value = fieldDefaults[inputField.name];\n    })\n  }\n\n  /**\n   * Prepare context to be sent to handlebars template\n   * @param {*} options \n   * @returns \n   */\n  /**\n   * Prepares the context data for the template\n   * @protected\n   * @param {object} options - Application options\n   * @returns {object} The prepared context object containing field values, defaults, and UI configuration\n   */\n  _prepareContext(options) {\n    const SETTINGS = getSettings();\n    const menuValues = SettingsUtil.get(SETTINGS.chatMessagesMenu.tag);\n    const fieldNames = SETTINGS.chatMessagesMenu.fields;\n    const fields = {};\n    const fieldValues = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      LogUtil.log(\"_prepareContext\", [SETTINGS[fieldName].oldName]);\n      if(SETTINGS[fieldName]) {\n        const value = SettingsUtil.get(SETTINGS[fieldName].tag);\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldValues[fieldName] = value!== undefined ? value : menuValues[SETTINGS[fieldName].oldName] || SETTINGS[fieldName].default;\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    LogUtil.log(\"_prepareContext\", [fieldValues, fieldDefaults]);\n\n    const setting = {\n      ...fieldValues,\n      // enforceDarkMode: SettingsUtil.get(SETTINGS.enforceDarkMode.tag),\n      default: { ...fieldDefaults },\n      isGM: game.user?.isGM,\n      fields: { ...fields },\n      buttons: [ \n        { type: \"button\", icon: \"\", label: \"CRLNGN_UI.settings.chatMessagesMenu.reset\", action: 'redefine' },\n        { type: \"submit\", icon: \"\", label: \"CRLNGN_UI.settings.chatMessagesMenu.save\" }\n      ]\n    }\n\n    LogUtil.log(\"_prepareContext\", [setting, options]);\n    return setting;\n  }\n\n  /**\n   * Prepare context that is specific to only a single rendered part.\n   *\n   * It is recommended to augment or mutate the shared context so that downstream methods like _onRender have\n   * visibility into the data that was used for rendering. It is acceptable to return a different context object\n   * rather than mutating the shared context at the expense of this transparency.\n   *\n   * @param {string} partId                         The part being rendered\n   * @param {ApplicationRenderContext} context      Shared context provided by _prepareContext\n   * @returns {Promise<ApplicationRenderContext>}   Context data for a specific part\n   * @protected\n   */\n  async _preparePartContext(partId, context) {\n    context.partId = `${partId}-${this.id}`;\n    LogUtil.log(\"_preparePartContext\",[partId, context]);\n    return context;\n  }\n\n  /**\n   * Handles post-render operations\n   * @protected\n   * @param {object} context - The render context\n   * @param {object} options - The render options\n   */\n  _onRender(context, options) {\n    const SETTINGS = getSettings();\n    // const html = this.element;\n    // html.querySelector(\"button[type=reset]\").addEventListener(\"click\", ChatMessagesSettings.#onReset);\n\n    const controlSettings = SettingsUtil.get(SETTINGS.chatMessagesMenu.tag);\n    LogUtil.log(\"_onRender\", [context, options, controlSettings]);\n  }\n\n\n}\n","import { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\n/**\n * Utility class providing general-purpose functionality for the module\n */\n/**\n * General utility functions\n */\nexport class GeneralUtil {\n  /**\n   * Checks if module is currently installed and active\n   * @param {string} moduleName \n   * @returns {boolean}\n   */\n  static isModuleOn(moduleName){\n    const module = game.modules?.get(moduleName);\n    // LogUtil.log(\"isModuleOn\", [module?.active]);\n    return Boolean(module?.active);\n  }\n\n  /**\n   * Finds and returns the first element matching the selector within the parent element\n   * @param {HTMLElement} parent - The parent element to search within\n   * @param {string} selector - CSS selector string\n   * @returns {HTMLElement|null} The first matching element or null if not found\n   */\n  static html(parent, selector) {\n    return parent.querySelector(selector);\n  }\n\n  /**\n   * Gets the full width of an element including margins and borders\n   * @param {HTMLElement} element - The element to measure\n   * @returns {number} The full width in pixels\n   */\n  static getFullWidth(element) {\n    const style = window.getComputedStyle(element);\n    if (style.width === '0px') {\n      return 0;\n    }\n    return element.offsetWidth;\n  }\n\n  /**\n   * Calculates the distance from the bottom of an element to the bottom of its offset parent\n   * @param {HTMLElement} element - The element to measure\n   * @returns {number} The offset from the bottom in pixels\n   */\n  static getOffsetBottom(element) {\n    const offsetTop = element.offsetTop;\n    const elementHeight = element.offsetHeight;\n    const offsetParent = element.offsetParent;\n    const parentHeight = offsetParent ? offsetParent.clientHeight : window.innerHeight;\n  \n    return parentHeight - (offsetTop + elementHeight);\n  }\n\n\n  /**\n   * Process stylesheets to extract font families\n   * @returns {Promise<Set<string>>} Set of font family names from stylesheets\n   * @private\n   */\n  static processStyleSheets = async () => {\n    // Get Foundry built-in fonts\n    const foundryFonts = new Set(Object.keys(CONFIG.fontDefinitions));\n    // LogUtil.log('Foundry built-in fonts:', [Array.from(foundryFonts)]);\n    \n    // Get custom fonts from settings\n    const customFontsObj = game.settings.get(\"core\", \"fonts\") || {};\n    const customFonts = Object.entries(customFontsObj).map(([fontFamily]) => fontFamily);\n    // LogUtil.log('Custom fonts from settings:', [customFonts]);\n  \n    // Get CSS imported fonts\n    const cssImportedFonts = new Set();\n    \n    for (const sheet of document.styleSheets) {\n      try {\n        // Handle stylesheet text content for @import rules\n        if (sheet.ownerNode) {\n          // Check if the stylesheet is from core Foundry or our module\n          const href = sheet.href || '';\n          const isFoundryCore = href.includes('/css/') || href.includes('/styles/');\n          const isOurModule = href.includes('/modules/crlngn-ui/');\n          \n          // Skip if not from core or our module\n          if (href && !isFoundryCore && !isOurModule) {\n            LogUtil.log('Skipping non-core/module stylesheet:', [href]);\n            continue;\n          }\n          \n          let cssText = '';\n          \n          if (sheet.ownerNode instanceof Element) {\n            // Get text content from style tags\n            if (sheet.ownerNode.tagName === 'STYLE') {\n              cssText = sheet.ownerNode.textContent;\n            }\n            // Get text content from link tags\n            else if (sheet.ownerNode.tagName === 'LINK') {\n              try {\n                const rules = sheet.cssRules || sheet.rules;\n                cssText = Array.from(rules).map(rule => rule.cssText).join('\\n');\n              } catch (e) {\n                LogUtil.warn('Could not read stylesheet rules:', [e]);\n              }\n            }\n          }\n          \n          LogUtil.log('Processing stylesheet:', [href || 'inline style']);\n\n          // Log the found CSS text for debugging\n          // LogUtil.log('Processing stylesheet text:', s[cssText.slice(0, 200) + '...']);\n\n          \n          // Extract URLs from @import statements\n          const importUrlRegex = /@import\\s+url\\(['\"]([^'\"]+)['\"]\\)/g;\n          let match;\n          \n          while ((match = importUrlRegex.exec(cssText)) !== null) {\n            let url = match[1]; // This is the actual URL\n\n            if (url.includes('fonts.googleapis.com')) {\n              // Extract font family names from Google Fonts URL\n              const familyMatch = url.match(/family=([^&]+)/);\n              if (familyMatch) {\n                const families = decodeURIComponent(familyMatch[1])\n                  .split('|') // Split multiple families\n                  .map(family => {\n                    // Remove weight/style variations\n                    return family.split(':')[0].replace(/\\+/g, ' ');\n                  });\n                \n                families.forEach(family => {\n                  cssImportedFonts.add(family);\n                  // LogUtil.log('Added Google Font family:', [family]);\n                });\n              }\n            } else {\n              // Skip relative path imports\n              if (url.startsWith('./') || url.startsWith('../')) {\n                LogUtil.log('Skipping relative import:', [url]);\n                continue;\n              }\n              \n              // For absolute paths or URLs, use as is\n              let resolvedUrl = url;\n\n              try {\n                const response = await fetch(resolvedUrl);\n                if (!response.ok) {\n                  LogUtil.warn('Error loading imported CSS:', [response.status]);\n                  continue;\n                }\n                const css = await response.text();\n                /** @type {RegExpMatchArray | null} */\n                const fontFaceRules = css.match(/@font-face\\s*{[^}]+}/g);\n                if (!fontFaceRules) continue;\n                \n                fontFaceRules.forEach(rule => {\n                  /** @type {RegExpMatchArray | null} */\n                  const fontFamilyMatch = rule.match(/font-family:\\s*['\"]?([^'\";]+)['\"]?/);\n                  if (fontFamilyMatch && fontFamilyMatch[1]) {\n                    const fontFamily = fontFamilyMatch[1].trim();\n                    cssImportedFonts.add(fontFamily);\n                  }\n                });\n              } catch (e) {\n                LogUtil.warn('Error processing imported CSS:', [e]);\n              }\n            }\n          }\n        }\n\n        // Check for @font-face rules in the current stylesheet\n        if (!sheet.href || sheet.href.startsWith(window.location.origin)) {\n          try {\n            const rules = sheet.cssRules || sheet.rules;\n            for (const rule of rules) {\n              if (rule instanceof CSSFontFaceRule) {\n                const fontFamily = rule.style.getPropertyValue('font-family')\n                  .replace(/['\"`]/g, '')\n                  .trim();\n                cssImportedFonts.add(fontFamily);\n                // LogUtil.log('Found font-face rule for:', [fontFamily]);\n              }\n            }\n          } catch (e) {\n            LogUtil.warn('Could not read stylesheet rules:', [e]);\n          }\n        }\n      } catch (e) {\n        LogUtil.warn('Error processing stylesheet:', [e]);\n      }\n    }\n    return cssImportedFonts;\n  }\n\n  /**\n   * Gets the offset bottom of an element\n   * @param {HTMLElement} element \n   * @returns {number}\n   */\n  static getOffsetBottom(element) {\n    const offsetTop = element.offsetTop;\n    const elementHeight = element.offsetHeight;\n    const offsetParent = element.offsetParent;\n    const parentHeight = offsetParent ? offsetParent.clientHeight : window.innerHeight;\n  \n    return parentHeight - (offsetTop + elementHeight);\n  }\n\n\n  /**\n   * Retrieves a list of all available fonts\n   * @returns {Promise<string[]>}\n   */\n  static async getAllFonts() {\n    // Get Foundry built-in fonts\n    const foundryFonts = new Set(Object.keys(CONFIG.fontDefinitions));\n    \n    // Get custom fonts from settings\n    const customFontsObj = game.settings.get(\"core\", \"fonts\") || {};\n    const customFonts = Object.entries(customFontsObj).map(([fontFamily]) => fontFamily);\n  \n    // Get CSS imported fonts\n    const cssImportedFonts = await this.processStyleSheets();\n  \n    // Log what we found for debugging\n    LogUtil.log('Found fonts:', [{\n      foundry: Array.from(foundryFonts),\n      custom: customFonts,\n      cssImported: Array.from(cssImportedFonts)\n    }]);\n  \n    // Combine all fonts, filter, clean, sort\n    const allFonts = Array.from(new Set([\n      ...foundryFonts,\n      ...customFonts,\n      ...cssImportedFonts\n    ]))\n    .filter(f => !/FontAwesome|Font Awesome|FoundryVTT/.test(f))\n    .map(f => f.replace(/['\"]/g, '').trim())\n    .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n\n    return allFonts || [];\n  }\n\n  // Helper function to format font names\n  /**\n   * Formats a font name by cleaning it and wrapping it in quotes if it contains spaces\n   * @param {string} fontName - The font name to format\n   * @returns {string} The formatted font name\n   */\n  static wrapFontName = (fontName) => {\n    const cleanName = fontName.replace(/['\"`]/g, '');\n    return cleanName.includes(' ') ? `\"${cleanName}\"` : cleanName;\n  }\n\n  /**\n   * Adds CSS variables to a style element\n   * @param {string} varName \n   * @param {string} varValue \n   */\n  static addCSSVars(varName, varValue) {\n    let bodyStyle = document.querySelector('#crlngn-ui-vars');\n    \n    if (!bodyStyle) {\n      // Create style element if it doesn't exist\n      const body = document.querySelector('body');\n      bodyStyle = document.createElement('style');\n      bodyStyle.id = 'crlngn-ui-vars';\n      bodyStyle.textContent = 'body.crlngn-ui {\\n}\\n';\n      body.prepend(bodyStyle);\n    }\n    \n    // Parse the current CSS content\n    let cssText = bodyStyle.textContent;\n    \n    // Find or create the rule block\n    let ruleStart = cssText.indexOf('body.crlngn-ui {');\n    let ruleEnd = cssText.indexOf('}', ruleStart);\n    \n    if (ruleStart === -1) {\n      // If rule doesn't exist, create it\n      cssText = 'body.crlngn-ui {\\n}\\n';\n      ruleStart = 0;\n      ruleEnd = cssText.indexOf('}');\n    }\n    \n    // Get all the current declarations\n    const rulePart = cssText.substring(ruleStart + 'body.crlngn-ui {'.length, ruleEnd);\n    \n    // Split by semicolons to get individual declarations\n    const declarations = rulePart.split(';')\n      .map(decl => decl.trim())\n      .filter(decl => decl !== '');\n    \n    // Create a map of existing variables\n    const varsMap = {};\n    declarations.forEach(decl => {\n      const parts = decl.split(':');\n      if (parts.length >= 2) {\n        const name = parts[0].trim();\n        const value = parts.slice(1).join(':').trim(); // Handle values that might contain colons\n        if (name) varsMap[name] = value;\n      }\n    });\n    \n    // Format the value if it appears to need quotes\n    // For string values used in content properties (i18n text)\n    if (varName.includes('i18n') && \n        typeof varValue === 'string' && \n        !varValue.startsWith('\"') && \n        !varValue.startsWith(\"'\") && \n        !varValue.match(/^url\\(|^rgba?\\(|^hsla?\\(/)) {\n      varValue = `\"${varValue}\"`;\n    }\n    \n    // Update or add the new variable\n    varsMap[varName] = varValue;\n    \n    // Rebuild the rule content\n    const newRuleContent = Object.entries(varsMap)\n      .map(([name, value]) => `  ${name}: ${value};`)\n      .join('\\n');\n    \n    // Rebuild the entire CSS\n    const newCss = \n      cssText.substring(0, ruleStart) + \n      'body.crlngn-ui {\\n' + \n      newRuleContent + \n      '\\n}' + \n      cssText.substring(ruleEnd + 1);\n    \n    // Update the style element\n    bodyStyle.textContent = newCss;\n  }\n\n  /**\n   * Adds custom CSS to a style element\n   * @param {string} content \n   */\n  static addCustomCSS(content) {\n    let customStyle = document.querySelector('#crlngn-ui-custom-css');\n    \n    if (!customStyle) {\n      // Create style element if it doesn't exist\n      const body = document.querySelector('body');\n      customStyle = document.createElement('style');\n      customStyle.id = 'crlngn-ui-custom-css';\n      customStyle.textContent = 'body.crlngn-ui {\\n}\\n';\n      body.appendChild(customStyle);\n    }\n\n    customStyle.textContent = content;\n  }\n}\n","import { getSettings } from \"../../constants/Settings.mjs\";\nimport { GeneralUtil } from \"../GeneralUtil.mjs\";\nimport { LogUtil } from \"../LogUtil.mjs\";\nimport { SettingsUtil } from \"../SettingsUtil.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Custom Fonts Settings application for managing font configurations.\n * Provides a form interface with dropdown font selection and keyboard navigation.\n * @extends {HandlebarsApplicationMixin(ApplicationV2)}\n */\nexport class CustomFontsSettings extends HandlebarsApplicationMixin(ApplicationV2) {\n  /** @type {HTMLElement} Private static reference to the form element */\n  static #element;\n  /**\n   * Default application options\n   * @static\n   * @returns {object} Configuration object containing default settings for the application\n   */\n  static get DEFAULT_OPTIONS() {\n    const SETTINGS = getSettings();\n\n    return {\n      id: SETTINGS.customFontsMenu.tag,\n      actions: {\n        redefine: CustomFontsSettings.#onReset,\n      },\n      form: {\n        handler: CustomFontsSettings.#onSubmit,\n        closeOnSubmit: true,\n      },\n      position: {\n        width: 480,\n        height: \"auto\",\n      },\n      tag: \"form\",\n      window: {\n        icon: \"fas fa-text\",\n        title: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.title\"),\n        // Add datalists to your content classes\n        contentClasses: [\"standard-form\", \"datalists\"],\n        resizable: false\n      }\n    }\n  }\n\n  // Define template parts\n  /**\n   * Template parts used for rendering the application\n   * @static\n   */\n  static PARTS = {\n    content: {\n      template: \"modules/crlngn-ui/templates/custom-fonts-settings.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\"\n      // \"templates/generic/custom-fonts-settings-footer.hbs\",\n    },\n  };\n  \n  /**\n   * Get the localized title for the settings dialog\n   * @returns {string} Localized title string\n   */\n  get title() {\n    return game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.title\");\n  }\n\n  /** \n   * Handles form submission and updates FoundryVTT settings.\n   * Uses `foundry.utils.expandObject()` to parse form data.\n   */\n  /**\n   * Handles form submission and updates font settings\n   * @private\n   * @static\n   * @param {Event} event - The form submission event\n   * @param {HTMLFormElement} form - The form element\n   * @param {FormData} formData - The form data object\n   * @returns {Promise<void>}\n   */\n  static async #onSubmit(event, form, formData) {\n    const SETTINGS = getSettings();\n    event.preventDefault();\n    event.stopPropagation();\n    const fieldNames = SETTINGS.customFontsMenu.fields;\n\n    // Convert FormData into an object with proper keys\n    const settings = foundry.utils.expandObject(formData.object);\n\n    fieldNames.forEach((fieldName) => {\n      if(settings[fieldName] !== undefined) {\n        LogUtil.log(\"Saving setting:\", [settings[fieldName]]);\n        SettingsUtil.set(SETTINGS[fieldName].tag, settings[fieldName]);\n      }\n    });\n\n    // For compatibility - to be removed in future version\n    SettingsUtil.set(SETTINGS.customFontsMenu.tag, settings);\n\n    ui.notifications.info(game.i18n.localize('CRLNGN_UI.ui.notifications.settingsUpdated'));\n  }\n\n  /**\n   * Prepare context to be sent to handlebars template\n   * @param {*} options \n   * @returns {Promise<Object>}\n   */\n  async _prepareContext(options) {\n    const SETTINGS = getSettings();\n    const menuValues = SettingsUtil.get(SETTINGS.customFontsMenu.tag);\n    const fieldNames = SETTINGS.customFontsMenu.fields;\n\n    const fields = {};\n    const fieldValues = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        const value = SettingsUtil.get(SETTINGS[fieldName].tag);\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldValues[fieldName] = value!== undefined ? value : menuValues[SETTINGS[fieldName].oldName] || SETTINGS[fieldName].default;\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    const setting = {\n      ...fieldValues,\n      default: {...fieldDefaults},\n      fontList: await GeneralUtil.getAllFonts(),\n      fields: { \n        ...fields\n      },\n      buttons: [\n        { type: \"button\", icon: \"\", label: \"CRLNGN_UI.settings.customFontsMenu.reset\", action: 'redefine' },\n        { type: \"submit\", icon: \"\", label: \"CRLNGN_UI.settings.customFontsMenu.save\" }\n      ]\n    };\n\n    return setting;\n  }\n\n  /**\n   * Prepare context that is specific to only a single rendered part.\n   *\n   * It is recommended to augment or mutate the shared context so that downstream methods like _onRender have\n   * visibility into the data that was used for rendering. It is acceptable to return a different context object\n   * rather than mutating the shared context at the expense of this transparency.\n   *\n   * @param {string} partId                         The part being rendered\n   * @param {ApplicationRenderContext} context      Shared context provided by _prepareContext\n   * @returns {Promise<ApplicationRenderContext>}   Context data for a specific part\n   * @protected\n   */\n  async _preparePartContext(partId, context) {\n    context.partId = `${partId}-${this.id}`;\n    // LogUtil.log(\"_preparePartContext\",[partId, context]);\n    return context;\n  }\n\n  /**\n   * Handles post-render operations including dropdown setup and event listeners\n   * @protected\n   * @param {object} context - The render context\n   * @param {object} options - The render options\n   */\n  _onRender(context, options) {\n    CustomFontsSettings.#element = this.element;\n    \n    // Handle input focus and blur\n    const inputs = CustomFontsSettings.#element.querySelectorAll('input[type=\"text\"]');\n    inputs.forEach(input => {\n      const wrapper = input.closest('.dropdown-wrapper');\n      const dropdown = wrapper?.querySelector('.dropdown-options');\n      \n      if (!wrapper || !dropdown) return;\n  \n      // Show dropdown on input focus\n      const onFocus = () => {\n        CustomFontsSettings.#closeAllDropdowns();\n        dropdown.classList.add('active');\n      };\n      input.addEventListener('focus', onFocus);\n      input.addEventListener('click', onFocus);\n\n      // Add keyboard navigation\n      input.addEventListener('keydown', (e) => {\n        const isActive = dropdown.classList.contains('active');\n        const options = Array.from(dropdown.querySelectorAll('.dropdown-option'));\n        let currentIndex = options.findIndex(opt => opt.classList.contains('highlighted'));\n        \n        // Handle arrow down/up\n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n          e.preventDefault(); // Prevent cursor movement in input\n          \n          if (!isActive) {\n            dropdown.classList.add('active');\n          }\n          \n          // Remove current highlight\n          options.forEach(opt => opt.classList.remove('highlighted'));\n          \n          // Calculate new index\n          if (currentIndex === -1) {\n            currentIndex = e.key === 'ArrowDown' ? 0 : options.length - 1;\n          } else {\n            currentIndex = e.key === 'ArrowDown' \n              ? (currentIndex + 1) % options.length \n              : (currentIndex - 1 + options.length) % options.length;\n          }\n          \n          // Add highlight to new option and scroll into view\n          if (options[currentIndex]) {\n            options[currentIndex].classList.add('highlighted');\n            options[currentIndex].scrollIntoView({ block: 'nearest' });\n          }\n        }\n        \n        // Handle Enter key\n        else if (e.key === 'Enter') {\n          e.preventDefault();\n          \n          if (isActive && currentIndex !== -1 && options[currentIndex]) {\n            // Simulate click on the highlighted option\n            options[currentIndex].click();\n          }\n        }\n        \n        // Handle Escape key\n        else if (e.key === 'Escape') {\n          dropdown.classList.remove('active');\n        }\n      });\n\n      // Handle clicking outside\n      document.addEventListener('click', (e) => {\n        if (!wrapper.contains(e.target)) {\n          dropdown.classList.remove('active');\n        }\n      });\n    });\n  \n    // Handle option selection\n    const dropOptions = CustomFontsSettings.#element.querySelectorAll('.dropdown-option');\n    dropOptions.forEach(option => {\n      // Add mouse hover effect that syncs with keyboard highlighting\n      option.addEventListener('mouseenter', () => {\n        // Remove highlight from all options\n        const allOptions = option.closest('.dropdown-options').querySelectorAll('.dropdown-option');\n        allOptions.forEach(opt => opt.classList.remove('highlighted'));\n        \n        // Add highlight to current option\n        option.classList.add('highlighted');\n      });\n      \n      option.addEventListener('click', (e) => {\n        const input = option.closest('.dropdown-wrapper').querySelector('input');\n        // Get the value and handle potential quote escaping\n        let value = option.dataset.value;\n        \n        // If the value contains spaces but doesn't have quotes, add them\n        if (value.includes(' ') && !value.startsWith('\"')) {\n          value = `\"${value}\"`;\n        }\n        // If the value is already properly quoted, use it as is\n        else if (value.startsWith('&quot;')) {\n          value = value.replace(/&quot;/g, '\"');\n        }\n        \n        input.value = value;\n        const dropdown = option.closest('.dropdown-options');\n        dropdown.classList.remove('active');\n        \n        // Return focus to input after selection\n        // input.focus();\n      });\n    });\n  }\n  \n  /**\n   * Closes all open font dropdown menus\n   * @private\n   * @static\n   */\n  static #closeAllDropdowns() {\n    CustomFontsSettings.#element.querySelectorAll('.dropdown-options').forEach(dropdown => {\n      dropdown.classList.remove('active');\n    });\n  }\n  \n\n  /**\n   * Resets form fields to their default values\n   * @private\n   * @static\n   * @param {Event} a - The reset event\n   * @param {HTMLElement} b - The form element\n   * @returns {Promise<void>}\n   */\n  static async #onReset(a, b){\n    const SETTINGS = getSettings();\n    const html = this.element;\n    const inputs = html.querySelectorAll(\"input[type=text]\");\n    // const menuValues = SettingsUtil.get(SETTINGS.customFontsMenu.tag);\n    const fieldNames = SETTINGS.customFontsMenu.fields;\n\n    const fields = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    inputs.forEach(inputField => {\n      inputField.value = fieldDefaults[inputField.name];\n    })\n  }\n\n  \n\n}","import { getSettings } from \"../../constants/Settings.mjs\";\nimport { LogUtil } from \"../LogUtil.mjs\";\nimport { SettingsUtil } from \"../SettingsUtil.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Left Controls Settings application for managing left sidebar control configurations.\n * Provides a form interface for customizing the behavior and appearance of left-side controls.\n * @extends {HandlebarsApplicationMixin(ApplicationV2)}\n */\nexport class LeftControlsSettings extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * Default application options\n   * @static\n   * @returns {object} Configuration object containing default settings for the application\n   */\n  static get DEFAULT_OPTIONS() {\n    const SETTINGS = getSettings();\n    return {\n      id: SETTINGS.leftControlsMenu.tag,\n      actions: {\n        redefine: LeftControlsSettings.#onReset,\n      },\n      // classes: [\"standard-form\"],\n      form: {\n        handler: LeftControlsSettings.#onSubmit,\n        closeOnSubmit: true,\n      },\n      position: {\n        width: 480,\n        height: \"auto\",\n      },\n      tag: \"form\",\n      window: {\n        icon: \"fas fa-cog\",\n        title: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.title\"),\n        contentClasses: [\"standard-form\", \"crlngn\"],\n        resizable: false\n      }\n    }\n  }\n\n  // Define template parts\n  /**\n   * Template parts used for rendering the application\n   * @static\n   */\n  static PARTS = {\n    content: {\n      template: \"modules/crlngn-ui/templates/left-controls-settings.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\"\n      // \"templates/generic/custom-fonts-settings-footer.hbs\",\n    },\n  };\n  \n  /**\n   * Get the localized title for the settings dialog\n   * @returns {string} Localized title string\n   */\n  get title() {\n    return game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.title\");\n  }\n\n\n  /** \n   * Handles form submission and updates FoundryVTT settings.\n   * Uses `foundry.utils.expandObject()` to parse form data.\n   */\n  /**\n   * Handles form submission and updates left controls settings\n   * @private\n   * @static\n   * @param {Event} event - The form submission event\n   * @param {HTMLFormElement} form - The form element\n   * @param {FormData} formData - The form data object\n   * @returns {Promise<void>}\n   */\n  static async #onSubmit(event, form, formData) {\n    const SETTINGS = getSettings();\n    event.preventDefault();\n    event.stopPropagation();\n    const fieldNames = SETTINGS.leftControlsMenu.fields;\n    \n    // Convert FormData into an object with proper keys\n    const settings = foundry.utils.expandObject(formData.object);\n\n    fieldNames.forEach((fieldName) => {\n      if(settings[fieldName] !== undefined) {\n        LogUtil.log(\"Saving setting:\", [settings[fieldName]]);\n        SettingsUtil.set(SETTINGS[fieldName].tag, settings[fieldName]);\n      }\n    });\n\n    // For compatibility - to be removed in future version\n    await SettingsUtil.set(SETTINGS.leftControlsMenu.tag, settings);\n\n    ui.notifications.info(game.i18n.localize('CRLNGN_UI.ui.notifications.settingsUpdated'));\n  }\n\n  /**\n   * Resets form fields to their default values\n   * @private\n   * @static\n   * @param {Event} a - The reset event\n   * @param {HTMLElement} b - The form element\n   * @returns {Promise<void>}\n   */\n  static async #onReset(a, b){\n    const SETTINGS = getSettings();\n    const html = this.element;\n    const inputs = html.querySelectorAll(\"input, select\");\n    const defaults = SETTINGS.leftControlsMenu.default;\n\n    inputs.forEach(inputField => {\n      inputField.value = defaults[inputField.name];\n      if(inputField.type==='checkbox'){\n        inputField.checked = defaults[inputField.name];\n      }\n    })\n\n    LogUtil.log(\"#onReset\", [a, b, SETTINGS.leftControlsMenu.default]);\n    // await SettingsUtil.set(SETTINGS.leftControlsMenu.tag, SETTINGS.leftControlsMenu.default);\n  }\n\n  /**\n   * Prepare context to be sent to handlebars template\n   * @param {*} options \n   * @returns \n   */\n  /**\n   * Prepares the context data for the template\n   * @protected\n   * @param {object} options - Application options\n   * @returns {object} The prepared context object containing field values, defaults, and UI configuration\n   */\n  _prepareContext(options) {\n    const SETTINGS = getSettings();\n    const menuValues = SettingsUtil.get(SETTINGS.leftControlsMenu.tag);\n    const fieldNames = SETTINGS.leftControlsMenu.fields;\n    const fields = {};\n    const fieldValues = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        const value = SettingsUtil.get(SETTINGS[fieldName].tag);\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldValues[fieldName] = value!== undefined ? value : menuValues[SETTINGS[fieldName].oldName] || SETTINGS[fieldName].default;\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    const setting = {\n      ...fieldValues,\n      default: {...fieldDefaults},\n      fields: { \n        ...fields\n      },\n      buttons: [\n        { type: \"button\", icon: \"\", label: \"CRLNGN_UI.settings.leftControlsMenu.reset\", action: 'redefine' },\n        { type: \"submit\", icon: \"\", label: \"CRLNGN_UI.settings.leftControlsMenu.save\" }\n      ]\n    }\n\n    LogUtil.log(\"_prepareContext\", [setting, options]);\n    return setting;\n  }\n\n  /**\n   * Prepare context that is specific to only a single rendered part.\n   *\n   * It is recommended to augment or mutate the shared context so that downstream methods like _onRender have\n   * visibility into the data that was used for rendering. It is acceptable to return a different context object\n   * rather than mutating the shared context at the expense of this transparency.\n   *\n   * @param {string} partId                         The part being rendered\n   * @param {ApplicationRenderContext} context      Shared context provided by _prepareContext\n   * @returns {Promise<ApplicationRenderContext>}   Context data for a specific part\n   * @protected\n   */\n  async _preparePartContext(partId, context) {\n    context.partId = `${partId}-${this.id}`;\n    LogUtil.log(\"_preparePartContext\",[partId, context]);\n    return context;\n  }\n\n  /**\n   * Handles post-render operations\n   * @protected\n   * @param {object} context - The render context\n   * @param {object} options - The render options\n   */\n  _onRender(context, options) {\n    const SETTINGS = getSettings();\n    // const html = this.element;\n    // html.querySelector(\"button[type=reset]\").addEventListener(\"click\", LeftControlsSettings.#onReset);\n\n    const controlSettings = SettingsUtil.get(SETTINGS.leftControlsMenu.tag);\n\n    LogUtil.log(\"_onRender\", [context, options, controlSettings]);\n  }\n\n\n}\n","import { getSettings } from \"../../constants/Settings.mjs\";\nimport { LogUtil } from \"../LogUtil.mjs\";\nimport { SettingsUtil } from \"../SettingsUtil.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Scene Navigation Settings application for managing scene navigation configurations.\n * Provides a form interface for customizing the behavior and appearance of the scene navigation bar.\n * @extends {HandlebarsApplicationMixin(ApplicationV2)}\n */\nexport class SceneNavSettings extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * Default application options\n   * @static\n   * @returns {object} Configuration object containing default settings for the application\n   */\n  static get DEFAULT_OPTIONS() {\n    const SETTINGS = getSettings();\n    return {\n      id: SETTINGS.sceneNavMenu.tag,\n      actions: {\n        redefine: SceneNavSettings.#onReset,\n      },\n      // classes: [\"standard-form\"],\n      form: {\n        handler: SceneNavSettings.#onSubmit,\n        closeOnSubmit: true,\n      },\n      position: {\n        width: 480,\n        height: \"auto\",\n      },\n      tag: \"form\",\n      window: {\n        icon: \"fas fa-map\",\n        title: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.title\"),\n        contentClasses: [\"standard-form\", \"crlngn\"],\n        resizable: false\n      }\n    }\n  }\n\n  // Define template parts\n  /**\n   * Template parts used for rendering the application\n   * @static\n   */\n  static PARTS = {\n    content: {\n      template: \"modules/crlngn-ui/templates/scene-nav-settings.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\"\n      // \"templates/generic/custom-fonts-settings-footer.hbs\",\n    },\n  };\n  \n  /**\n   * Get the localized title for the settings dialog\n   * @returns {string} Localized title string\n   */\n  get title() {\n    return game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.title\");\n    // return `My Module: ${game.i18n.localize(this.options.window.title)}`;\n  }\n\n\n  /** \n   * Handles form submission and updates FoundryVTT settings.\n   * Uses `foundry.utils.expandObject()` to parse form data.\n   */\n  /**\n   * Handles form submission and updates scene navigation settings\n   * @private\n   * @static\n   * @param {Event} event - The form submission event\n   * @param {HTMLFormElement} form - The form element\n   * @param {FormData} formData - The form data object\n   * @returns {Promise<void>}\n   */\n  static async #onSubmit(event, form, formData) {\n    event.preventDefault();\n    event.stopPropagation();\n    const SETTINGS = getSettings(); \n    const fieldNames = SETTINGS.sceneNavMenu.fields;\n    let navEnabledBefore = SettingsUtil.get(SETTINGS.sceneNavEnabled.tag);\n    let foldersEnabledBefore = SettingsUtil.get(SETTINGS.navFoldersEnabled.tag);\n    \n    // Convert FormData into an object with proper keys\n    const settings = foundry.utils.expandObject(formData.object);\n\n    fieldNames.forEach((fieldName) => {\n      if(settings[fieldName] !== undefined) {\n        LogUtil.log(\"Saving setting:\", [settings[fieldName]]);\n        SettingsUtil.set(SETTINGS[fieldName].tag, settings[fieldName]);\n      }\n    });\n    let navEnabledAfter = SettingsUtil.get(SETTINGS.sceneNavEnabled.tag); \n    let foldersEnabledAfter = SettingsUtil.get(SETTINGS.navFoldersEnabled.tag);\n\n    LogUtil.log(\"Saving settings...\", [form, formData.object, settings]); // Debugging\n    await SettingsUtil.set(SETTINGS.sceneNavMenu.tag, settings);\n\n    ui.notifications.info(game.i18n.localize('CRLNGN_UI.ui.notifications.settingsUpdated'));\n\n    if( navEnabledBefore !== navEnabledAfter ||\n      foldersEnabledBefore !== foldersEnabledAfter ){\n      location.reload();\n    }\n  }\n\n  /**\n   * Resets form fields to their default values\n   * @private\n   * @static\n   * @param {Event} a - The reset event\n   * @param {HTMLElement} b - The form element\n   * @returns {Promise<void>}\n   */\n  static async #onReset(a, b){\n    const SETTINGS = getSettings();\n    const html = this.element;\n    const inputs = html.querySelectorAll(\"input, select\");\n    const defaults = SETTINGS.sceneNavMenu.default;\n\n    inputs.forEach(inputField => {\n      inputField.value = defaults[inputField.name];\n      if(inputField.type==='checkbox'){\n        inputField.checked = defaults[inputField.name];\n      }\n    })\n\n    LogUtil.log(\"#onReset\", [a, b, SETTINGS.sceneNavMenu.default]);\n  }\n\n  /**\n   * Prepare context to be sent to handlebars template\n   * @param {*} options \n   * @returns \n   */\n  /**\n   * Prepares the context data for the template\n   * @protected\n   * @param {object} options - Application options\n   * @returns {object} The prepared context object containing field values, defaults, and UI configuration\n   */\n  _prepareContext(options) {\n    const SETTINGS = getSettings();\n    const menuValues = SettingsUtil.get(SETTINGS.sceneNavMenu.tag);\n    const fieldNames = SETTINGS.sceneNavMenu.fields;\n    const fields = {};\n    const fieldValues = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        const value = SettingsUtil.get(SETTINGS[fieldName].tag);\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldValues[fieldName] = value!== undefined ? value : menuValues[SETTINGS[fieldName].oldName] || SETTINGS[fieldName].default;\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    const setting = {\n      ...fieldValues,\n      default: {...fieldDefaults},\n      fields: { \n        ...fields\n      },\n      buttons: [ \n        { type: \"button\", icon: \"\", label: \"CRLNGN_UI.settings.sceneNavMenu.reset\", action: 'redefine' },\n        { type: \"submit\", icon: \"\", label: \"CRLNGN_UI.settings.sceneNavMenu.save\" }\n      ]\n    }\n    // game.settings.get(\"foo\", \"config\");\n\n    LogUtil.log(\"_prepareContext\", [setting, options]);\n    return setting;\n  }\n\n  /**\n   * Prepare context that is specific to only a single rendered part.\n   *\n   * It is recommended to augment or mutate the shared context so that downstream methods like _onRender have\n   * visibility into the data that was used for rendering. It is acceptable to return a different context object\n   * rather than mutating the shared context at the expense of this transparency.\n   *\n   * @param {string} partId                         The part being rendered\n   * @param {ApplicationRenderContext} context      Shared context provided by _prepareContext\n   * @returns {Promise<ApplicationRenderContext>}   Context data for a specific part\n   * @protected\n   */\n  async _preparePartContext(partId, context) {\n    context.partId = `${partId}-${this.id}`;\n    LogUtil.log(\"_preparePartContext\",[partId, context]);\n    return context;\n  }\n\n  /**\n   * Handles post-render operations\n   * @protected\n   * @param {object} context - The render context\n   * @param {object} options - The render options\n   */\n  _onRender(context, options) {\n    LogUtil.log(\"_onRender\", [context, options]);\n  }\n\n\n}\n","import { getSettings, THEMES } from \"../../constants/Settings.mjs\";\nimport { LogUtil } from \"../LogUtil.mjs\";\nimport { SettingsUtil } from \"../SettingsUtil.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Theme and Styles Settings application for managing UI theme and style configurations.\n * Provides a form interface with dropdown theme selection and live preview capabilities.\n * @extends {HandlebarsApplicationMixin(ApplicationV2)}\n */\nexport class ThemeAndStyleSettings extends HandlebarsApplicationMixin(ApplicationV2) {\n  /** @type {HTMLElement} Private static reference to the form element */\n  static #element;\n\n  /**\n   * Default application options\n   * @static\n   * @returns {object} Configuration object containing default settings for the application\n   */\n  static get DEFAULT_OPTIONS() {\n    const SETTINGS = getSettings();\n\n    return {\n      id: SETTINGS.themeAndStylesMenu.tag,\n      actions: {\n        redefine: ThemeAndStyleSettings.#onReset,\n      },\n      form: {\n        handler: ThemeAndStyleSettings.#onSubmit,\n        closeOnSubmit: true,\n      },\n      position: {\n        width: 480,\n        height: \"auto\",\n      },\n      tag: \"form\",\n      window: {\n        icon: \"fas fa-brush\",\n        title: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.title\"),\n        // Add datalists to your content classes\n        contentClasses: [\"standard-form\", \"datalists\"],\n        resizable: false\n      }\n    }\n  }\n\n  // Define template parts\n  /**\n   * Template parts used for rendering the application\n   * @static\n   */\n  static PARTS = {\n    content: {\n      template: \"modules/crlngn-ui/templates/theme-and-styles-settings.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\"\n      // \"templates/generic/custom-fonts-settings-footer.hbs\",\n    },\n  };\n  \n  /**\n   * Get the localized title for the settings dialog\n   * @returns {string} Localized title string\n   */\n  get title() {\n    return game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.title\");\n  }\n\n  /** \n   * Handles form submission and updates FoundryVTT settings.\n   * Uses `foundry.utils.expandObject()` to parse form data.\n   */\n  /**\n   * Handles form submission and updates theme settings\n   * @private\n   * @static\n   * @param {Event} event - The form submission event\n   * @param {HTMLFormElement} form - The form element\n   * @param {FormData} formData - The form data object\n   * @returns {Promise<void>}\n   */\n  static async #onSubmit(event, form, formData) {\n    const SETTINGS = getSettings();\n    event.preventDefault();\n    event.stopPropagation();\n    const fieldNames = SETTINGS.themeAndStylesMenu.fields;\n\n    // Convert FormData into an object with proper keys\n    const settings = foundry.utils.expandObject(formData.object);\n    const selectedTheme = THEMES.find(theme => theme.label===settings.colorTheme);\n    settings.colorTheme = selectedTheme ? selectedTheme.className : '';\n\n    fieldNames.forEach((fieldName) => {\n      if(settings[fieldName] !== undefined) {\n        LogUtil.log(\"Saving setting:\", [settings[fieldName]]);\n        SettingsUtil.set(SETTINGS[fieldName].tag, settings[fieldName]);\n      }\n    });\n\n    // For compatibility - to be removed in future version\n    SettingsUtil.set(SETTINGS.themeAndStylesMenu.tag, settings);\n\n    ui.notifications.info(game.i18n.localize('CRLNGN_UI.ui.notifications.settingsUpdated'));\n  }\n\n  /**\n   * Prepare context to be sent to handlebars template\n   * @param {*} options \n   * @returns \n   */\n  /**\n   * Prepares the context data for the template\n   * @protected\n   * @param {object} options - Application options\n   * @returns {object} The prepared context object containing field values, defaults, theme list, and UI configuration\n   */\n  _prepareContext(options) {\n    const SETTINGS = getSettings();\n    const menuValues = SettingsUtil.get(SETTINGS.themeAndStylesMenu.tag);\n    const fieldNames = SETTINGS.themeAndStylesMenu.fields;\n    const fields = {};\n    const fieldValues = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        const value = SettingsUtil.get(SETTINGS[fieldName].tag);\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldValues[fieldName] = value!== undefined ? value : SETTINGS[fieldName].default;\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    const selectedTheme = THEMES.find(theme => {\n      return theme.className===fieldValues.colorTheme\n    });\n    fieldValues.colorTheme = selectedTheme?.label || THEMES[0].label;\n\n    const setting = {\n      ...fieldValues,\n      default: {...fieldDefaults},\n      fields: { \n        ...fields\n      },\n      selectedTheme: selectedTheme,\n      themes: THEMES,\n      buttons: [\n        { type: \"button\", icon: \"\", label: \"CRLNGN_UI.settings.themeAndStylesMenu.reset\", action: 'redefine' },\n        { type: \"submit\", icon: \"\", label: \"CRLNGN_UI.settings.themeAndStylesMenu.save\" }\n      ]\n    }\n\n    // Store the initial context for later updates\n    this._initialContext = { ...fieldValues };\n\n    return setting;\n  }\n\n  /**\n   * Prepare context that is specific to only a single rendered part.\n   *\n   * It is recommended to augment or mutate the shared context so that downstream methods like _onRender have\n   * visibility into the data that was used for rendering. It is acceptable to return a different context object\n   * rather than mutating the shared context at the expense of this transparency.\n   *\n   * @param {string} partId                         The part being rendered\n   * @param {ApplicationRenderContext} context      Shared context provided by _prepareContext\n   * @returns {Promise<ApplicationRenderContext>}   Context data for a specific part\n   * @protected\n   */\n  async _preparePartContext(partId, context) {\n    context.partId = `${partId}-${this.id}`;\n    // LogUtil.log(\"_preparePartContext\",[partId, context]);\n    return context;\n  }\n\n  /**\n   * Handles post-render operations including dropdown setup, keyboard navigation, and theme preview\n   * @protected\n   * @param {object} context - The render context\n   * @param {object} options - The render options\n   */\n  _onRender(context, options) {\n    ThemeAndStyleSettings.#element = this.element;\n    \n    // Store reference to themes for later use\n    this._themes = THEMES;\n    \n    // Handle input focus and blur\n    const inputs = ThemeAndStyleSettings.#element.querySelectorAll('input[type=\"text\"]');\n    inputs.forEach(input => {\n      const wrapper = input.closest('.dropdown-wrapper');\n      const dropdown = wrapper?.querySelector('.dropdown-options');\n      \n      if (!wrapper || !dropdown) return;\n  \n      // Show dropdown on input focus\n      const onFocus = () => {\n        ThemeAndStyleSettings.#closeAllDropdowns();\n        dropdown.classList.add('active');\n      };\n      input.addEventListener('focus', onFocus);\n      input.addEventListener('click', onFocus);\n\n      // Add keyboard navigation\n      input.addEventListener('keydown', (e) => {\n        const isActive = dropdown.classList.contains('active');\n        const options = Array.from(dropdown.querySelectorAll('.dropdown-option'));\n        let currentIndex = options.findIndex(opt => opt.classList.contains('highlighted'));\n        \n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n          e.preventDefault();\n          \n          if (!isActive) {\n            dropdown.classList.add('active');\n          }\n          \n          // Remove current highlight\n          options.forEach(opt => opt.classList.remove('highlighted'));\n          \n          // Calculate new index\n          if (currentIndex === -1) {\n            currentIndex = e.key === 'ArrowDown' ? 0 : options.length - 1;\n          } else {\n            currentIndex = e.key === 'ArrowDown' \n              ? (currentIndex + 1) % options.length \n              : (currentIndex - 1 + options.length) % options.length;\n          }\n          \n          // Add highlight to new option and scroll into view\n          if (options[currentIndex]) {\n            options[currentIndex].classList.add('highlighted');\n            options[currentIndex].scrollIntoView({ block: 'nearest' });\n          }\n        }\n        \n        // Handle Enter key\n        else if (e.key === 'Enter') {\n          e.preventDefault();\n          \n          if (isActive && currentIndex !== -1 && options[currentIndex]) {\n            // Simulate click on the highlighted option\n            options[currentIndex].click();\n          }\n        }\n        \n        // Handle Escape key\n        else if (e.key === 'Escape') {\n          dropdown.classList.remove('active');\n        }\n      });\n\n      // Handle clicking outside\n      document.addEventListener('click', (e) => {\n        if (!wrapper.contains(e.target)) {\n          dropdown.classList.remove('active');\n        }\n      });\n    });\n  \n    // Handle option selection\n    const dropOptions = ThemeAndStyleSettings.#element.querySelectorAll('.dropdown-option');\n    const that = this; // Store reference to this for use in event handlers\n    \n    dropOptions.forEach(option => {\n      // Add mouse hover effect that syncs with keyboard highlighting\n      option.addEventListener('mouseenter', () => {\n        // Remove highlight from all options\n        const allOptions = option.closest('.dropdown-options').querySelectorAll('.dropdown-option');\n        allOptions.forEach(opt => opt.classList.remove('highlighted'));\n        \n        // Add highlight to current option\n        option.classList.add('highlighted');\n      });\n      \n      option.addEventListener('click', function(e) {\n        LogUtil.log('option', [option, option.querySelector('.theme-name')]);\n        const input = option.closest('.dropdown-wrapper').querySelector('input');\n        let value = option.querySelector('.theme-name').innerHTML.toString();\n        \n        // Update the input value\n        input.value = value;\n        \n        // Update the selectedTheme if this is the theme input\n        if (input.name === 'colorTheme') {\n          const selectedTheme = that._themes.find(theme => {\n            return theme.label === value;\n          });\n          \n          // Store the selected theme for form submission\n          that._selectedTheme = selectedTheme;\n          \n          // Update any UI elements that depend on selectedTheme\n          that._updateThemePreview(selectedTheme);\n        }\n        \n        const dropdown = option.closest('.dropdown-options');\n        dropdown.classList.remove('active');\n      });\n    });\n  }\n\n  /**\n   * Update any UI elements that depend on the theme selection\n   * @param {Object} theme - The selected theme object\n   * @private\n   */\n  _updateThemePreview(theme) {\n    // Implement any preview updates here\n    LogUtil.log(\"Selected theme updated:\", [theme]);\n    \n    if (!theme) return;\n    \n    const selectedThemeSpan = this.element.querySelectorAll('span.selected-theme');\n\n    selectedThemeSpan.forEach((span,i) => {\n      span.style.setProperty('background-color', theme.colorPreview[i]);\n    });\n  }\n  \n  /**\n   * Closes all open theme dropdown menus\n   * @private\n   * @static\n   */\n  static #closeAllDropdowns() {\n    ThemeAndStyleSettings.#element.querySelectorAll('.dropdown-options').forEach(dropdown => {\n      dropdown.classList.remove('active');\n    });\n  }\n\n  /**\n   * Resets form fields to their default values and updates theme preview\n   * @private\n   * @static\n   * @param {Event} a - The reset event\n   * @param {HTMLElement} b - The form element\n   * @returns {Promise<void>}\n   */\n  static async #onReset(a, b){\n    const SETTINGS = getSettings();\n    const html = this.element;\n    const inputs = html.querySelectorAll(\"input[type=text]\");\n    const fieldNames = SETTINGS.themeAndStylesMenu.fields;\n\n    const fields = {};\n    const fieldDefaults = {};\n\n    fieldNames.forEach((fieldName) => {\n      if(SETTINGS[fieldName]) {\n        fields[fieldName] = SETTINGS[fieldName];\n        fieldDefaults[fieldName] = SETTINGS[fieldName].default;\n      }\n    });\n\n    const selectedTheme = THEMES.find(theme => theme.label===SETTINGS.colorTheme.default);\n    fieldDefaults.colorTheme = selectedTheme?.label || THEMES[0].label;\n\n    inputs.forEach(inputField => {\n      inputField.value = fieldDefaults[inputField.name];\n    })\n  }\n\n}","// import * as lang from '../lang/en.json';\nimport { CameraDockSettings } from '../components/settings-dialogs/CameraDockSettings.mjs';\nimport { ChatMessagesSettings } from '../components/settings-dialogs/ChatMessagesSettings.mjs';\nimport { CustomFontsSettings } from '../components/settings-dialogs/CustomFontSettings.mjs';\nimport { LeftControlsSettings } from '../components/settings-dialogs/LeftControlsSettings.mjs';\nimport { SceneNavSettings } from '../components/settings-dialogs/SceneNavSettings.mjs';\nimport { ThemeAndStyleSettings } from '../components/settings-dialogs/ThemeAndStylesSettings.mjs';\n// import * as lang from '../lang/en.json' assert { type: \"json\" };\n\nexport function getSettingMenus() {\n  return {\n    customFonts: {\n      tag: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.label\"),\n      name: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.title\"),\n      label: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.title\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.customFontsMenu.hint\"),\n      icon: \"fas fa-text\",  \n      propType: CustomFontsSettings,\n      restricted: true \n    },\n    themeAndStylesMenu: {\n      tag: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.label\"),\n      name: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.title\"),\n      label: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.title\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.themeAndStylesMenu.hint\"),\n      icon: \"fas fa-brush\",\n      propType: ThemeAndStyleSettings,\n      restricted: true \n    },\n    chatMessagesMenu: {\n      tag: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.label\"),\n      name: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.title\"),\n      label: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.title\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.chatMessagesMenu.hint\"),\n      icon: \"fas fa-cog\",\n      propType: ChatMessagesSettings,\n      restricted: false \n    },\n    leftControls: {\n      tag: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.label\"),\n      name: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.title\"),\n      label: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.title\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.leftControlsMenu.hint\"),\n      icon: \"fas fa-cog\",\n      propType: LeftControlsSettings,\n      restricted: false \n    },\n    cameraDockMenu: {\n      tag: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.label\"),\n      name: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.title\"),\n      label: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.title\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.cameraDockMenu.hint\"),\n      icon: \"fas fa-camera\",  \n      propType: CameraDockSettings,\n      restricted: false \n    },\n    sceneNavMenu: {\n      tag: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.label\"),\n      name: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.title\"),\n      label: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.title\"), \n      hint: game.i18n.localize(\"CRLNGN_UI.settings.sceneNavMenu.hint\"),\n      icon: \"fas fa-cog\",  \n      propType: SceneNavSettings,\n      restricted: false \n    }\n  };\n}","import { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { getSettings } from \"../constants/Settings.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\n/**\n * Utility class for managing the camera dock functionality in FoundryVTT\n * Handles camera positioning, dragging, resizing, and UI controls\n */\nexport class CameraUtil {\n  /** @type {number} Private offset X for dragging */\n  static #offsetX = 0;\n  /** @type {number} Private offset Y for dragging */\n  static #offsetY = 0;\n  /** @type {boolean} Flag indicating if camera is being dragged */\n  static isDragging = false;\n  /** @type {HTMLElement|null} Reference to the camera container element */\n  static cameraContainer;\n  /** @type {boolean} Flag indicating if camera is being resized */\n  static isResizing = false;\n  /** @type {number} Private starting X position for resizing */\n  static #startX = 0;\n  /** @type {number} Private starting Y position for resizing */\n  static #startY = 0;\n  /** @type {number} Private starting width for resizing */\n  static #startWidth = 0;\n  /** @type {number} Private starting height for resizing */\n  static #startHeight = 0;\n  /** @type {number} Private starting bottom position for resizing */\n  static #startBottom = 0;\n\n  /**\n   * Initializes the camera utility\n   * Sets up event hooks based on camera dock settings\n   */\n  static init(){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n\n    if(cameraSettings.enableFloatingDock){ \n      Hooks.on(HOOKS_CORE.RENDER_CAMERA_VIEWS, CameraUtil.onRenderFloating);\n      LogUtil.log(\"CameraUtil\", [cameraSettings]);\n      CameraUtil.onRenderFloating();\n    }else{ \n      Hooks.on(HOOKS_CORE.RENDER_CAMERA_VIEWS, CameraUtil.onRenderPlain);\n      CameraUtil.onRenderPlain();\n    } \n  }\n\n  /**\n   * Renders the camera in plain mode (non-floating)\n   * Adds visibility class to camera views\n   */\n  static onRenderPlain(){\n    document.querySelector('#camera-views')?.classList.add('visible');\n  }\n\n  /**\n   * Renders the camera in floating mode\n   * Sets up draggable and resizable functionality\n   * Positions camera based on saved settings\n   */\n  static onRenderFloating(){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n\n    document.querySelector('#camera-views')?.classList.add('crlngn-ui');\n    CameraUtil.cameraContainer = document.querySelector('#camera-views .camera-container');\n\n    const controlsElem = document.querySelector('#camera-views .user-controls');\n    const cameraGrid = document.querySelector('#camera-views .camera-grid');\n\n    LogUtil.log(\"CameraUtil.onRender\", [ cameraSettings.dockPosX, cameraSettings.dockPosY ]);\n\n    if(CameraUtil.cameraContainer && cameraGrid && controlsElem){\n      CameraUtil.cameraContainer?.insertBefore(controlsElem, cameraGrid);\n      document.querySelector('#camera-views .camera-container')?.classList.add('visible');\n    }\n    CameraUtil.makeDraggable();\n    CameraUtil.makeResizeable();\n    CameraUtil.resetPositionAndSize();\n    CameraUtil.placeControlsToggle();\n  }\n\n  /**\n   * Places the camera controls toggle button\n   * Creates and positions play/pause button if it doesn't exist\n   */\n  static placeControlsToggle(){ \n    const camControls = document.querySelector('#camera-views .user-controls');\n    const existingButtons = camControls?.querySelectorAll(\".crlngn-video-toggle\");\n    LogUtil.log(\"placeControlsToggle\", [camControls, existingButtons]);\n\n    if(existingButtons?.length > 0){\n      return; \n    }\n\n    const controlBar = document.querySelector('#camera-views .user-controls .control-bar');\n    const btnToggle = document.createElement(\"button\"); \n    btnToggle.classList.add(\"crlngn-video-toggle\"); \n    btnToggle.innerHTML = '<i class=\"fa fa-play-circle\" aria-hidden=\"true\"></i>';\n\n    camControls?.insertBefore(btnToggle, controlBar);\n  }\n\n  /**\n   * Makes the camera container draggable\n   * Sets up mouse event listeners for drag functionality\n   */\n  static makeDraggable(){\n    CameraUtil.cameraContainer?.addEventListener(\"mousedown\", (e) => {\n      const body = document.querySelector(\"body.crlngn-ui\");\n      \n      if(e.target.parentNode?.classList.contains('volume-bar')){\n        return;\n      }\n      body?.addEventListener(\"mousemove\", CameraUtil.#onDragMove);\n      body?.addEventListener(\"mouseup\", CameraUtil.#onDragRelease); \n\n      const offsetBottom = GeneralUtil.getOffsetBottom(CameraUtil.cameraContainer);\n      CameraUtil.isDragging = true;\n      CameraUtil.#offsetX = e.clientX - CameraUtil.cameraContainer?.offsetLeft;\n      CameraUtil.#offsetY = (window.innerHeight - e.clientY) - offsetBottom;\n      // CameraUtil.cameraContainer.style.zIndex = \"101\"; \n\n      e.stopPropagation();\n    }); \n\n  }\n\n  /**\n   * Makes the camera container resizable\n   * Adds resize handle and sets up mouse event listeners\n   */\n  static makeResizeable(){\n    if(CameraUtil.cameraContainer){\n      const body = document.querySelector(\"body.crlngn-ui\");\n      const resizeHandle = document.createElement(\"div\");\n      resizeHandle.classList.add(\"resize-handle\");\n      CameraUtil.cameraContainer.append(resizeHandle);\n\n      resizeHandle.addEventListener(\"mousedown\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        CameraUtil.isResizing = true;\n    \n        CameraUtil.#startX = e.clientX;\n        CameraUtil.#startY = e.clientY;\n        CameraUtil.#startBottom = parseInt(getComputedStyle(CameraUtil.cameraContainer).bottom) || 0;\n        CameraUtil.#startWidth = CameraUtil.cameraContainer.offsetWidth;\n        CameraUtil.#startHeight = CameraUtil.cameraContainer.offsetHeight;\n    \n        body?.addEventListener(\"mousemove\", CameraUtil.#onResize);\n        body?.addEventListener(\"mouseup\", CameraUtil.#onStopResize);\n      });\n    }\n  }\n\n  /**\n   * Resets the position and size of the camera container\n   * @param {Object} options - Position and size options\n   * @param {number|null} [options.x] - X position in pixels\n   * @param {number|null} [options.y] - Y position in pixels\n   * @param {number|null} [options.w] - Width in pixels\n   * @param {number|null} [options.h] - Height in pixels\n   */\n  static resetPositionAndSize({x, y, w, h} = { x: null, y: null, w: null, h: null }){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n\n    if(!cameraSettings.enableFloatingDock || !CameraUtil.cameraContainer){ return }\n    if(!x && !y && !w && !h){\n      const savedPosX = cameraSettings.dockPosX || 0;\n      const savedPosY = cameraSettings.dockPosY || 0;\n      const savedWidth = cameraSettings.dockWidth || 0;\n      const savedHeight = cameraSettings.dockHeight || 0;\n\n      CameraUtil.cameraContainer.style.left = `${savedPosX}px`;\n      CameraUtil.cameraContainer.style.bottom = `${savedPosY}px`;\n      CameraUtil.cameraContainer.style.width = `${savedWidth}px`;\n      CameraUtil.cameraContainer.style.height = `${savedHeight}px`;\n    }else{\n      if(x){\n        CameraUtil.cameraContainer.style.left = `${x}px`;\n      }\n      if(y){\n        CameraUtil.cameraContainer.style.bottom = `${y}px`;\n      }\n      if(w){\n        CameraUtil.cameraContainer.style.width = `${w}px`;\n      }\n      if(h){\n        CameraUtil.cameraContainer.style.height = `${h}px`;\n      }\n    }\n    \n  }\n\n  // when user releases element\n  /**\n   * Handles the release of drag operation\n   * Saves the final position to settings\n   * @param {MouseEvent} e - Mouse event\n   * @private\n   */\n  static #onDragRelease(e){\n    const SETTINGS = getSettings();\n    const cameraSettings = {...SettingsUtil.get(SETTINGS.cameraDockMenu.tag)};\n\n    if(CameraUtil.isDragging){ \n      const body = document.querySelector(\"body.crlngn-ui\"); \n      cameraSettings.dockPosX = parseInt(CameraUtil.cameraContainer?.style.left) || 0; \n      cameraSettings.dockPosY = parseInt(CameraUtil.cameraContainer?.style.bottom) || 0; \n\n      if(cameraSettings.dockPosY <= 0){ cameraSettings.dockPosY = 0 }\n      SettingsUtil.set(SETTINGS.cameraDockMenu.tag, cameraSettings);\n      \n      body?.removeEventListener(\"mousemove\", CameraUtil.#onDragMove); \n      body?.removeEventListener(\"mouseup\", CameraUtil.#onDragRelease); \n  \n      CameraUtil.isDragging = false; \n      e.stopPropagation(); \n    }\n    \n  } \n\n  // when user drags element\n  /**\n   * Handles the drag movement of the camera container\n   * Updates position based on mouse movement\n   * @param {MouseEvent} e - Mouse event\n   * @private\n   */\n  static #onDragMove(e){ \n    if (!CameraUtil.isDragging) return; \n    LogUtil.log(\"mousemove\", [ e.target.parentNode ]); \n    \n    if(CameraUtil.cameraContainer){\n      let left = e.clientX - CameraUtil.#offsetX;\n      let bottom = (window.innerHeight - e.clientY) -  CameraUtil.#offsetY;\n\n      if(left + CameraUtil.cameraContainer.offsetWidth > window.innerWidth){  \n        left = window.innerWidth - CameraUtil.cameraContainer.offsetWidt;\n      }\n      CameraUtil.cameraContainer.style.left = `${left}px`;\n\n      if(bottom + CameraUtil.cameraContainer.offsetHeight > window.innerHeight){  \n        bottom = window.innerHeight - CameraUtil.cameraContainer.offsetHeight;\n      } \n      CameraUtil.cameraContainer.style.bottom = `${bottom}px`;\n    }\n    // e.stopPropagation(); \n  } \n\n  // when user drags the resize handle\n  /**\n   * Handles the resize operation of the camera container\n   * Updates size based on mouse movement\n   * @param {MouseEvent} e - Mouse event\n   * @private\n   */\n  static #onResize(e) {\n    if (!CameraUtil.isResizing) return;\n    const newWidth = CameraUtil.#startWidth + (e.clientX - CameraUtil.#startX);\n    const deltaY = e.clientY - CameraUtil.#startY; // How much the mouse moved\n    const newHeight = CameraUtil.#startHeight + deltaY;\n    const newBottom = CameraUtil.#startBottom - deltaY;\n\n    CameraUtil.cameraContainer.style.width = `${newWidth}px`;\n    CameraUtil.cameraContainer.style.height = `${newHeight}px`;\n    CameraUtil.cameraContainer.style.bottom = `${newBottom}px`;\n  }\n\n  // when user releases the resize handle\n  static #onStopResize() {\n    const SETTINGS = getSettings();\n    const cameraSettings = {...SettingsUtil.get(SETTINGS.cameraDockMenu.tag)};\n\n    const body = document.querySelector(\"body.crlngn-ui\");\n    CameraUtil.isResizing = false;\n    body?.removeEventListener(\"mousemove\", CameraUtil.#onResize);\n    body?.removeEventListener(\"mouseup\", CameraUtil.#onStopResize);\n\n    LogUtil.log(\"onStopResize\", [CameraUtil.cameraContainer?.style.width, CameraUtil.cameraContainer?.style.height, CameraUtil.cameraContainer?.style.bottom]);\n\n    cameraSettings.dockWidth = parseInt(CameraUtil.cameraContainer?.style.width || 0);\n    cameraSettings.dockHeight = parseInt(CameraUtil.cameraContainer?.style.height || 0);\n    cameraSettings.dockPosY = parseInt(CameraUtil.cameraContainer?.style.bottom || 0);\n\n    SettingsUtil.set(SETTINGS.cameraDockMenu.tag, cameraSettings);\n  }\n\n}","import { BORDER_COLOR_TYPES, getSettings } from \"../constants/Settings.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\n/**\n * Utility class for managing chat message styling and enhancements in FoundryVTT\n */\nexport class ChatUtil {\n  /** @type {string} Border color setting for chat messages */\n  static chatBorderColor;\n  /** @type {boolean} Flag indicating if custom chat styles are enabled */\n  static enableChatStyles;\n\n  /**\n   * Initializes chat utility settings\n   * Loads chat border color and style enablement from module settings\n   */\n  static init(){\n    const SETTINGS = getSettings();\n    ChatUtil.enableChatStyles = SettingsUtil.get(SETTINGS.enableChatStyles.tag);\n    ChatUtil.chatBorderColor = SettingsUtil.get(SETTINGS.chatBorderColor.tag);\n  }\n\n  /**\n   * Enriches chat message cards with additional styling and functionality\n   * @param {ChatMessage} chatMessage - The Foundry ChatMessage instance\n   * @param {jQuery|HTMLElement} html - The chat message HTML element\n   * @returns {Promise<void>}\n   */\n  static enrichCard = async(chatMessage, html) => {\n    LogUtil.log(\"renderChatMessage\", [ChatUtil.chatBorderColor, ChatUtil.enableChatStyles, BORDER_COLOR_TYPES.playerColor.name, chatMessage.author?.id]); \n    const rollType = chatMessage.flags?.dnd5e?.activity?.type || chatMessage.flags?.dnd5e?.roll?.type || \"custom\";\n    let chatItem = html.get ? html.get(0) : html;\n    if(!chatItem){ return; }\n    \n    chatItem.classList.add(rollType);\n    chatItem.classList.add('crlngn');\n\n    const saveButtons = chatItem.querySelectorAll('.card-buttons button[data-action=rollSave]');\n    if (saveButtons.length > 0) {      \n      saveButtons.forEach(button => {\n        const visibleDCSpan = button.querySelector('.visible-dc');\n        const hiddenDCSpan = button.querySelector('.hidden-dc');\n        LogUtil.log(\"enrichCard\",[visibleDCSpan, hiddenDCSpan]);\n\n        visibleDCSpan.setAttribute('data-ability', button.getAttribute('data-ability') || \"\");\n        visibleDCSpan.setAttribute('data-dc', button.getAttribute('data-dc') || \"\");\n        hiddenDCSpan.setAttribute('data-ability', button.getAttribute('data-ability') || \"\");\n      });\n    }\n\n    // add border color\n    if(ChatUtil.chatBorderColor===BORDER_COLOR_TYPES.playerColor.name && chatMessage.author?.id){ \n      chatItem.style.setProperty('border-color', `var(--user-color-${chatMessage.author.id})`);\n    }\n\n  }\n\n}","import { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\n/**\n * Utility class for handling compatibility with other Foundry VTT modules\n * Manages interactions and adjustments needed for module interoperability\n */\nexport class ModuleCompatUtil {\n  /**\n   * @private\n   * Timeout handle for debouncing players list checks\n   */\n  static #checkPlayersTimeout;\n  /**\n   * Initializes module compatibility features\n   * Sets up hooks for players list and taskbar integration\n   */\n  static init(){\n\n    Hooks.on(HOOKS_CORE.RENDER_PLAYERS_LIST, ModuleCompatUtil.checkPlayersList);\n    Hooks.on(HOOKS_CORE.RENDER_HOTBAR, ModuleCompatUtil.checkPlayersList);\n    // taskbar\n    const isTaskbarOn = GeneralUtil.isModuleOn('foundry-taskbar');\n    if(isTaskbarOn){\n      Hooks.on(HOOKS_CORE.UPDATE_USER, ModuleCompatUtil.checkTaskbarLock);\n    }\n    ModuleCompatUtil.checkTaskbarLock();\n  }\n\n  /**\n   * Checks and applies taskbar lock settings\n   * Adjusts UI variables based on taskbar module state and settings\n   */\n  static checkTaskbarLock = () => {\n    const isTaskbarOn = GeneralUtil.isModuleOn('foundry-taskbar');\n    // const body = document.querySelector('body.crlngn-ui');\n    // const bodyStyle = document.querySelector('#crlngn-ui-vars');\n    \n    /** @type {{taskbarSettings?: {locked?: boolean, reduceSidebar?: boolean}} | undefined} */\n    const taskbarFlag = game.user.flags?.['foundry-taskbar'];\n    LogUtil.log(\"checkTaskbarLock\",[taskbarFlag]);\n\n    if(!isTaskbarOn || !taskbarFlag?.taskbarSettings){\n      return;\n    }\n\n    const taskbarReduceSidebar = game.settings.get('foundry-taskbar','reduceSidebar');\n    if(taskbarFlag.taskbarSettings?.locked){\n      GeneralUtil.addCSSVars('--crlngn-sidebar-bottom', taskbarReduceSidebar ? '50px' : '0px');\n    }else{\n      GeneralUtil.addCSSVars('--crlngn-sidebar-bottom', '0px');\n    }\n\n    if(taskbarFlag.taskbarSettings?.locked){\n      GeneralUtil.addCSSVars('--crlngn-taskbar-height', '50px');\n    }else{\n      GeneralUtil.addCSSVars('--crlngn-taskbar-height', '10px');\n    }\n    const ftMoveStyle = document.querySelector(\"#ft-move-players-macro\");\n    if(ftMoveStyle){ftMoveStyle.innerHTML = '';}\n    ModuleCompatUtil.checkPlayersList();\n  }\n\n\n  /**\n   * Manages players list visibility and positioning\n   * Handles interaction between players list and taskbar module\n   */\n  static checkPlayersList = () => {\n    const body = document.querySelector('body');\n    const uiLeftPlayers = document.querySelector('#players');\n    const isTaskbarOn = GeneralUtil.isModuleOn('foundry-taskbar');\n    const isPlayersDocked = isTaskbarOn ? game.settings.get('foundry-taskbar','dockPlayersList') : false;\n    const isMacroDocked = isTaskbarOn ? game.settings.get('foundry-taskbar','dockMacroBar') : false;\n    LogUtil.log('checkPlayersList',[isPlayersDocked, isTaskbarOn, isMacroDocked, game.settings]);\n    let timeoutDelay = 10;\n    \n    if(isPlayersDocked){\n      timeoutDelay = 250;\n    }\n    const hotbar = document.querySelector('#hotbar');\n    if(hotbar && hotbar instanceof HTMLElement) hotbar.style.setProperty('visibility', 'hidden');\n    clearTimeout(ModuleCompatUtil.#checkPlayersTimeout);\n    ModuleCompatUtil.#checkPlayersTimeout =  setTimeout(()=>{\n      if(isPlayersDocked){\n\n        LogUtil.log('checkPlayersList TEST',[isPlayersDocked]);\n        body.classList.remove('with-players');\n        body.classList.remove('with-players-hide');\n        body.classList.add('players-hidden');\n      }else{\n        body.classList.remove('players-hidden');\n        if(body.querySelector('#players.auto-hide')){\n          body.classList.add('with-players-hide');\n          body.classList.remove('with-players');\n        }else if(uiLeftPlayers){\n          body.classList.add('with-players');\n          body.classList.remove('with-players-hide');\n        }\n      }\n      if(hotbar && hotbar instanceof HTMLElement) hotbar.style.removeProperty('visibility');\n      clearTimeout(ModuleCompatUtil.#checkPlayersTimeout);\n    }, timeoutDelay);\n    \n    \n  }\n\n\n}","import { MODULE_ID } from \"../constants/General.mjs\";\nimport { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { getSettings } from \"../constants/Settings.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { SceneNavFolders } from \"./SceneFoldersUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\n/**\n * Manages the top navigation bar for scenes in FoundryVTT\n * Handles scene navigation, folder organization, and UI state\n */\nexport class TopNavigation {\n  static #navElem;\n  static #scenesList;\n  static #navTimeout;\n  static #navExtras;\n  static #navToggle;\n  static #uiMiddle;\n  static sceneFoldersTemplate;\n  static #timeout;\n  static #collapseTimeout;\n  static #navBtnsTimeout;\n  static #navFirstLoad = true;\n  static #isMonksSceneNavOn = false;\n  static #isRipperSceneNavOn = false;\n  // settings\n  static sceneNavEnabled;\n  static navFoldersEnabled;\n  static navFoldersForPlayers;\n  static navStartCollapsed;\n  static showFolderListOnClick;\n  static showNavOnHover;\n  static isCollapsed;\n  static navPos;\n\n  /**\n   * Initializes the top navigation system\n   * Sets up initial state, renders folders, and registers event hooks\n   * @returns {Promise<void>}\n   */\n  static init = async() => {\n    const SETTINGS = getSettings();\n\n    this.checkSceneNavCompat();\n\n    // Load settings first\n    TopNavigation.navStartCollapsed = SettingsUtil.get(SETTINGS.navStartCollapsed.tag);\n    TopNavigation.showNavOnHover = SettingsUtil.get(SETTINGS.showNavOnHover.tag);\n    TopNavigation.sceneNavEnabled = SettingsUtil.get(SETTINGS.sceneNavEnabled.tag);\n    TopNavigation.navFoldersEnabled = SettingsUtil.get(SETTINGS.navFoldersEnabled.tag);\n    TopNavigation.navFoldersForPlayers = SettingsUtil.get(SETTINGS.navFoldersForPlayers.tag);\n    TopNavigation.showFolderListOnClick = SettingsUtil.get(SETTINGS.showFolderListOnClick.tag);\n    \n    // Then determine initial collapse state\n    TopNavigation.isCollapsed = TopNavigation.#navFirstLoad\n      ? TopNavigation.navStartCollapsed\n      : SettingsUtil.get(SETTINGS.sceneNavCollapsed.tag);\n    TopNavigation.navPos = SettingsUtil.get(SETTINGS.sceneNavPos.tag);\n\n    TopNavigation.resetLocalVars();\n    // if user disabled Scene Navigation Styles,\n    // skip everything\n    const uiMiddle = document.querySelector(\"#ui-middle\");\n\n    LogUtil.log(\"SCENE NAV INIT\", [TopNavigation.sceneNavEnabled]);\n    if(TopNavigation.sceneNavEnabled && uiMiddle){\n      uiMiddle.classList.add(\"crlngn-ui\");\n    }else if(uiMiddle){\n      uiMiddle.classList.remove(\"crlngn-ui\");\n      return;\n    }\n    \n    if(!this.#isMonksSceneNavOn){\n      if(!this.#isRipperSceneNavOn){\n        await SceneNavFolders.renderSceneFolders();\n      }\n      const scenePage = SettingsUtil.get(SETTINGS.sceneNavPos.tag);\n      TopNavigation.setNavPosition(scenePage);\n      TopNavigation.placeNavButtons();\n      TopNavigation.addListeners();\n      TopNavigation.handleNavState();\n      //\n    }else if(this.#isMonksSceneNavOn){\n      uiMiddle.classList.add('with-monks-scene');\n    }\n    // LogUtil.log(\"RENDER_NAV\", [ui.nav, game]);\n\n    Hooks.on(HOOKS_CORE.RENDER_SCENE_NAV, async() => { \n      LogUtil.log(\"SCENE NAV\", [TopNavigation.navPos]);\n      LogUtil.log(\"TopNavigation\", [TopNavigation.isCollapsed, TopNavigation.navStartCollapsed]);\n\n      const SETTINGS = getSettings();\n      \n      if(!this.#isMonksSceneNavOn){\n        LogUtil.log(\"NAV no transition add\");\n        TopNavigation.navPos = SettingsUtil.get(SETTINGS.sceneNavPos.tag);\n\n        SceneNavFolders.init();\n        if(!this.#isRipperSceneNavOn){\n          await SceneNavFolders.renderSceneFolders();\n        }\n        if(this.#scenesList) {this.#scenesList.classList.add(\"no-transition\")};\n        const scenePage = TopNavigation.navPos;\n        TopNavigation.setNavPosition(scenePage);\n        TopNavigation.placeNavButtons();\n        TopNavigation.addListeners();\n\n        TopNavigation.handleNavState();\n        \n        clearTimeout(TopNavigation.#timeout);\n        TopNavigation.#timeout = setTimeout(()=>{\n          LogUtil.log(\"NAV no transition remove\");\n          if(this.#scenesList) this.#scenesList.classList.remove(\"no-transition\");\n        }, 250);\n      }\n    }); \n\n    Hooks.on(HOOKS_CORE.COLLAPSE_SIDE_BAR, (value) => { \n      LogUtil.log(HOOKS_CORE.COLLAPSE_SIDE_BAR, [\"isMonksSceneNavOn\", this.#isMonksSceneNavOn]);\n      if(!this.#isMonksSceneNavOn){\n        TopNavigation.placeNavButtons(); \n      }\n      \n    }); \n\n    Hooks.on(HOOKS_CORE.COLLAPSE_SCENE_NAV, (nav, collapsed) => {\n      const SETTINGS = getSettings();\n      SettingsUtil.set(SETTINGS.sceneNavCollapsed.tag, collapsed); \n      LogUtil.log(\"NAV toggle\", [nav, collapsed]); \n\n      TopNavigation.isCollapsed = collapsed;\n      TopNavigation.toggleNav(collapsed);\n    }); \n\n    Hooks.on(HOOKS_CORE.EXPAND_SCENE_NAV, (nav, value) => {\n      // const SETTINGS = getSettings();\n      LogUtil.log(\"NAV expand\", [nav, false]); \n      // SettingsUtil.set(SETTINGS.sceneNavCollapsed.tag, false); \n      // TopNavigation.isCollapsed = false;\n    }); \n\n    // SettingsUtil.apply(SETTINGS.sceneNavCollapsed.tag); \n    window.addEventListener('resize', ()=>{\n      \n      if(!this.#isMonksSceneNavOn){\n        TopNavigation.placeNavButtons();\n      }\n    });\n\n    LogUtil.log(\"TopNavigation - init\", [TopNavigation.sceneNavEnabled])\n    \n    // if(TopNavigation.sceneNavEnabled){ \n    //   // TopNavigation.observeNavOffset(); \n    // } \n\n  } \n\n  /**\n   * Handles the first load of the navigation bar\n   * Only checks sceneNavCollapsed setting if not first load\n   */\n  static handleNavState(){\n    const SETTINGS = getSettings();\n    if(game.ready && TopNavigation.#navFirstLoad) {\n      TopNavigation.#navFirstLoad = false;\n      TopNavigation.toggleNav(TopNavigation.navStartCollapsed);\n    }else{\n      TopNavigation.toggleNav(SettingsUtil.get(SETTINGS.sceneNavCollapsed.tag));\n    }\n  }\n\n  /**\n   * Toggles the navigation bar's collapsed state\n   * @param {boolean} collapsed - Whether the navigation should be collapsed\n   */\n  static toggleNav(collapsed){\n    clearTimeout(TopNavigation.#collapseTimeout);\n    TopNavigation.#collapseTimeout = setTimeout(()=>{\n      TopNavigation.resetLocalVars();\n      if(collapsed){\n        ui.nav.collapse();\n        TopNavigation.#uiMiddle.classList.add('navigation-collapsed');\n      }else{\n        ui.nav.expand();\n        TopNavigation.#uiMiddle.classList.remove('navigation-collapsed');\n      }\n    }, 500);\n    \n  }\n\n  /**\n   * If Monk's Scene Navigation or Compact Scene Navigation are enabled, disable Carolingian UI Top Navigation\n   */\n  static checkSceneNavCompat(){\n    const SETTINGS = getSettings();\n    const uiMiddle = document.querySelector(\"#ui-middle\");\n    \n    this.#isMonksSceneNavOn = GeneralUtil.isModuleOn(\"monks-scene-navigation\");\n    this.#isRipperSceneNavOn = GeneralUtil.isModuleOn(\"compact-scene-navigation\");\n\n    if(this.#isRipperSceneNavOn && TopNavigation.navFoldersEnabled){\n      if(game.user?.isGM && this.#isRipperSceneNavOn){\n        ui.notifications.warn(game.i18n.localize(\"CRLNGN_UI.ui.notifications.ripperScenesCompat\"), {permanent: true});\n      }\n    }\n    if((this.#isMonksSceneNavOn) && TopNavigation.sceneNavEnabled){\n      uiMiddle.classList.remove(\"crlngn-ui\");\n      \n      if(game.ready){\n        SettingsUtil.set(SETTINGS.sceneNavEnabled.tag, false);\n        TopNavigation.sceneNavEnabled = false;\n      }\n\n      LogUtil.log(\"checkSceneNavCompat\", [this.#isMonksSceneNavOn, this.#isRipperSceneNavOn]);\n      \n      if(game.user?.isGM && this.#isMonksSceneNavOn){\n        ui.notifications.warn(game.i18n.localize(\"CRLNGN_UI.ui.notifications.monksScenesNotSupported\"), {permanent: true});\n      }\n      \n    }\n  }\n\n  /**\n   * Resets and reinitializes local DOM element references\n   */\n  static resetLocalVars(){\n    TopNavigation.#navElem = document.querySelector(\"#navigation\"); \n    TopNavigation.#navExtras = document.querySelector(\"#navigation .nav-item.is-root\"); \n    TopNavigation.#navToggle = document.querySelector(\"#nav-toggle\"); \n    TopNavigation.#uiMiddle = document.querySelector(\"#ui-middle\");\n\n    if(TopNavigation.navFoldersEnabled){\n      TopNavigation.#scenesList = document.querySelector(\"#crlngn-scene-list\"); \n      LogUtil.log(\"TopNavigation resetLocalVars\", [TopNavigation.#scenesList]);\n    }else{\n      TopNavigation.#scenesList = document.querySelector(\"#crlngn-scene-list\"); \n    }\n    // TopNavigation.#leftControls = document.querySelector(\"#ui-left #controls\"); \n  }\n\n  /**\n   * Adds event listeners for navigation interactions\n   * Handles hover and click events for navigation expansion/collapse\n   */\n  static addListeners(){\n    TopNavigation.#navElem?.addEventListener(\"mouseenter\", (e)=>{\n      LogUtil.log(\"TopNavigation mouseenter\", [ ]);\n    \n      if( !TopNavigation.isCollapsed ||\n          !TopNavigation.showNavOnHover ){ \n            return;\n      }\n      e.stopPropagation();\n      clearTimeout(TopNavigation.#navTimeout);\n\n      const navigation = document.querySelector(\"#navigation\");\n      navigation.classList.remove(\"collapsed\");\n    });\n\n    this.#navElem?.addEventListener(\"mouseleave\", (e)=>{\n      LogUtil.log(\"TopNavigation mouseleave\", [ ]);\n      if( !TopNavigation.isCollapsed ||\n          !TopNavigation.showNavOnHover ){ \n          return;\n      }\n      e.stopPropagation();\n\n      this.#navTimeout = setTimeout(()=>{\n        clearTimeout(this.#navTimeout);\n        this.#navTimeout = null;\n        const navigation = document.querySelector(\"#navigation\");\n        navigation.classList.add(\"collapsed\");\n      }, 700);\n    });\n  }\n\n  /**\n   * Places navigation buttons for scrolling through scenes\n   * Only adds buttons if navigation is overflowing and buttons don't already exist\n   */\n  static placeNavButtons(){ \n    clearTimeout(this.#navBtnsTimeout);\n    TopNavigation.#navBtnsTimeout = setTimeout(() => {\n      clearTimeout(this.#navBtnsTimeout);\n      TopNavigation.resetLocalVars();\n\n      const folderListWidth = this.#navElem?.querySelector(\"#crlngn-scene-folders\")?.offsetWidth || 0;\n      const existingButtons = this.#navElem?.querySelectorAll(\"button.crlngn-nav\");\n      const isNavOverflowing = this.#scenesList?.scrollWidth + folderListWidth >= this.#navElem?.offsetWidth;\n      LogUtil.log(\"placeNavButtons\", [ this.#scenesList, isNavOverflowing ]);\n      \n      if(!isNavOverflowing){\n        return;\n      }\n      existingButtons.forEach(b => b.remove());\n\n      const btnLast = document.createElement(\"button\"); \n      btnLast.classList.add(\"crlngn-nav\"); \n      btnLast.classList.add(\"ui-nav-left\"); \n      const arrowLeft = document.createElement(\"i\"); \n      arrowLeft.classList.add(\"fa\"); \n      arrowLeft.classList.add(\"fa-chevron-left\"); \n      btnLast.addEventListener(\"click\", this.#onNavLast);\n      btnLast.append(arrowLeft); \n\n      const btnNext = document.createElement(\"button\"); \n      btnNext.classList.add(\"crlngn-nav\"); \n      btnNext.classList.add(\"ui-nav-right\"); \n      const arrowRight = document.createElement(\"i\"); \n      arrowRight.classList.add(\"fa\"); \n      arrowRight.classList.add(\"fa-chevron-right\"); \n      btnNext.append(arrowRight); \n      btnNext.addEventListener(\"click\", this.#onNavNext);\n\n      this.#navElem?.appendChild(btnLast);\n      this.#navElem?.appendChild(btnNext);\n      if(this.#scenesList) this.#scenesList.classList.remove(\"no-transition\");\n    }, 250);\n  }\n\n\n  /**\n   * @private\n   * Handles click on the 'previous' navigation button\n   * Scrolls the scene list backward by one page\n   * @param {Event} e - The pointer event\n   */\n  static #onNavLast = (e) => {\n    const folderListWidth = this.#navElem?.querySelector(\"#crlngn-scene-folders\")?.offsetWidth || 0;\n    const toggleWidth = this.#navToggle?.offsetWidth;\n    const firstScene = this.#scenesList?.querySelector(\"li.nav-item:not(.is-root)\");\n    const scenes = this.#scenesList?.querySelectorAll(\"li.nav-item:not(.is-root)\") || [];\n    const itemWidth = firstScene.offsetWidth;\n    const currPos = TopNavigation.navPos || 0;\n    const itemsPerPage = Math.floor((this.#navElem?.offsetWidth - (currPos === 0 ? folderListWidth : 0) - (toggleWidth*2))/itemWidth);\n\n    let newPos = currPos - (itemsPerPage - 1);\n    newPos = newPos < 0 ? 0 : newPos;\n    LogUtil.log(\"onNavLast\", [\"currPos\", currPos, \"items\", itemsPerPage, newPos]);\n\n    TopNavigation.setNavPosition(newPos); \n  }\n\n  /**\n   * @private\n   * Handles click on the 'next' navigation button\n   * Scrolls the scene list forward by one page\n   * @param {Event} e - The pointer event\n   */\n  static #onNavNext = (e) => {\n    // const SETTINGS = getSettings();\n    const folderListWidth = this.#navElem?.querySelector(\"#crlngn-scene-folders\")?.offsetWidth || 0;\n    const toggleWidth = this.#navToggle?.offsetWidth;\n    const firstScene = this.#scenesList?.querySelector(\"li.nav-item:not(.is-root)\");\n    const scenes = this.#scenesList?.querySelectorAll(\"li.nav-item:not(.is-root)\") || [];\n    const itemWidth = firstScene.offsetWidth;\n    const currPos = TopNavigation.navPos || 0;\n    const itemsPerPage = Math.floor((this.#navElem?.offsetWidth - (currPos === 0 ? folderListWidth : 0) - (toggleWidth*2))/itemWidth);\n\n    let newPos = currPos + (itemsPerPage - 1);\n    newPos = newPos > scenes.length-1 ? scenes.length-1 : newPos;\n\n    LogUtil.log(\"onNavNext\", [\"currPos\", currPos, \"items\", itemsPerPage, newPos]);\n\n\n    TopNavigation.setNavPosition(newPos); \n  }\n\n  /**\n   * Sets the position of the scene navigation list\n   * @param {number} [pos] - The position to scroll to. If undefined, uses stored position\n   */\n  static setNavPosition(pos) { \n    const SETTINGS = getSettings();\n    if(!this.#scenesList){ return; }\n    const scenes = this.#scenesList?.querySelectorAll(\"li.nav-item:not(.is-root)\") || [];\n    const position = pos!==undefined ? pos : TopNavigation.navPos || 0;\n\n    const newMargin = parseInt(scenes[position]?.offsetLeft) * -1;\n    this.#scenesList.style.marginLeft = newMargin + 'px';\n\n    TopNavigation.navPos = position;\n    SettingsUtil.set(SETTINGS.sceneNavPos.tag, position);\n\n    LogUtil.log(\"setNavPosition\", [pos, position, scenes, scenes[position], newMargin]);\n  }\n}\n","import { MODULE_ID } from \"../constants/General.mjs\";\nimport { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { TopNavigation } from \"./TopNavUtil.mjs\";\n\nconst DEFAULT_FOLDER_ID = \"favorites\";\n\n/**\n * Manages scene navigation folders in the UI, providing functionality for folder organization,\n * selection, and display of scene folders.\n */\nexport class SceneNavFolders {\n  static selectedFolder;\n  static folderList;\n  static folderListData = [];\n  static searchValue = \"\";\n  static #defaultFolderName = 'Favorites';\n  static contextMenuSceneId = null;\n\n  static init(){\n    if(SceneNavFolders.noFolderView()){ return; }\n    if(!SceneNavFolders.folderListData || SceneNavFolders.folderListData.length === 0){\n      const isMonksSceneNavOn = GeneralUtil.isModuleOn(\"monks-scene-navigation\");\n      const isRipperSceneNavOn = GeneralUtil.isModuleOn(\"compact-scene-navigation\");\n      if(!isMonksSceneNavOn && !isRipperSceneNavOn){\n        SceneNavFolders.preloadTemplate();\n      }\n      LogUtil.log(\"SceneNavFolders\",[ui.scenes]);\n      SceneNavFolders.folderListData = SceneNavFolders.getFolders(ui.scenes.folders);\n      SceneNavFolders.selectedFolder = SceneNavFolders.selectFolder(DEFAULT_FOLDER_ID);\n    }\n  }\n\n  /**\n   * \n   * @param {object[]} fromList \n   * @returns \n   */\n  /**\n   * Retrieves and sorts top-level folders from the provided folder list\n   * @param {object[]} fromList - Array of folder objects to filter\n   * @returns {object[]} Sorted array of top-level folders\n   */\n  static getFolders = (fromList) => {\n    let folders = fromList.filter(f => { \n      return f.folder === null;\n    });\n\n    // alphabetical order\n    folders.sort((a, b) => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n    // LogUtil.log(\"getFolders\", [folders]);\n\n    return folders;\n  }\n\n  /**\n   * Selects a folder by its ID\n   * @param {string} id - The ID of the folder to select\n   * @returns {object|null} The selected folder object or null if not found\n   */\n  static selectFolder = (id) => {\n    return SceneNavFolders.getFolderById(id) || null;\n  }\n\n  /**\n   * \n   * @param {string} id - Scene folder id\n   */\n  /**\n   * Retrieves a folder by its ID\n   * @param {string} id - Scene folder id\n   * @returns {object|string} Found folder object or DEFAULT_FOLDER_ID if not found\n   */\n  static getFolderById(id){\n    return ui.scenes.folders.find(fd => {\n      return fd.id===id\n    }) || DEFAULT_FOLDER_ID;\n  }\n\n  /**\n   * Creates a new folder list item element\n   * @returns {HTMLLIElement} New folder list item element\n   */\n  static createFolderElem = () => {\n    const folderElem = document.createElement(\"li\");\n    return folderElem;\n  }\n\n  /**\n   * Preloads the Handlebars template for scene folder list\n   * @returns {Promise<boolean>} True when template is successfully loaded\n   */\n  static preloadTemplate = async() => {\n    const templatePath = [\n      `modules/${MODULE_ID}/templates/scene-folder-list.hbs`\n    ];\n    \n    // This returns an object with paths as keys and template functions as values\n    await loadTemplates(templatePath);\n\n    LogUtil.log(\"preloadTemplate\", [true]);\n  \n    return true;\n  }\n\n  /**\n   * Retrieves extended data for a folder\n   * @param {object} folder - The folder object to get data for\n   * @returns {object} Extended folder data\n   */\n  static getFoldersData = (folder) => {\n    return {\n      ...folder,\n      children: folder.children.map(fc => SceneNavFolders.getFoldersData(fc)),\n      hasSubfolders: folder.children.length > 0,\n      id: folder.id\n    };\n  }\n\n  /**\n   * Renders the scene folders UI using the Handlebars template\n   * @returns {Promise<void>}\n   */\n  static #templateData = null;\n  static #folderElement = null;\n  static #customList = null;\n\n  static renderSceneFolders = async() => {\n    if(SceneNavFolders.noFolderView()){ return; }\n    if(!SceneNavFolders.selectedFolder){ return; }\n    SceneNavFolders.#defaultFolderName = game.i18n.localize(\"CRLNGN_UI.ui.sceneNav.favoritesFolder\");\n\n    LogUtil.log(\"SCENE NAV renderSceneFolders\", []);\n\n    const folders = SceneNavFolders.getFolders(ui.scenes.folders);\n    \n\n    // Prepare base template data\n    const baseData = {\n      favoritesId: DEFAULT_FOLDER_ID,\n      favoritesName: SceneNavFolders.#defaultFolderName || DEFAULT_FOLDER_ID,\n      folderList: folders.map(f => SceneNavFolders.getFoldersData(f)),\n      viewedSceneId: game.scenes.current.id,\n      users: game.users.contents,\n      isGM: game.user?.isGM,\n      searchValue: SceneNavFolders.searchValue,\n      showSearchResults: !!SceneNavFolders.searchValue\n    };\n\n    // Add folder-specific data\n    if(SceneNavFolders.selectedFolder === DEFAULT_FOLDER_ID) {\n      SceneNavFolders.#templateData = {\n        ...baseData,\n        currFolder: { name: SceneNavFolders.#defaultFolderName || DEFAULT_FOLDER_ID, id: DEFAULT_FOLDER_ID },\n        currIcon: 'fa-star',\n        folders: [],\n        scenes: ui.nav.scenes.filter(sc => sc.permission >= 2)\n      };\n    } else {\n      const foldersData = SceneNavFolders.selectedFolder.children;\n      LogUtil.log(\"foldersData\", [foldersData, SceneNavFolders.selectedFolder]);\n      // Get folder contents and sort by sort property\n      const folderScenes = [...SceneNavFolders.selectedFolder.contents];\n      folderScenes.sort((a, b) => a.sort - b.sort);\n      SceneNavFolders.#templateData = {\n        ...baseData,\n        currFolder: SceneNavFolders.selectedFolder,\n        currIcon: 'fa-folder',\n        folders: foldersData,\n        scenes: folderScenes\n      };\n    }\n\n    // Check if cached elements are still in the document\n    // if (!SceneNavFolders.#folderElement?.isConnected || !SceneNavFolders.#customList?.isConnected) {\n    LogUtil.log(\"Elements not in DOM, rendering template\", []);\n    \n    // Clear existing elements if they exist\n    SceneNavFolders.#folderElement?.remove();\n    SceneNavFolders.#customList?.remove();\n    LogUtil.log(\"renderSceneFolders\", [SceneNavFolders.#templateData]);\n    \n    const renderedHtml = await renderTemplate(\n      `modules/${MODULE_ID}/templates/scene-folder-list.hbs`, \n      SceneNavFolders.#templateData\n    );\n    \n    const targetElement = document.querySelector('#scene-list');\n    targetElement.insertAdjacentHTML('beforebegin', renderedHtml);\n    \n    SceneNavFolders.#folderElement = document.querySelector('#crlngn-scene-folders');\n    SceneNavFolders.#customList = document.querySelector('#crlngn-scene-list');\n    targetElement?.classList.add('hidden');\n    const nav = SceneNavFolders.#customList;//targetElement.previousElementSibling;\n\n    const sceneItems = nav.querySelectorAll(\"li.nav-item\");\n    const navPos = TopNavigation.navPos || 0;\n    const newMargin = parseInt(sceneItems[navPos]?.offsetLeft) * -1;\n    nav.style.marginLeft = newMargin + 'px';\n\n    // Set up initial listeners\n    SceneNavFolders.activateFolderListeners(SceneNavFolders.#folderElement);\n    SceneNavFolders.#addSceneListeners(SceneNavFolders.#customList);\n    // } else {\n    //   // Update existing elements\n    //   SceneNavFolders.#updateFolderView();\n    // }\n\n    TopNavigation.resetLocalVars();\n  }\n\n  /**\n   * Activates event listeners for the scene folders UI\n   * @param {HTMLElement} html - The HTML element containing the scene folders UI\n   */\n  static activateFolderListeners = (html) => {\n    if(SceneNavFolders.noFolderView()){ return; }\n\n    LogUtil.log(\"activateFolderListeners\", [html]);\n\n    // Add click or hover event to folder list header\n    const selectedLink = html.querySelector('a.selected');\n    if(TopNavigation.showFolderListOnClick){\n      selectedLink?.removeEventListener('mouseover', SceneNavFolders.#onOpenList);\n      html.removeEventListener('mouseleave', SceneNavFolders.#onOpenList);\n      selectedLink?.addEventListener('click', SceneNavFolders.#onOpenList);\n    }else{\n      selectedLink?.addEventListener('mouseover', SceneNavFolders.#onOpenList);\n      html.addEventListener('mouseleave', SceneNavFolders.#onOpenList);\n      selectedLink?.removeEventListener('click', SceneNavFolders.#onOpenList);\n    }\n    \n\n    // Add click event to all toggle spans\n    html.querySelectorAll('span.toggle').forEach(toggleSpan => {\n      toggleSpan.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Find the parent li\n        const parentLi = event.currentTarget.closest('li');\n        // Find the subfolders list within this li\n        const subfoldersOl = parentLi.querySelector('ol.subfolders');\n        \n        // Toggle visibility of the subfolders\n        if (!subfoldersOl) { return }\n        const isHidden = !(subfoldersOl.classList.contains('open'));\n        if(isHidden){\n          subfoldersOl.classList.add('open');\n          event.currentTarget.textContent = '−';\n        }else{\n          subfoldersOl.classList.remove('open');\n          event.currentTarget.textContent = '+';\n        }\n      });\n    });\n\n    // add click behavior for all folders in the list\n    const folderItems = html.querySelectorAll(\".folder-list li.folder\");\n    folderItems.forEach(fi => {\n      fi.addEventListener(\"click\", SceneNavFolders.#onSelectFolder);\n    });\n\n    const searchInput = html.querySelector('.search-container .input-scene-search');\n    searchInput.addEventListener(\"keyup\", SceneNavFolders.#onSearchInput);\n    searchInput.addEventListener('keydown', evt => {\n      evt.stopPropagation();\n    });\n  }\n\n  /**\n   * Adds click event listeners to scene items in the scene folders UI\n   * @param {HTMLElement} html - The HTML element containing the scene folders UI\n   */\n  static #addSceneListeners = (html) => {\n    const sceneItems = html.querySelectorAll(\"li.nav-item\");\n    sceneItems.forEach(li => {\n      const isFolder = li.classList.contains(\"folder\");\n      li.addEventListener(\"click\", isFolder ? SceneNavFolders.#onSelectFolder : SceneNavFolders.#onSelectScene);\n      li.addEventListener(\"dblclick\", isFolder ? ()=>{} : SceneNavFolders.#onActivateScene);\n    });\n\n    // Only add drag-drop if user is GM\n    if (game.user?.isGM) {\n      SceneNavFolders.#initializeDragDrop(html);\n    }\n  }\n\n  /**\n   * Initialize drag and drop functionality for scenes\n   * @param {HTMLElement} html - The scene list container\n   */\n  static #initializeDragDrop = (html) => {\n    // Check if Sortable is available, if not retry after a short delay\n    if (typeof Sortable === 'undefined') {\n      setTimeout(() => SceneNavFolders.#initializeDragDrop(html), 100);\n      return;\n    }\n    LogUtil.log(\"#initializeDragDrop\", []);\n\n    // Common options for both scenes and folders\n    const commonOptions = {\n      animation: 100,\n      delay: 50,\n      delayOnTouchOnly: true\n    };\n\n    // Initialize SortableJS for scenes\n    const sceneOptions = {\n      ...commonOptions,\n      draggable: \".scene.nav-item\",\n      onEnd: async (evt) => {\n        LogUtil.log(\"#initializeDragDrop scenes\", [\"onEnd\", evt]);\n\n        const scenes = html.querySelectorAll(\".scene.nav-item\");\n        const updates = [];\n        \n        // Get all scenes in their new order\n        const orderedScenes = Array.from(scenes).map(el => game.scenes.get(el.dataset.sceneId));\n        \n        // Calculate navigation order for scenes\n        let order = 0;\n        const density = CONST.SORT_INTEGER_DENSITY;\n\n        // First pass: Update order for all scenes in the drag operation\n        for (const scene of orderedScenes) {\n          if (!scene) continue;\n          \n          const update = {\n            _id: scene.id\n          };\n\n          // For default folder (Favorites), only update navOrder for navigable scenes\n          if (SceneNavFolders.selectedFolder === DEFAULT_FOLDER_ID) {\n            if (scene.navigation) {\n              update.navOrder = order;\n              order += density;\n            }\n          } \n          // For scenes in the selected folder, update their sort order\n          else if (SceneNavFolders.selectedFolder && scene.folder?.id === SceneNavFolders.selectedFolder.id) {\n            update.sort = order;\n            order += density;\n          }\n\n          updates.push(update);\n        }\n\n        // Second pass: Update any remaining scenes not in the updates array\n        const remainingScenes = game.scenes.contents.filter(s => !updates.some(u => u._id === s.id));\n        \n        // Sort remaining scenes by their current order (navOrder for favorites, sort for folders)\n        remainingScenes.sort((a, b) => {\n          if (SceneNavFolders.selectedFolder === DEFAULT_FOLDER_ID) {\n            // Only include navigable scenes for favorites\n            if (!a.navigation && !b.navigation) return 0;\n            if (!a.navigation) return 1;\n            if (!b.navigation) return -1;\n            return a.navOrder - b.navOrder;\n          } else {\n            // Only include scenes from the current folder\n            const aInFolder = a.folder?.id === SceneNavFolders.selectedFolder.id;\n            const bInFolder = b.folder?.id === SceneNavFolders.selectedFolder.id;\n            if (!aInFolder && !bInFolder) return 0;\n            if (!aInFolder) return 1;\n            if (!bInFolder) return -1;\n            return a.sort - b.sort;\n          }\n        });\n\n        // Update the remaining scenes with new order values\n        for (const scene of remainingScenes) {\n          if (SceneNavFolders.selectedFolder === DEFAULT_FOLDER_ID) {\n            if (scene.navigation) {\n              updates.push({\n                _id: scene.id,\n                navOrder: order\n              });\n              order += density;\n            }\n          } else if (scene.folder?.id === SceneNavFolders.selectedFolder.id) {\n            updates.push({\n              _id: scene.id,\n              sort: order\n            });\n            order += density;\n          }\n        }\n\n        // Apply updates\n        if (updates.length) {\n          await Scene.updateDocuments(updates);\n          ui.nav.render();\n          // Re-render the scene directory to reflect the new sort order\n          game.scenes.directory.render();\n        }\n      }\n    };\n\n    // Initialize SortableJS for folders\n    const folderOptions = {\n      ...commonOptions,\n      draggable: \".folder.nav-item\",\n      onEnd: async (evt) => {\n        LogUtil.log(\"#initializeDragDrop folders\", [\"onEnd\", evt]);\n\n        const folders = html.querySelectorAll(\".folder.nav-item\");\n        const updates = [];\n        \n        // Get all folders in their new order\n        const orderedFolders = Array.from(folders).map(el => {\n          const folderId = el.dataset.folderId;\n          return game.scenes.folders.find(f => f.id === folderId);\n        }).filter(f => f);\n        \n        // Calculate sort order for folders\n        let order = 0;\n        const density = CONST.SORT_INTEGER_DENSITY;\n\n        // Update sort order for all folders in the drag operation\n        for (const folder of orderedFolders) {\n          if (!folder) continue;\n          \n          // Only update folders that are children of the selected folder\n          if (folder.folder?.id === SceneNavFolders.selectedFolder?.id) {\n            updates.push({\n              _id: folder.id,\n              sort: order\n            });\n            order += density;\n          }\n        }\n\n        // Update remaining folders in the same parent folder\n        const remainingFolders = game.scenes.folders\n          .filter(f => f.folder?.id === SceneNavFolders.selectedFolder?.id && !updates.some(u => u._id === f.id))\n          .sort((a, b) => a.sort - b.sort);\n\n        for (const folder of remainingFolders) {\n          updates.push({\n            _id: folder.id,\n            sort: order\n          });\n          order += density;\n        }\n\n        // Apply updates\n        if (updates.length) {\n          await Folder.updateDocuments(updates);\n          ui.nav.render();\n          // Re-render the scene directory to reflect the new sort order\n          game.scenes.directory.render();\n        }\n      }\n    };\n\n    // Create separate Sortable instances for scenes and folders\n    new Sortable(html, sceneOptions);\n    new Sortable(html, folderOptions);\n  }\n\n  /**\n   * Refreshes the folder view by updating folder data and re-rendering\n   */\n  static refreshFolderView = async() => {\n    if(SceneNavFolders.noFolderView()){ return; }\n    SceneNavFolders.folderListData = SceneNavFolders.getFolders(ui.scenes.folders);\n    await SceneNavFolders.renderSceneFolders();\n    TopNavigation.placeNavButtons();\n  }\n\n  /**\n   * Updates the search results container with filtered scenes and folders\n   * @param {string} searchValue - The search query to filter by\n   */\n  static updateSearchResults = (searchValue) => {\n    if(SceneNavFolders.noFolderView()){ return; }\n    const searchResultsContainer = document.querySelector('.search-container .search-results');\n    if (!searchResultsContainer) return;\n    \n    // Clear previous results\n    searchResultsContainer.innerHTML = '';\n    \n    if (!searchValue) {\n      searchResultsContainer.classList.add('hidden');\n      return;\n    }\n    \n    // Filter scenes and folders\n    const filteredScenes = game.scenes.filter(sc => {\n      return sc.name.toLowerCase().includes(searchValue.toLowerCase()) && sc.permission >= 2;\n    });\n    \n    const filteredFolders = game.scenes.folders.filter(f => {\n      return f.name.toLowerCase().includes(searchValue.toLowerCase());\n    });\n    \n    // Show the results container\n    searchResultsContainer.classList.remove('hidden');\n    \n    // Add folders to results\n    filteredFolders.forEach(folder => {\n      const li = document.createElement('li');\n      li.className = 'folder';\n      li.dataset.folderId = folder.id;\n      li.innerHTML = `<a><i class=\"fas fa-folder\"></i> ${folder.name}</a>`;\n      li.addEventListener('click', SceneNavFolders.#onSelectFolder);\n      searchResultsContainer.appendChild(li);\n    });\n    \n    // Add scenes to results\n    filteredScenes.forEach(scene => {\n      const li = document.createElement('li');\n      li.className = 'scene';\n      li.dataset.sceneId = scene.id;\n      li.innerHTML = `<a><i class=\"fas fa-map\"></i> ${scene.name}</a>`;\n      li.addEventListener('dblclick', SceneNavFolders.#onActivateScene);\n      li.addEventListener('click', SceneNavFolders.#onSelectScene);\n      searchResultsContainer.appendChild(li);\n    });\n    \n    // If no results found\n    if (filteredFolders.length === 0 && filteredScenes.length === 0) {\n      const li = document.createElement('li');\n      li.className = 'no-results';\n      li.textContent = 'No matching results found';\n      searchResultsContainer.appendChild(li);\n    }\n  }\n\n  /**\n   * Registers Foundry VTT hooks for folder and scene changes\n   */\n  static registerHooks() {\n    Hooks.on(HOOKS_CORE.CREATE_FOLDER, (folder) => {\n      if (folder.type === \"Scene\") {\n        SceneNavFolders.refreshFolderView();\n      }\n    });\n    \n    Hooks.on(HOOKS_CORE.UPDATE_FOLDER, (folder) => {\n      if (folder.type === \"Scene\") {\n        SceneNavFolders.refreshFolderView();\n      }\n    });\n    \n    Hooks.on(HOOKS_CORE.DELETE_FOLDER, (folder) => {\n      if (folder.type === \"Scene\") {\n        SceneNavFolders.refreshFolderView();\n      }\n    });\n    \n    // Also hook into scene changes\n    Hooks.on(HOOKS_CORE.CREATE_SCENE, () => {\n      SceneNavFolders.refreshFolderView();\n    });\n    Hooks.on(HOOKS_CORE.UPDATE_SCENE, () => {\n      SceneNavFolders.refreshFolderView();\n    });\n    Hooks.on(HOOKS_CORE.DELETE_SCENE, () => {\n      SceneNavFolders.refreshFolderView();\n    });\n\n    Hooks.on(HOOKS_CORE.RENDER_DOCUMENT_DIRECTORY, (directory) => {\n      if(directory.entryType !== \"Scene\") return;\n      \n      const sceneNav = document.querySelector('#scenes .directory-list');\n      sceneNav.addEventListener('contextmenu', (event) => {\n        const navItem = event.target.closest('.directory-item');\n        if (!navItem) return;\n        \n        SceneNavFolders.contextMenuSceneId = navItem.dataset.documentId || null;\n        \n        if (SceneNavFolders.contextMenuSceneId) {\n          const scene = game.scenes.get(SceneNavFolders.contextMenuSceneId);\n          const langPath = scene.navigation ? \"removeFromFavorites\" : \"addToFavorites\";\n          const optionLabel = game.i18n.localize(\"CRLNGN_UI.ui.sceneNav.\" + langPath);\n\n          SceneNavFolders.#observeSceneContextMenu(optionLabel);\n        }\n      });\n    });\n\n    Hooks.on(HOOKS_CORE.RENDER_SCENE_NAV, () => {      \n      const sceneNav = document.querySelector('#navigation');\n      sceneNav.addEventListener('contextmenu', (event) => {\n        const navItem = event.target.closest('.nav-item');\n        if (!navItem) return;\n        \n        SceneNavFolders.contextMenuSceneId = event.currentTarget.dataset.sceneId || navItem.dataset.sceneId || null;\n        \n        if (SceneNavFolders.contextMenuSceneId) {\n          const scene = game.scenes.get(SceneNavFolders.contextMenuSceneId);\n          const langPath = scene.navigation ? \"removeFromFavorites\" : \"addToFavorites\";\n          const optionLabel = game.i18n.localize(\"CRLNGN_UI.ui.sceneNav.\" + langPath);\n          // LogUtil.log(\"contextmenu\", [scene, optionLabel]);\n\n          SceneNavFolders.#observeSceneContextMenu(optionLabel);\n        }\n      });\n    });\n\n    Hooks.on(HOOKS_CORE.GET_SCENE_NAV_CONTEXT, (nav, options) => {\n      LogUtil.log(HOOKS_CORE.GET_SCENE_NAV_CONTEXT, [nav, options]);\n\n      const initialViewOption = options.find(opt => opt.name === 'CRLNGN_UI.ui.sceneNav.initialViewBtn');\n      if(!initialViewOption){\n        options.push({\n          ...options[0],\n          condition: li => game.user?.isGM && game.scenes.get(li.data(\"sceneId\"))._view,\n          callback: li => {\n              let scene = game.scenes.get(li.data(\"sceneId\"));\n              let x = parseInt(canvas.stage.pivot.x);\n              let y = parseInt(canvas.stage.pivot.y);\n              let scale = canvas.stage.scale.x;\n              scene.update({ initial: { x: x, y: y, scale: scale } }, { diff: false });\n              ui.notifications.info(game.i18n.localize(\"CRLNGN_UI.ui.notifications.initialViewSet\"))\n          },\n          icon: \"<i class=\\\"fas fa-expand\\\"></i>\",\n          name: 'CRLNGN_UI.ui.sceneNav.initialViewBtn'\n        });\n      }\n    });\n  }\n  /**\n   * Observes the context menu and adds a label for including or removing a scene from favorites\n   * @param {string} optionLabel - The label for the context menu item\n   */\n  static #observeSceneContextMenu = (optionLabel) => {\n    const updateContextMenu = () => {\n      const contextMenu = document.querySelector('#context-menu');\n      if (!contextMenu) return false;\n\n      const menuItems = contextMenu.querySelectorAll('.context-item');\n      const toggleNavItem = Array.from(menuItems).find(item => \n        item.innerHTML.includes(game.i18n.localize(\"SCENES.ToggleNav\"))\n      );\n\n      if (toggleNavItem) {\n        LogUtil.log(\"updating toggle nav item\", [toggleNavItem]);\n        toggleNavItem.innerHTML = `<i class=\"fas fa-star fa-fw\"></i>${optionLabel}`;\n        return true;\n      }\n      return false;\n    };\n\n    // Try to update immediately first\n    if (updateContextMenu()) return;\n\n    // If immediate update fails, set up observer for menu creation\n    const contextMenuObserver = new MutationObserver((mutations, obs) => {\n      if (updateContextMenu()) {\n        obs.disconnect();\n      }\n    });\n\n    // Start observing document body for changes\n    contextMenuObserver.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n\n    // Safety cleanup\n    setTimeout(() => contextMenuObserver.disconnect(), 1000);\n  }\n\n  /**\n   * @private\n   * Handles opening/closing the folder list\n   * @param {Event} evt - The triggering event\n   */\n  static #onOpenList = (evt) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const folderElement = document.querySelector('#crlngn-scene-folders');\n    const isMouseEvent = evt.type.startsWith('mouse');\n    const isHoverMode = !TopNavigation.showFolderListOnClick;\n\n    // For mouseover, only open if it's not already open\n    if (isMouseEvent && isHoverMode && evt.type === 'mouseover') {\n      if (!folderElement?.classList.contains('open')) {\n        folderElement?.classList.add('open');\n      }\n      return;\n    }\n\n    // For mouseleave in hover mode, only close if we're actually leaving the entire folder element\n    if (isMouseEvent && isHoverMode && evt.type === 'mouseleave') {\n      folderElement?.classList.remove('open');\n      return;\n    }\n\n    // For click mode, toggle the open state\n    if (!isMouseEvent) {\n      if (folderElement?.classList.contains('open')) {\n        folderElement?.classList.remove('open');\n      } else {\n        folderElement?.classList.add('open');\n        document.addEventListener('click', SceneNavFolders.#onOutsideClick);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Handles outside click events\n   * @param {Event} evt - The triggering event\n   */\n  static #onOutsideClick = (evt) => {\n    evt.preventDefault();\n\n    document.removeEventListener('click', SceneNavFolders.#onOutsideClick);\n    // evt.stopPropagation();\n    const target = evt.target;\n    const folderElement = document.querySelector('#crlngn-scene-folders');\n    LogUtil.log(\"#onOutsideClick\", [folderElement, target, folderElement.contains(target)]);\n    // const selectedLink = folderElement?.querySelector('a.selected');\n    if (folderElement?.classList.contains('open') && !folderElement.contains(target)) {\n      folderElement.classList.remove('open');\n    }\n  }\n\n  /**\n   * Handles scene selection\n   * @param {Event} evt - The triggering event\n   * @private\n   */\n  static #clickTimer = null;\n  static #onSelectScene = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    document.removeEventListener('click', SceneNavFolders.#onOutsideClick);\n    const target = evt.currentTarget;\n    const data = target.dataset;\n    const scene = game.scenes.get(data.sceneId);\n    const isSearchResult = target.parentElement?.classList.contains('search-results');\n\n    LogUtil.log(\"scene click\", [scene, target.parentElement, isSearchResult]);\n\n    // Clear any existing timer\n    if (SceneNavFolders.#clickTimer) {\n      clearTimeout(SceneNavFolders.#clickTimer);\n      SceneNavFolders.#clickTimer = null;\n    }\n\n    // Set a new timer for the click action\n    SceneNavFolders.#clickTimer = setTimeout(() => {\n      if(isSearchResult){\n        scene.navigation = true;\n        SceneNavFolders.selectedFolder = SceneNavFolders.selectFolder(DEFAULT_FOLDER_ID);\n      }\n      scene.view();\n      SceneNavFolders.refreshFolderView();\n      SceneNavFolders.#clickTimer = null;\n      \n    }, 250); // 250ms delay to wait for potential double-click\n  }\n\n  static #onActivateScene = (evt) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const target = evt.currentTarget;\n    const data = target.dataset;\n    const scene = game.scenes.get(data.sceneId);\n\n    // Clear the single-click timer if it exists\n    if (SceneNavFolders.#clickTimer) {\n      clearTimeout(SceneNavFolders.#clickTimer);\n      SceneNavFolders.#clickTimer = null;\n    }\n\n    LogUtil.log(\"#onActivateScene\", [scene]);\n    scene.activate();\n    SceneNavFolders.refreshFolderView();\n  }\n\n  /**\n   * @private\n   * Handles folder selection\n   * @param {Event} evt - The triggering event\n   */\n  static #onSelectFolder = (evt) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    document.removeEventListener('click', SceneNavFolders.#onOutsideClick);\n    const target = evt.currentTarget;\n    const data = target.dataset;\n    LogUtil.log(\"#onSelectFolder\", [data]);\n    const newFolder = SceneNavFolders.selectFolder(data.folderId || \"\");\n    if(newFolder !== SceneNavFolders.selectedFolder){\n      TopNavigation.navPos = 0;\n    }\n    SceneNavFolders.selectedFolder = newFolder;\n    SceneNavFolders.refreshFolderView();\n  }\n\n  /**\n   * @private\n   * Handles search input changes\n   * @param {Event} evt - The triggering event\n   */\n  static #onSearchInput = (evt) => {\n    evt.stopPropagation();\n    \n    const input = evt.currentTarget;\n    const value = input.value;\n    \n    SceneNavFolders.searchValue = value;\n    SceneNavFolders.updateSearchResults(value);\n  }\n\n  /**\n   * @private\n   * Handles scene selection\n   * @param {Event} evt - The triggering event\n   */\n  static #onItemClick = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    let sceneId = evt.currentTarget?.dataset?.sceneId || \"\";\n    let folderId = evt.currentTarget?.dataset?.folderId || \"\";\n\n    if(sceneId){\n      game.scenes.get(sceneId).view();\n    }else if(folderId){\n      SceneNavFolders.selectedFolder = SceneNavFolders.selectFolder(folderId);\n      SceneNavFolders.refreshFolderView();\n    }\n  }\n\n  /**\n   * Determines if the folder view should be hidden based on user permissions and settings\n   * @returns {boolean} True if folder view should be hidden\n   */\n  static noFolderView = () => {\n    const isGM = game?.user?.isGM;\n    return (!isGM && !TopNavigation.navFoldersForPlayers) ||\n      (!TopNavigation.navFoldersEnabled) ||\n      (!TopNavigation.sceneNavEnabled)\n  }\n\n}","import { MODULE_ID } from \"../constants/General.mjs\";\nimport { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { getSettingMenus } from \"../constants/SettingMenus.mjs\";\nimport { BORDER_COLOR_TYPES, getSettings, ICON_SIZES, THEMES } from \"../constants/Settings.mjs\";\nimport { CameraUtil } from \"./CameraUtil.mjs\";\nimport { ChatUtil } from \"./ChatUtil.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { ModuleCompatUtil } from \"./ModuleCompatUtil.mjs\";\nimport { SceneNavFolders } from \"./SceneFoldersUtil.mjs\";\nimport { TopNavigation } from \"./TopNavUtil.mjs\";\n\n/**\n * Core settings management utility for the Carolingian UI module\n * Handles registration, retrieval, and application of module settings\n */\nexport class SettingsUtil {\n  static #uiHidden = false;\n  static firstLoad = true;\n\n  /**\n   * Registers all module settings with Foundry VTT\n   * Initializes settings, registers menus, and sets up hooks for settings changes\n   */\n  static registerSettings(){\n    const SETTINGS = getSettings();\n    LogUtil.log(\"registerSettings - test\", [SETTINGS], true);\n    document.querySelector(\"body\").classList.add(MODULE_ID); \n    \n    /**\n     * Register each of the settings defined in the SETTINGS constant \n     */\n    \n    const settingsList = Object.entries(SETTINGS);\n    settingsList.forEach(async(entry) => {\n      const setting = entry[1]; \n      LogUtil.log(\"Registering... \",[entry], true);\n\n      const settingObj = { \n        name: setting.label,\n        hint: setting.hint,\n        default: setting.default,\n        type: setting.propType,\n        scope: setting.scope,\n        config: setting.config,\n        requiresReload: setting.requiresReload || false,\n        onChange: value => SettingsUtil.apply(setting.tag, value)\n      }\n\n      if(setting.choices){\n        settingObj.choices = setting.choices\n      }\n\n      // @ts-ignore - Valid module ID for settings registration\n      await game.settings.register(MODULE_ID, setting.tag, settingObj);\n\n      if(SettingsUtil.get(setting.tag)===undefined){\n        SettingsUtil.set(setting.tag, setting.default);\n      }\n\n      game.keybindings.register(MODULE_ID, \"hideInterface\", {\n        name: \"Toggle Hide/Show User Interface\",\n        hint: \"Hides or shows the UI. This will affect all elements inside the `#interface` html block\",\n        editable: [\n          {\n            key: \"0\",\n            modifiers: [\"Control\"]\n          }\n        ],\n        onDown: () => {  },\n        onUp: () => { SettingsUtil.hideInterface() },\n        restricted: false,             // Restrict this Keybinding to gamemaster only?\n      });\n\n      // LogUtil.log(\"registerSettings\",[setting.tag, SettingsUtil.get(setting.tag)]);\n    });\n\n    // Apply custom theme and CSS\n    SettingsUtil.applyThemeSettings();\n    SettingsUtil.applyCustomCSS();\n    SettingsUtil.applyModuleAdjustments();\n\n    /**\n     * Register subsetting menus\n     */\n    const settingMenus = Object.entries(getSettingMenus());\n    settingMenus.forEach(async(entry) => {\n      const settingMenu = entry[1]; \n      const settingMenuObj = {\n        name: settingMenu.tag,\n        label: settingMenu.label, \n        hint: settingMenu.hint,\n        icon: settingMenu.icon, \n        type: settingMenu.propType,\n        restricted: settingMenu.restricted\n      }\n      await game.settings.registerMenu(MODULE_ID, settingMenu.tag, settingMenuObj); \n    });\n\n\n    Hooks.on(HOOKS_CORE.RENDER_SCENE_CONTROLS, SettingsUtil.applyLeftControlsSettings);\n    Hooks.on(HOOKS_CORE.RENDER_PLAYERS_LIST, SettingsUtil.applyPlayersListSettings); \n    Hooks.on(HOOKS_CORE.RENDER_HOTBAR, () => {\n      if(SettingsUtil.firstLoad){\n        SettingsUtil.firstLoad = false;\n        SettingsUtil.applyHotBarCollapse();\n      }\n      SettingsUtil.applyHotBarSettings();\n    });\n    //apply debug Settings\n    SettingsUtil.applyDebugSettings();\n    // apply chat style settings\n    SettingsUtil.applyChatStyles();\n    // aply border colors\n    SettingsUtil.applyBorderColors();\n\n    // apply scene nav settings\n    const sceneNavFields = SETTINGS.sceneNavMenu.fields;\n    sceneNavFields.forEach(fieldName => {\n      SettingsUtil.apply(SETTINGS[fieldName].tag);\n    });\n\n    // apply custom font settings\n    const fontFields = SETTINGS.customFontsMenu.fields;\n    fontFields.forEach(fieldName => {\n      SettingsUtil.applyCustomFonts(SETTINGS[fieldName].tag);\n    });   \n\n    // apply left controls settings\n    const controlFields = SETTINGS.leftControlsMenu.fields;\n    controlFields.forEach(fieldName => {\n      SettingsUtil.applyLeftControlsSettings(SETTINGS[fieldName].tag);\n    }); \n  }\n\n  /**\n   * Retrieve the value of a setting for this module\n   * @param {String} settingName \n   * @param {String} moduleName \n   * @returns {*} // current value of the setting\n   */\n  /**\n   * Retrieves the value of a module setting\n   * @param {string} settingName - Name of the setting to retrieve\n   * @param {string} [moduleName=MODULE_ID] - ID of the module the setting belongs to\n   * @returns {*} Current value of the setting\n   */\n  static get(settingName, moduleName=MODULE_ID){\n    if(!settingName){ return null; }\n\n    let setting = false;\n\n    if(moduleName===MODULE_ID){\n      setting = game.settings.get(moduleName, settingName);\n    }else{\n      const client = game.settings.storage.get(\"client\");\n      let selectedSetting = client[`${moduleName}.${settingName}`];\n      //\n      if(selectedSetting===undefined){\n        const world = game.settings.storage.get(\"world\");\n        selectedSetting = world.getSetting(`${moduleName}.${settingName}`);\n      }\n      setting = selectedSetting?.value;\n      LogUtil.log(\"GET Setting\", [selectedSetting, setting]);\n    }\n\n    return setting;\n  }\n  /**\n   * Retrieve the value of a setting for this module\n   * @param {String} settingName \n   * @param {String} moduleName \n   * @returns {*} // current value of the setting\n   */\n  /**\n   * Updates the value of a module setting\n   * @param {string} settingName - Name of the setting to update\n   * @param {*} newValue - New value to set\n   * @param {string} [moduleName=MODULE_ID] - ID of the module the setting belongs to\n   * @returns {boolean} True if setting was updated successfully\n   */\n  static set(settingName, newValue, moduleName=MODULE_ID){ \n    if(!settingName){ return false; }\n\n    let selectedSetting = game.settings.storage.get(\"client\")[`${moduleName}.${settingName}`];\n\n    if(!selectedSetting){\n      const world = game.settings.storage.get(\"world\");\n      selectedSetting = world.getSetting(`${moduleName}.${settingName}`);\n    } \n    LogUtil.log(\"Setting\",[settingName, selectedSetting]);\n\n    try{\n      game.settings.set(moduleName, settingName, newValue);\n      // selectedSetting.update({value: newValue});\n    }catch(e){\n      LogUtil.log(\"Unable to change setting\",[settingName, selectedSetting]);\n    }\n\n    return true;\n  }\n\n  /**\n   * Apply current settings\n   */\n  /**\n   * Applies a specific setting based on its tag\n   * @param {string} settingTag - The tag identifying the setting to apply\n   * @param {*} [value] - The value to apply, if not provided uses stored setting\n   */\n  static apply(settingTag, value=undefined){\n    const SETTINGS = getSettings();\n\n    if(value===undefined){\n      value = SettingsUtil.get(settingTag);\n    }\n    LogUtil.log(\"SettingsUtil.apply\",[settingTag, value, SettingsUtil.get(settingTag)]); \n    switch(settingTag){\n      case SETTINGS.enableMacroLayout.tag:\n        SettingsUtil.applyHotBarSettings();\n        break;\n      case SETTINGS.collapseMacroBar.tag:\n        SettingsUtil.applyHotBarCollapse();\n        break;\n      case SETTINGS.autoHidePlayerList.tag:\n        SettingsUtil.applyPlayersListSettings();\n        break;\n      case SETTINGS.uiFontBody.tag:\n      case SETTINGS.uiFontTitles.tag:\n      case SETTINGS.journalFontBody.tag:\n      case SETTINGS.journalFontTitles.tag:\n        SettingsUtil.applyCustomFonts(settingTag, value);\n        break;\n      case SETTINGS.controlsBottomBuffer.tag:\n      case SETTINGS.controlsIconSize.tag:\n      case SETTINGS.controlsAutoHide.tag:\n      case SETTINGS.hideFoundryLogo.tag:\n        SettingsUtil.applyLeftControlsSettings(settingTag, value);\n        break;\n      case SETTINGS.cameraDockMenu.tag: \n        SettingsUtil.applyCameraPosX();\n        SettingsUtil.applyCameraPosY();\n        SettingsUtil.applyCameraWidth();\n        SettingsUtil.applyCameraHeight();\n        break;\n      case SETTINGS.chatBorderColor.tag:\n        ChatUtil.chatBorderColor = SettingsUtil.get(SETTINGS.chatBorderColor.tag);\n        LogUtil.log(\"SettingsUtil.apply\",[settingTag]); \n        SettingsUtil.applyBorderColors();\n        break;\n      case SETTINGS.enableChatStyles.tag:\n        ChatUtil.enableChatStyles = SettingsUtil.get(SETTINGS.enableChatStyles.tag);\n        LogUtil.log(\"SettingsUtil.apply\",[settingTag]);\n        SettingsUtil.applyChatStyles();\n        break;\n      case SETTINGS.enforceDarkMode.tag:\n        SettingsUtil.resetFoundryThemeSettings();\n        break;\n      case SETTINGS.debugMode.tag:\n        SettingsUtil.applyDebugSettings();\n        break;\n      // case SETTINGS.sceneNavMenu.tag:\n      //   TopNavigation.navSettings = SettingsUtil.get(SETTINGS.sceneNavMenu.tag);\n      //   break;\n      case SETTINGS.sceneNavEnabled.tag:\n        TopNavigation.sceneNavEnabled = value;\n        break;\n      case SETTINGS.navFoldersEnabled.tag:\n        TopNavigation.navFoldersEnabled = value;\n        break;\n      case SETTINGS.navStartCollapsed.tag:\n        TopNavigation.navStartCollapsed = value;\n        break;\n      case SETTINGS.showFolderListOnClick.tag:\n        TopNavigation.showFolderListOnClick = value;\n        SceneNavFolders.refreshFolderView();\n        break;\n      case SETTINGS.showNavOnHover.tag:\n        TopNavigation.showNavOnHover = value;\n        break;\n      case SETTINGS.sceneNavCollapsed.tag:\n        TopNavigation.isCollapsed = SettingsUtil.get(SETTINGS.sceneNavCollapsed.tag);\n        break;\n      case SETTINGS.sceneNavPos.tag:\n        SettingsUtil.applySceneNavPos();\n        break;\n      case SETTINGS.colorTheme.tag:\n        SettingsUtil.applyThemeSettings();\n        break;\n      case SETTINGS.customStyles.tag:\n        SettingsUtil.applyCustomCSS();\n        break;\n      case SETTINGS.adjustOtherModules.tag:\n        SettingsUtil.applyModuleAdjustments();\n        break;\n      default:\n        // do nothing\n    }\n    \n  }\n\n  /**\n   * Applies border color settings to chat messages\n   * Can be based on player color or roll type\n   */\n  static applyBorderColors(){\n    const SETTINGS = getSettings();\n    const borderColorSettings = SettingsUtil.get(SETTINGS.chatBorderColor.tag);\n    const body = document.querySelector(\"body\");\n\n    if(borderColorSettings===BORDER_COLOR_TYPES.playerColor.name){ \n     body.classList.add(\"player-chat-borders\");\n     body.classList.remove(\"roll-chat-borders\"); \n    }else if(borderColorSettings===BORDER_COLOR_TYPES.rollType.name){\n     body.classList.add(\"roll-chat-borders\"); \n     body.classList.remove(\"player-chat-borders\");\n    }else{\n     body.classList.remove(\"player-chat-borders\");\n     body.classList.remove(\"roll-chat-borders\"); \n    }\n  }\n\n  /**\n   * Applies chat message styling settings\n   */\n  static applyChatStyles(){\n    const SETTINGS = getSettings();\n    const chatMsgSettings = SettingsUtil.get(SETTINGS.enableChatStyles.tag);\n    const body = document.querySelector(\"body\");\n\n    LogUtil.log(\"applyChatStyles\", [chatMsgSettings, SETTINGS]);\n\n    if(chatMsgSettings){ \n      body.classList.add(\"crlngn-chat\"); \n    }else{\n      body.classList.remove(\"crlngn-chat\"); \n    }\n  }\n\n  /**\n   * Applies settings for the macro hotbar\n   */\n  static applyHotBarSettings(){\n    const SETTINGS = getSettings();\n    const macroSizeOption = SettingsUtil.get(SETTINGS.enableMacroLayout.tag);\n    const hotbar = document.querySelector(\"#hotbar\");\n\n    if(!macroSizeOption && hotbar){\n      hotbar.classList.add(\"foundry-default\");\n    }else if(hotbar){\n      hotbar.classList.remove(\"foundry-default\");\n    }\n  }\n  /**\n   * Applies collapse state to the macro hotbar\n   * Controls visibility and expansion state of the macro bar\n   */\n  static applyHotBarCollapse(){\n    const SETTINGS = getSettings();\n    const macroCollapseOption = SettingsUtil.get(SETTINGS.collapseMacroBar.tag);\n\n    if(macroCollapseOption){\n      ui.hotbar.collapse();\n    }\n  }\n\n  /**\n   * Applies settings to left controls bar\n   * @param {string} tag - Setting tag to apply\n   * @param {*} value - Value to apply for the setting\n   */\n  static applyLeftControlsSettings(tag, value){\n    const SETTINGS = getSettings();\n    const navEnabled = SettingsUtil.get(SETTINGS.sceneNavEnabled.tag);\n    const controls = document.querySelector(\"#ui-left\");\n    const logo = document.querySelector(\"#ui-left #logo\");\n    const body = document.querySelector('body.crlngn-ui');\n    const bodyStyleElem = document.querySelector('#crlngn-ui-vars');\n\n    LogUtil.log(\"applyLeftControlsSettings\", [tag]);\n\n    switch(tag){\n      case SETTINGS.controlsAutoHide.tag:\n        if(SettingsUtil.get(SETTINGS.controlsAutoHide.tag)){\n          controls.classList.add(\"auto-hide\"); \n        }else{\n          controls.classList.remove(\"auto-hide\"); \n        }\n        break;\n      case SETTINGS.hideFoundryLogo.tag:\n        const bodyStyles = window.getComputedStyle(body);\n        const navHeight = bodyStyles.getPropertyValue('--top-nav-height') || '0px';\n        const topPadding = parseFloat(navHeight) || 0;\n        const hideFoundryLogo = SettingsUtil.get(SETTINGS.hideFoundryLogo.tag);\n        LogUtil.log(\"applyLeftControlsSettings\", [tag, topPadding, navHeight]);\n\n        if(hideFoundryLogo===undefined || hideFoundryLogo===true){\n          logo.classList.remove(\"visible\");\n          GeneralUtil.addCSSVars('--ui-top-padding', `${topPadding}px`);\n          document.querySelector(\"body\").classList.remove('logo-visible');\n        } else {\n          logo.classList.add(\"visible\");\n          if(navEnabled){\n            GeneralUtil.addCSSVars('--ui-top-padding',`${72 + topPadding}px`);\n            document.querySelector(\"body\").classList.add('logo-visible');\n          }else{\n            GeneralUtil.addCSSVars('--ui-top-padding','72px');\n          }\n        }\n        break;\n      case SETTINGS.controlsBottomBuffer.tag:\n        SettingsUtil.applyControlsBuffer();\n        break;\n      case SETTINGS.controlsIconSize.tag:\n        SettingsUtil.applyControlIconSize();\n        break;\n      default:\n        //\n    }\n  }\n\n  /**\n   * Applies size settings for control icons\n   * Updates the size of icons in the left controls panel\n   */\n  static applyControlIconSize(){\n    const SETTINGS = getSettings();\n    const iconSize = SettingsUtil.get(SETTINGS.controlsIconSize.tag);\n    const body = document.querySelector(\"body\");\n    const size = iconSize == ICON_SIZES.small.name ? ICON_SIZES.small.size : ICON_SIZES.regular.size;\n\n    LogUtil.log(\"applyControlIconSize\", [size]);\n    GeneralUtil.addCSSVars('--left-control-item-size', size);\n    SettingsUtil.applyLeftControlsSettings(SETTINGS.hideFoundryLogo.tag);\n  }\n\n  /**\n   * Applies bottom buffer spacing to left controls\n   * Adjusts the spacing at the bottom of the controls panel\n   */\n  static applyControlsBuffer(){\n    const SETTINGS = getSettings();\n    const leftControls = SettingsUtil.get(SETTINGS.leftControlsMenu.tag);\n    // const root = document.querySelector(\"body.crlngn-ui\");\n    const buffer = isNaN(leftControls.bottomBuffer) ? SETTINGS.leftControlsMenu.default.bottomBuffer : leftControls.bottomBuffer;\n    GeneralUtil.addCSSVars('--controls-bottom-buffer', `${buffer || 0}px`);\n  }\n\n  /**\n   * Applies settings for the players list\n   */\n  static applyPlayersListSettings(){\n    const SETTINGS = getSettings();\n    LogUtil.log(\"applyPlayersListSettings\",[document.querySelector(\"#players\"), SettingsUtil.get(SETTINGS.autoHidePlayerList.tag)]); \n    if(SettingsUtil.get(SETTINGS.autoHidePlayerList.tag)){\n      document.querySelector(\"#players\")?.classList.add(\"auto-hide\");\n    }else{\n      document.querySelector(\"#players\")?.classList.remove(\"auto-hide\");\n    }\n    ModuleCompatUtil.checkPlayersList();\n  }\n\n  /**\n   * Applies scene navigation position settings\n   * @param {number} [value] - Position value to apply, if not provided uses stored setting\n   */\n  static applySceneNavPos(value){\n    const SETTINGS = getSettings();\n    TopNavigation.navPos = value || SettingsUtil.get(SETTINGS.sceneNavPos.tag);\n  }\n\n  /**\n   * Applies horizontal position of camera dock\n   * @param {number} [pos] - X position to apply\n   */\n  static applyCameraPosX(pos){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n    const xPos = pos || cameraSettings.dockPosX; \n    CameraUtil.resetPositionAndSize({ x: xPos });\n  }\n  /**\n   * Applies vertical position of camera dock\n   * @param {number} [pos] - Y position to apply\n   */\n  static applyCameraPosY(pos){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n    const yPos = pos || cameraSettings.dockPosY;\n    CameraUtil.resetPositionAndSize({ y: yPos });\n  }\n  /**\n   * Applies width of camera dock\n   * @param {number} [value] - Width value to apply\n   */\n  static applyCameraWidth(value){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n    const width = value || cameraSettings.dockWidth;\n    CameraUtil.resetPositionAndSize({ w: width });\n  }\n  /**\n   * Applies height of camera dock\n   * @param {number} [value] - Height value to apply\n   */\n  static applyCameraHeight(value){\n    const SETTINGS = getSettings();\n    const cameraSettings = SettingsUtil.get(SETTINGS.cameraDockMenu.tag);\n    const height = value || cameraSettings.dockHeight;\n    CameraUtil.resetPositionAndSize({ h: height });\n  }\n\n  /**\n   * Applies custom font settings\n   * @param {string} tag - Font setting tag to apply\n   * @param {string} [value] - Font value to apply\n   */\n  static applyCustomFonts(tag, value){\n    const SETTINGS = getSettings();\n    const fields = SETTINGS.customFontsMenu.fields;\n    const customFonts = {};\n\n    LogUtil.log(\"applyCustomFonts\", [tag, value]);\n    fields.forEach(fieldName => {\n      customFonts[fieldName] = SettingsUtil.get(SETTINGS[fieldName].tag);\n    });\n\n    const body = document.querySelector(\"body.crlngn-ui\");\n    switch(tag){\n      case SETTINGS.uiFontBody.tag:\n        GeneralUtil.addCSSVars('--crlngn-font-family', value || customFonts.uiFontBody || SETTINGS.uiFontBody.default.uiFont || '');\n        break;\n      case SETTINGS.uiFontTitles.tag:\n        GeneralUtil.addCSSVars('--crlngn-font-titles', value || customFonts.uiFontTitles || SETTINGS.uiFontTitles.default.uiTitles || '');\n        break;\n      case SETTINGS.journalFontBody.tag:\n        GeneralUtil.addCSSVars('--crlngn-font-journal-body', value || customFonts.journalFontBody || customFonts.journalFontBody || '');\n        break;\n      case SETTINGS.journalFontTitles.tag:\n        GeneralUtil.addCSSVars('--crlngn-font-journal-title', value || customFonts.journalFontTitles || customFonts.journalFontTitles || '');\n        break;\n      default:\n        //\n    }\n  }\n\n  /**\n   * Resets Foundry's theme settings to defaults\n   * Used when enforcing dark mode or other theme changes\n   */\n  static resetFoundryThemeSettings(){\n    const SETTINGS = getSettings();\n    const isMonksSettingsOn = GeneralUtil.isModuleOn('monks-player-settings');\n    const isForceSettingsOn = GeneralUtil.isModuleOn('force-client-settings');\n    const forceDarkModeOn = SettingsUtil.get(SETTINGS.enforceDarkMode.tag);\n    if(forceDarkModeOn && isMonksSettingsOn){\n      if(game.user?.isGM) {\n        ui.notifications.warn(game.i18n.localize(\"CRLNGN_UI.ui.notifications.monksPlayerSettingsConflict\"), {permanent: true});\n        SettingsUtil.set(SETTINGS.enforceDarkMode.tag, false);\n      }\n      return;\n    }\n    if(forceDarkModeOn && isForceSettingsOn){\n      if(game.user?.isGM) {\n        ui.notifications.warn(game.i18n.localize(\"CRLNGN_UI.ui.notifications.forceClientSettingsConflict\"), {permanent: true});\n        SettingsUtil.set(SETTINGS.enforceDarkMode.tag, false);\n      }\n      return;\n    }\n\n    const foundryColorScheme = game.settings.get('core','colorScheme');\n\n    LogUtil.log(\"resetFoundryThemeSettings\", [foundryColorScheme, forceDarkModeOn])\n\n    if(foundryColorScheme===false && forceDarkModeOn){\n      game.settings.set('core','colorScheme','dark');\n    }\n  }\n\n  /**\n   * Applies debug mode settings\n   * @param {boolean} [value] - Whether to enable debug mode\n   */\n  static applyDebugSettings(value){\n    const SETTINGS = getSettings();\n    LogUtil.debugOn = value || SettingsUtil.get(SETTINGS.debugMode.tag);\n  }\n\n  /**\n   * Applies the selected theme to the UI\n   * @param {string} [value] - Theme name to apply, if not provided uses stored setting\n   */\n  static applyThemeSettings = (value) => {\n    const SETTINGS = getSettings();\n    const themeName = value || SettingsUtil.get(SETTINGS.colorTheme.tag) || \"\";\n    const body = document.querySelector(\"body\");\n\n    LogUtil.log(\"applyThemeSettings\", [value, themeName, SettingsUtil.get(SETTINGS.colorTheme.tag)]);\n    \n    THEMES.forEach((theme)=>{\n      if(theme.className){\n        body.classList.remove(theme.className);\n      }\n    });\n\n    if(themeName){\n      body.classList.add(themeName);\n    }\n  }\n\n  /**\n   * Applies custom CSS styles to the UI\n   * @param {string} [value] - CSS content to apply, if not provided uses stored setting\n   */\n  static applyCustomCSS = (value) => {\n    const SETTINGS = getSettings();\n    const cssContent = value || SettingsUtil.get(SETTINGS.customStyles.tag) || \"\";\n\n    GeneralUtil.addCustomCSS(cssContent);\n  }\n\n  /**\n   * Applies style adjustments to other modules\n   * @param {boolean} [value] - Whether to enforce styles, if not provided uses stored setting\n   */\n  static applyModuleAdjustments = (value) => {\n    const SETTINGS = getSettings();\n    const enforceStyles = value || SettingsUtil.get(SETTINGS.adjustOtherModules.tag) || false;\n    const body = document.querySelector(\"body\");\n\n    if(enforceStyles){\n      body.classList.add('crlngn-enforce-styles');\n    }else{\n      body.classList.remove('crlngn-enforce-styles');\n    }\n  }\n\n  /**\n   * Toggles visibility of the main UI interface\n   * Affects all elements inside the #interface block, camera views, and taskbar\n   */\n  static hideInterface = () => {\n    LogUtil.log('hideInterface');\n    const ui = document.querySelector(\"#interface\");\n    const cameraViews = document.querySelector(\"#camera-views\");\n    const taskbar = document.querySelector(\".taskbar\");\n    \n    if(SettingsUtil.#uiHidden){\n      if(ui) ui.style.removeProperty('visibility');\n      if(ui) cameraViews.style.removeProperty('visibility');\n      if(ui) taskbar.style.removeProperty('visibility');\n      SettingsUtil.#uiHidden = false;\n    }else{\n      if(ui) ui.style.setProperty('visibility', 'hidden');\n      if(cameraViews) cameraViews.style.setProperty('visibility', 'hidden');\n      if(taskbar) taskbar.style.setProperty('visibility', 'hidden');\n      SettingsUtil.#uiHidden = true;\n    }\n    \n  }\n}","import { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\n\n/**\n * Utility class for managing the players list functionality and appearance\n */\nexport class PlayersListUtil {\n\n  /**\n   * Initializes the players list functionality by setting up event hooks\n   * @static\n   */\n  static init(){\n    Hooks.on(HOOKS_CORE.RENDER_PLAYERS_LIST, PlayersListUtil.onRender); \n  }\n\n  /**\n   * Handles the rendering of the players list\n   * Sets up click listeners for expanding/collapsing the list and updates CSS variables\n   * @static\n   * @private\n   */\n  static onRender(){\n    const playersList = document.querySelector(`aside#players`);\n    const playersTitle = document.querySelector(`aside#players h3:first-child`);\n\n    if(!playersList || !(playersList instanceof HTMLElement) || !playersTitle){return;}\n\n    const playersHeight = playersList.offsetHeight;\n    GeneralUtil.addCSSVars('--players-list-height', playersHeight+'px');\n\n    playersTitle.addEventListener('click', ()=>{\n      if(playersList.classList.contains('expanded')){\n        playersList.classList.remove('expanded');\n      }else{\n        playersList.classList.add('expanded');\n      }\n    });\n  }\n\n}","import { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\n\n/**\n * Manages the left controls panel UI and its responsive behavior\n */\nexport class LeftControls {\n  /** @type {HTMLElement} @private @static */\n  static #leftControls;\n  /** @type {HTMLElement} @private @static */\n  static #uiLeft;\n  /** @type {ResizeObserver} @private @static */\n  static #resizeObserver;\n\n  /**\n   * Initializes the left controls functionality and sets up event hooks\n   * @static\n   */\n  static init(){\n    LogUtil.log(\"LeftControls - init\", []);\n    Hooks.on(HOOKS_CORE.RENDER_SCENE_CONTROLS, LeftControls.initSceneControls);\n\n    LeftControls.initSceneControls()\n  } \n\n  /**\n   * Resets and updates the local DOM element references\n   * @static\n   * @private\n   */\n  static resetLocalVars(){\n    LeftControls.#leftControls = document.querySelector(\"#ui-left #controls\"); \n    LeftControls.#uiLeft = document.querySelector(\"#ui-left\"); \n  }\n\n  /**\n   * Initializes the scene controls by resetting variables and setting up width observation\n   * @static\n   */\n  static initSceneControls(){\n    LogUtil.log(\"initSceneControls\", [])\n    LeftControls.resetLocalVars();\n    LeftControls.observeControlsWidth();   \n  }\n\n  /**\n   * Sets up a ResizeObserver to monitor changes in the controls width\n   * Implements throttling to limit update frequency\n   * @static\n   * @private\n   */\n  static observeControlsWidth(){\n    LogUtil.log(\"observeControlsWidth\", []);\n    if(!LeftControls.#leftControls){ return; }\n  \n    let timeout;\n    const throttle = (callback, limit) => {\n      if (!timeout) {\n        timeout = setTimeout(() => {\n          callback();\n          timeout = null;\n        }, limit);\n      }\n    };\n  \n    LeftControls.#resizeObserver = new ResizeObserver(entries => {\n      throttle(() => LeftControls.updateCSSVars(), 250);\n    });\n\n    LeftControls.#resizeObserver.observe(LeftControls.#leftControls, {\n      box: 'border-box'\n    });\n    LeftControls.updateCSSVars();\n  }\n\n  /**\n   * Updates CSS variables based on current control panel dimensions\n   * @static\n   * @private\n   */\n  static updateCSSVars() {\n    if(!LeftControls.#leftControls){ return; }\n\n    let leftOffset = Number(LeftControls.#uiLeft.offsetWidth); \n    let controlsWidth = Number(LeftControls.#leftControls.offsetWidth); \n    let controlsMarginLeft = -leftOffset + controlsWidth + 24;\n    LogUtil.log(\"updateCSSVars\", [controlsWidth, leftOffset]);\n\n    if(!isNaN(controlsWidth) && !isNaN(leftOffset)){\n      GeneralUtil.addCSSVars('--ui-controls-margin-left', controlsMarginLeft + 'px');\n    }\n  }\n}\n","\n\nimport { MODULE_SETTINGS } from '../constants/Settings.mjs';\n\nexport class UpdateNewsUtil {\n  static UPDATE_NEWS_URL = 'news/module-updates.json'; // Replace with your GitHub raw JSON URL\n  \n  /**\n   * Initialize the update news system\n   */\n  static init() {\n    if (!game.user?.isGM) return;\n    \n    Hooks.once('ready', () => {\n      this.checkForUpdates();\n    });\n  }\n\n  /**\n   * Fetch and process update news from the remote JSON\n   * @private\n   */\n  static async checkForUpdates() {\n    try {\n      const response = await fetch(this.UPDATE_NEWS_URL);\n      if (!response.ok) throw new Error('Failed to fetch update news');\n      \n      const updateData = await response.json();\n      const lastUpdateId = game.settings.get('crlngn-ui', MODULE_SETTINGS.lastUpdateId);\n      \n      // Check if this update has already been shown\n      if (updateData.id === lastUpdateId) return;\n      \n      // Create and display the chat message\n      await this.displayUpdateNews(updateData);\n      \n      // Save the current update ID\n      await game.settings.set('crlngn-ui', MODULE_SETTINGS.lastUpdateId, updateData.id);\n    } catch (error) {\n      console.error('Failed to check for updates:', error);\n    }\n  }\n\n  /**\n   * Display the update news in the chat\n   * @param {Object} updateData - The update data from the JSON\n   * @param {string} updateData.id - Unique identifier for the update\n   * @param {string} updateData.title - Update title\n   * @param {string} updateData.content - Update content/description\n   * @param {string} [updateData.imageUrl] - Optional GIF/image URL\n   * @private\n   */\n  static async displayUpdateNews(updateData) {\n    const content = `\n      <div class=\"crlngn-news\">\n        <h3>${updateData.title}</h3>\n        ${updateData.imageUrl ? `<img src=\"${updateData.imageUrl}\" alt=\"Update Preview\">` : ''}\n        <div class=\"crlngn-news-content\">${updateData.content}</div>\n      </div>\n    `;\n\n    await ChatMessage.create({\n      content,\n      whisper: [game.user.id],\n      speaker: { alias: 'Carolingian UI' }\n    });\n  }\n}\n","import { HOOKS_CORE } from \"../constants/Hooks.mjs\"; \nimport { LogUtil } from \"./LogUtil.mjs\"; \nimport { SettingsUtil } from \"./SettingsUtil.mjs\"; \nimport { TopNavigation } from \"./TopNavUtil.mjs\"; \nimport { ChatUtil } from \"./ChatUtil.mjs\";\nimport { CameraUtil } from \"./CameraUtil.mjs\";\nimport { PlayersListUtil } from \"./PlayersListUtil.mjs\";\nimport { getSettings } from \"../constants/Settings.mjs\";\nimport { LeftControls } from \"./LeftControlsUtil.mjs\";\nimport { MODULE_ID } from \"../constants/General.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\nimport { ModuleCompatUtil } from \"./ModuleCompatUtil.mjs\";\nimport { SceneNavFolders } from \"./SceneFoldersUtil.mjs\";\nimport { UpdateNewsUtil } from \"./UpdateNewsUtil.mjs\";\n\n/**\n * Main class handling core module initialization and setup\n * Manages module lifecycle, hooks, and core functionality\n */\nexport class Main {\n\n  /**\n   * Initialize the module and set up core hooks\n   * @static\n   */\n  static init(){\n    Hooks.once(HOOKS_CORE.INIT, () => { \n      document.querySelector(\"#ui-middle\")?.classList.add(MODULE_ID);\n\n      LogUtil.log(\"Initiating module...\", [], true); \n\n      Hooks.on(HOOKS_CORE.RENDER_CHAT_MESSAGE, Main.#onRenderChatMessage); \n      SettingsUtil.registerSettings();\n      TopNavigation.init();\n      CameraUtil.init(); \n      PlayersListUtil.init(); \n      LeftControls.init();\n      ChatUtil.init();\n      SceneNavFolders.registerHooks();\n    });\n\n    Hooks.once(HOOKS_CORE.READY, () => {\n      LogUtil.log(\"Core Ready\", []);\n      const SETTINGS = getSettings();\n      var isDebugOn = SettingsUtil.get(SETTINGS.debugMode.tag);\n      if(isDebugOn){CONFIG.debug.hooks = true};\n\n      ModuleCompatUtil.init();\n      TopNavigation.checkSceneNavCompat();\n      UpdateNewsUtil.init(); \n\n      const chatStylesEnabled = SettingsUtil.get(SETTINGS.enableChatStyles.tag);\n      if(chatStylesEnabled){ \n        Main.addCSSLocalization();\n      }\n      SettingsUtil.resetFoundryThemeSettings();\n      // SettingsUtil.applyThemeSettings();\n      \n    })\n  }\n\n  // Custom labels for DnD5e buttons, added via CSS\n  /**\n   * Add CSS variables for DnD5e button localization\n   * @static\n   */\n  static addCSSLocalization(){\n    const locBtnPath = 'CRLNGN_UI.dnd5e.chatCard.buttons';\n    \n    GeneralUtil.addCSSVars('--crlngn-i18n-attack', game.i18n.localize(`${locBtnPath}.attack`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-damage', game.i18n.localize(`${locBtnPath}.damage`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-summons', game.i18n.localize(`${locBtnPath}.summons`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-healing', game.i18n.localize(`${locBtnPath}.healing`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-template', game.i18n.localize(`${locBtnPath}.template`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-consume', game.i18n.localize(`${locBtnPath}.consume`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-refund', game.i18n.localize(`${locBtnPath}.refund`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-macro', game.i18n.localize(`${locBtnPath}.macro`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-save-dc', game.i18n.localize(`${locBtnPath}.savedc`));\n    GeneralUtil.addCSSVars('--crlngn-i18n-save', game.i18n.localize(`${locBtnPath}.save`));\n  }\n\n  /**\n   * Handle chat message rendering\n   * @private\n   * @static\n   * @param {ChatMessage} chatMessage - The chat message being rendered\n   * @param {jQuery} html - The HTML element of the chat message\n   */\n  static #onRenderChatMessage = (chatMessage, html) => { \n    LogUtil.log(HOOKS_CORE.RENDER_CHAT_MESSAGE,[chatMessage, html]);\n  \n    ChatUtil.enrichCard(chatMessage, html);\n  }\n\n}\n","import \"./styles/vars.css\";\nimport \"./styles/main.css\";\nimport \"./styles/ui-middle.css\";\nimport \"./styles/ui-top.css\";\nimport \"./styles/ui-right.css\";\nimport \"./styles/ui-left.css\";\nimport \"./styles/ui-bottom.css\";\nimport \"./styles/camera.css\";\nimport \"./styles/chat.css\";\nimport \"./styles/players-list.css\";\nimport \"./styles/other-modules.css\"; \n\nimport { Main } from \"./components/Main.mjs\";\n\nMain.init();"],"names":["HOOKS_CORE","MODULE_ID","DEBUG_TAG","_LogUtil","ref","data","bypassSettings","debugSetting","strRef","options","_a","__publicField","LogUtil","SETTING_INPUT","SETTING_SCOPE","MODULE_SETTINGS","ICON_SIZES","BORDER_COLOR_TYPES","THEMES","getSettings","ApplicationV2","HandlebarsApplicationMixin","_CameraDockSettings_static","onSubmit_fn","onReset_fn","_CameraDockSettings","__privateMethod","SETTINGS","setting","SettingsUtil","partId","context","event","form","formData","controlSettings","isFloating","rawData","settings","a","b","inputs","defaults","inputField","__privateAdd","CameraDockSettings","_ChatMessagesSettings_static","_ChatMessagesSettings","menuValues","fieldNames","fields","fieldValues","fieldDefaults","fieldName","value","currBorderSettings","ChatMessagesSettings","GeneralUtil","moduleName","module","parent","selector","element","offsetTop","elementHeight","offsetParent","foundryFonts","customFontsObj","customFonts","fontFamily","cssImportedFonts","f","varName","varValue","bodyStyle","body","cssText","ruleStart","ruleEnd","declarations","decl","varsMap","parts","name","newRuleContent","newCss","content","customStyle","sheet","href","isFoundryCore","isOurModule","rules","rule","e","importUrlRegex","match","url","familyMatch","family","resolvedUrl","response","fontFaceRules","fontFamilyMatch","fontName","cleanName","_element","_CustomFontsSettings_static","closeAllDropdowns_fn","_CustomFontsSettings","__privateSet","__privateGet","input","wrapper","dropdown","onFocus","isActive","currentIndex","opt","option","CustomFontsSettings","_LeftControlsSettings_static","_LeftControlsSettings","LeftControlsSettings","_SceneNavSettings_static","_SceneNavSettings","navEnabledBefore","foldersEnabledBefore","navEnabledAfter","foldersEnabledAfter","SceneNavSettings","_ThemeAndStyleSettings_static","_ThemeAndStyleSettings","selectedTheme","theme","dropOptions","that","span","i","ThemeAndStyleSettings","getSettingMenus","_offsetX","_offsetY","_startX","_startY","_startWidth","_startHeight","_startBottom","_CameraUtil_static","onDragRelease_fn","onDragMove_fn","onResize_fn","onStopResize_fn","_CameraUtil","cameraSettings","_b","_c","controlsElem","cameraGrid","camControls","existingButtons","controlBar","btnToggle","offsetBottom","resizeHandle","x","y","w","h","savedPosX","savedPosY","savedWidth","savedHeight","left","bottom","newWidth","deltaY","newHeight","newBottom","_d","_e","_f","CameraUtil","_ChatUtil","chatMessage","html","_g","_h","rollType","chatItem","saveButtons","button","visibleDCSpan","hiddenDCSpan","ChatUtil","_checkPlayersTimeout","_ModuleCompatUtil","isTaskbarOn","taskbarFlag","taskbarReduceSidebar","ftMoveStyle","uiLeftPlayers","isPlayersDocked","isMacroDocked","timeoutDelay","hotbar","ModuleCompatUtil","_navElem","_scenesList","_navTimeout","_navExtras","_navToggle","_uiMiddle","_timeout","_collapseTimeout","_navBtnsTimeout","_navFirstLoad","_isMonksSceneNavOn","_isRipperSceneNavOn","_onNavLast","_onNavNext","_TopNavigation","collapsed","uiMiddle","folderListWidth","isNavOverflowing","btnLast","arrowLeft","btnNext","arrowRight","pos","scenes","position","newMargin","SceneNavFolders","scenePage","nav","toggleWidth","firstScene","itemWidth","currPos","itemsPerPage","newPos","TopNavigation","DEFAULT_FOLDER_ID","_defaultFolderName","_templateData","_folderElement","_customList","_addSceneListeners","_initializeDragDrop","_observeSceneContextMenu","_onOpenList","_onOutsideClick","_clickTimer","_onSelectScene","_onActivateScene","_onSelectFolder","_onSearchInput","_onItemClick","_SceneNavFolders","isMonksSceneNavOn","isRipperSceneNavOn","id","fd","folder","directory","navItem","langPath","optionLabel","li","scene","scale","fromList","folders","templatePath","fc","baseData","sc","foldersData","folderScenes","renderedHtml","targetElement","sceneItems","navPos","selectedLink","toggleSpan","subfoldersOl","fi","searchInput","evt","isFolder","commonOptions","sceneOptions","updates","orderedScenes","el","order","density","update","remainingScenes","s","u","aInFolder","bInFolder","folderOptions","orderedFolders","folderId","remainingFolders","searchValue","searchResultsContainer","filteredScenes","filteredFolders","updateContextMenu","contextMenu","menuItems","toggleNavItem","item","contextMenuObserver","mutations","obs","folderElement","isMouseEvent","isHoverMode","target","isSearchResult","newFolder","sceneId","_uiHidden","_SettingsUtil","entry","settingObj","settingMenu","settingMenuObj","settingName","selectedSetting","newValue","settingTag","borderColorSettings","chatMsgSettings","macroSizeOption","tag","navEnabled","controls","logo","navHeight","topPadding","hideFoundryLogo","iconSize","size","leftControls","buffer","xPos","yPos","width","height","isMonksSettingsOn","isForceSettingsOn","forceDarkModeOn","foundryColorScheme","themeName","cssContent","enforceStyles","ui","cameraViews","taskbar","PlayersListUtil","playersList","playersTitle","playersHeight","_leftControls","_uiLeft","_resizeObserver","_LeftControls","timeout","throttle","callback","limit","entries","leftOffset","controlsWidth","controlsMarginLeft","LeftControls","UpdateNewsUtil","updateData","lastUpdateId","error","_onRenderChatMessage","_Main","isDebugOn","locBtnPath","Main"],"mappings":"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"}