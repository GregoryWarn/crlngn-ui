{"version":3,"file":"module.js","sources":["../../src/constants/Hooks.mjs","../../src/constants/General.mjs","../../src/constants/Settings.mjs","../../src/components/SettingsUtil.mjs","../../src/components/LogUtil.mjs","../../src/components/TopNavUtil.mjs","../../src/components/Main.mjs","../../src/module.mjs"],"sourcesContent":["import { collapseSceneNavigation } from \"../../foundry/client/hooks.mjs\"\n\n/**\n * Foundry Core hooks\n * https://foundryvtt.com/api/classes/client.Hooks.html\n * https://foundryvtt.com/api/modules/hookEvents.html\n * */ \nexport const HOOKS_CORE = {\n  CHAT_MESSAGE: \"chatMessage\", \n  INIT: \"init\", \n  READY: \"ready\", \n  PRE_CREATE_CHAT_MESSAGE: \"preCreateChatMessage\", \n  CREATE_CHAT_MESSAGE: \"createChatMessage\", \n  RENDER_CHAT_MESSAGE: \"renderChatMessage\" ,\n  CREATE_MEASURED_TEMPLATE: \"createMeasuredTemplate\",\n  REFRESH_MEASURED_TEMPLATE: \"refreshMeasuredTemplate\",\n  GET_SCENE_CONTROLS: \"getSceneControlButtons\",\n  RENDER_SCENE_NAV: \"renderSceneNavigation\",\n  COLLAPSE_SCENE_NAV: \"collapseSceneNavigation\"\n}\n\n/**\n * Hooks for DnD5e 4.x\n * According to https://github.com/foundryvtt/dnd5e/wiki/Hooks\n */\nexport const HOOKS_DND5E ={\n  // Rolls\n  PRE_ROLL_V2: \"dnd5e.preRollV2\",\n  PRE_ROLL_ABILITY_TEST: \"dnd5e.preRollAbilityTest\",\n  PRE_ROLL_ABILITY_SAVE: \"dnd5e.preRollAbilitySave\",\n  PRE_ROLL_SAVING_THROW: \"dnd5e.preRollSavingThrow\",\n  PRE_ROLL_ATTACK_V2: \"dnd5e.preRollAttackV2\",\n  PRE_ROLL_CLASS_HIT_POINTS: \"dnd5e.preRollClassHitPoints\",\n  PRE_ROLL_CONCENTRATION: \"dnd5e.preRollConcentration\",\n  PRE_ROLL_DAMAGE_V2: \"dnd5e.preRollDamageV2\",\n  PRE_ROLL_DEATH_SAVE: \"dnd5e.preRollDeathSave\",\n  PRE_ROLL_FORMULA_V2: \"dnd5e.preRollFormulaV2\", \n  PRE_ROLL_HIT_DIE_V2: \"dnd5e.preRollHitDieV2\",\n  PRE_ROLL_INITIATIVE: \"dnd5e.preRollInitiative\",\n  PRE_ROLL_NPC_HIT_POINTS: \"dnd5e.preRollNPCHitPoints\",\n  PRE_ROLL_RECHARGE_V2: \"dnd5e.preRollRechargeV2\",\n  PRE_ROLL_SKILL: \"dnd5e.preRollSkill\",\n  PRE_ROLL_TOOL_CHECK: \"dnd5e.preRollToolCheck\",\n  PRE_USE_ITEM: \"dnd5e.preUseItem\",\n  ROLL_ABILITY_TEST: \"dnd5e.rollAbilityTest\",\n  ROLL_ABILITY_SAVE: \"dnd5e.rollAbilitySave\",\n  ROLL_ATTACK_V2: \"dnd5e.rollAttackV2\",\n  ROLL_CLASS_HIT_POINTS: \"dnd5e.rollClassHitPoints\",\n  ROLL_CONCENTRATION: \"dnd5e.rollConcentration\",\n  ROLL_DEATH_SAVE: \"dnd5e.rollDeathSave\",\n  ROLL_DAMAGE_V2: \"dnd5e.rollDamageV2\",\n  ROLL_FORMULA_V2: \"dnd5e.rollFormulaV2\", \n  ROLL_HIT_DIE_V2: \"dnd5e.rollHitDieV2\",\n  ROLL_INITIATIVE: \"dnd5e.rollInitiative\",\n  ROLL_NPC_HIT_POINTS: \"dnd5e.rollNPCHitPoints\",\n  ROLL_RECHARGE_V2: \"dnd5e.rollRechargeV2\",\n  ROLL_SKILL: \"dnd5e.rollSkill\",\n  ROLL_TOOL_CHECK: \"dnd5e.rollToolCheck\",\n\n  // Rendering / Chat Messages\n  DISPLAY_CARD: \"dnd5e.preDisplayCardV2\",\n  PRE_DISPLAY_CARD_V2: \"dnd5e.preDisplayCardV2\",\n  RENDER_CHAT_MESSAGE: \"dnd5e.renderChatMessage\",\n\n  // Rest\n  PRE_LONG_REST: \"dnd5e.preLongRest\",\n  PRE_REST_COMPLETED: \"dnd5e.preRestCmpleted\",\n  PRE_SHORT_REST: \"dnd5e.preShortRest\",\n  REST_COMPLETED: \"dnd5e.restCmpleted\",\n\n  // Activities\n  ACTIVITY_CONSUMPTION: \"dnd5e.activityConsumption\",\n  POST_ACTIVITY_CONSUMPTION: \"dnd5e.postActivityConsumption\",\n  POST_CREATE_USAGE_MESSAGE: \"dnd5e.postCreateUsageMessage\",\n  POST_USE_ACTIVITY: \"dnd5e.postUseActivity\",\n  PRE_ACTIVITY_CONSUMPTION: \"dnd5e.preActivityConsumption\",\n  PRE_CREATE_USAGE_MESSAGE: \"dnd5e.preCreateUsageMessage\",\n  PRE_USE_ACTIVITY: \"dnd5e.preUseActivity\",\n\n}\n\nexport const HOOKS_DDBGL = {\n  PENDING_ROLL: \"ddb-game-log.pendingRoll\",\n  FULFILLED_ROLL: \"ddb-game-log.fulfilledRoll\"\n}","export const MODULE_ID = \"crlngn-ui\";\nexport const MODULE_TITLE = \"Carolingian UI\";\nexport const MODULE_SHORT = \"crlngn-ui\";\nexport const DEBUG_TAG = [\n  `%cCarolingian UI`,\n  `color:rgb(54, 0, 119); font-weight: bold;`,\n  `|`,\n];\n","export const SETTING_INPUT = {\n  select: \"select\", \n  checkbox: \"checkbox\"\n}\nexport const SETTING_SCOPE = {\n  client: \"client\",\n  world: \"world\"\n}\n\nexport const SETTINGS = { \n  /*\n  textSize: { \n    tag: \"font-size\", \n    label: \"Default Text Size\",\n    hint: \"Increase or decrese the default font size across Foundry clients. Clients can still change the font size in their Foundry Core settings\",\n    propType: new foundry.data.fields.StringField({\n      choices: {\n        \"small\": \"small\",\n        \"regular\": \"medium\",\n        \"large\": \"large\"\n      }\n    }),\n    inputType: SETTING_INPUT.select,\n    default: \"small\",\n    scope: SETTING_SCOPE.world,\n    config: true\n  },\n  */\n\n  debugMode: { \n    tag: \"debug-mode\", \n    label: \"Debug Mode\",\n    hint: \"Enable or disable debug messages on browser console\",\n    propType: Boolean,\n    inputType: SETTING_INPUT.checkbox,\n    default: false,\n    scope: SETTING_SCOPE.client,\n    config: true\n  },\n\n  sceneNavState: { \n    tag: \"scene-nav-collapsed\", \n    label: \"Scene Navigation Collapsed\", \n    hint: \"Current state of the scene navigation toggle\", \n    propType: Boolean, \n    inputType: SETTING_INPUT.checkbox, \n    default: true, \n    scope: SETTING_SCOPE.client, \n    config: false \n  }\n\n}","import { MODULE_ID, MODULE_SHORT } from \"../constants/General.mjs\";\nimport { SETTINGS } from \"../constants/Settings.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\n\nexport class SettingsUtil {\n    /**\n     * Registers settings for this module\n     */\n    static registerSettings(){\n      document.querySelector(\"body\").classList.add(MODULE_SHORT); \n      \n      /**\n       * Register each of the settings defined in the SETTINGS constant \n       */\n      const settingsList = Object.entries(SETTINGS);\n      settingsList.forEach(async(entry) => {\n        const setting = entry[1]; \n        LogUtil.log(\"Registering... \",[entry]);\n\n        await game.settings.register(MODULE_ID, setting.tag, { \n          name: setting.label,\n          hint: setting.hint,\n          default: setting.default,\n          type: setting.propType,\n          scope: setting.scope,\n          config: setting.config,\n          onChange: value => SettingsUtil.apply(setting.tag, value)\n        });\n\n        if(SettingsUtil.get(setting.tag)===undefined){\n          SettingsUtil.set(setting.tag, setting.default);\n        }\n        LogUtil.log(\"registerSettings\",[setting.tag, SettingsUtil.get(setting.tag)]);\n      });\n      \n    }\n\n    /**\n     * Retrieve the value of a setting for this module\n     * @param {String} settingName \n     * @param {String} moduleName \n     * @returns {*} // current value of the setting\n     */\n    static get(settingName, moduleName=MODULE_ID){\n      if(!settingName){ return null; }\n\n      let setting = false;\n\n      if(moduleName===MODULE_ID){\n        setting = game.settings.get(moduleName, settingName);\n      }else{\n        const client = game.settings.storage.get(\"client\");\n        let selectedSetting = client[`${moduleName}.${settingName}`];\n        //\n        if(selectedSetting===undefined){\n          const world = game.settings.storage.get(\"world\");\n          selectedSetting = world.getSetting(`${moduleName}.${settingName}`);\n        }\n        setting = selectedSetting?.value;\n        LogUtil.log(\"GET Setting\", [selectedSetting, setting]);\n      }\n\n      return setting;\n    }\n    /**\n     * Retrieve the value of a setting for this module\n     * @param {String} settingName \n     * @param {String} moduleName \n     * @returns {*} // current value of the setting\n     */\n    static set(settingName, newValue, moduleName=MODULE_ID){ \n      if(!settingName){ return false; }\n\n      let selectedSetting = game.settings.storage.get(\"client\")[`${moduleName}.${settingName}`];\n\n      if(!selectedSetting){\n        const world = game.settings.storage.get(\"world\");\n        selectedSetting = world.getSetting(`${moduleName}.${settingName}`);\n      } \n\n      try{\n        if(selectedSetting){\n          // game.settings.set(moduleName, settingName, newValue);\n          selectedSetting.update({value: newValue});\n        }\n        LogUtil.log(\"Able to change setting\",[settingName, selectedSetting]);\n      }catch(e){\n        LogUtil.log(\"Unable to change setting\",[settingName, selectedSetting]);\n      }\n\n      return true;\n    }\n\n    /**\n     * Apply current setting for Text Size\n     */\n    static apply(settingTag, value=undefined){\n\n      if(value===undefined){\n        value = SettingsUtil.get(settingTag);\n      }\n      LogUtil.log(\"SettingsUtil.apply\",[settingTag, value, SettingsUtil.get(settingTag)]); \n      switch(settingTag){\n        case SETTINGS.sceneNavState.tag: \n          if(value){ \n            ui.nav.collapse();\n            // document.querySelector(\"#interface #ui-top #navigation\").classList.add(\"collapsed\");\n          }else{\n            ui.nav.expand();\n          }\n          break;\n        default:\n          // do nothing\n      }\n      \n    }\n\n\n    static applySettings(){\n      const settingsList = Object.entries(SETTINGS);\n      settingsList.forEach((entry) => {\n        const setting = entry[1]; \n        let currSetting = SettingsUtil.get(setting.tag);\n        SettingsUtil.apply(setting.tag, currSetting);\n      });\n    }\n}\n\n","import { DEBUG_TAG } from \"../constants/General.mjs\";\nimport { SETTINGS } from \"../constants/Settings.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\nexport class LogUtil {\n    /**\n     * Outputs information on console, adding module name and reference\n     * @param {string} ref - Reference information to log after module name\n     * @param {any[]} data - data to log on console\n     */\n    static log(ref=\"\", data=[], bypassSettings=false){\n      try{\n        const debugSetting = SettingsUtil.get(SETTINGS.debugMode.tag);\n        const isDebugModeOn = bypassSettings || debugSetting;\n        if(!isDebugModeOn){ return };\n\n        console.log(...DEBUG_TAG, ref, ...data);\n      }catch(e){\n        console.log(...DEBUG_TAG, ref, ...data);\n      }\n    }\n\n    /**\n     * Outputs information on console, adding module name and reference\n     * @param {string} ref - Reference information to log after module name\n     * @param {any[]} data - data to log on console\n     */\n    static warn(ref=\"\", data=[]){\n      console.warn(...DEBUG_TAG, ref, ...data);\n    }\n\n    /**\n     * Logs an error on the console and/or ui notification\n     * @param {string} strRef - Reference string for the error. \n     * @param {object} options - \n     */\n    static logError(strRef, options){ // = { ui:false, console:true, permanent:false }) {\n        if(options.ui){\n            // console.log(ui.notifications);\n            ui.notifications?.error(strRef, { localize: true, permanent: options.permanent });\n        }\n        if(options.console) console.error(...DEBUG_TAG, strRef);\n    }\n}\n\n","import { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { SETTINGS } from \"../constants/Settings.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\nexport class TopNavigation {\n  static #navElem;\n  static #scenesList;\n\n  static init(){\n    LogUtil.log(\"TopNavigation\", [ ui, ui.nav.collapse ]);\n\n    Hooks.on(HOOKS_CORE.RENDER_SCENE_NAV, (a, b, c) => { \n      LogUtil.log(HOOKS_CORE.RENDER_SCENE_NAV, [a, b, c]); \n      TopNavigation.placeNavButtons(); \n      // LogUtil.log(\"NAV render\", [SettingsUtil.get(SETTINGS.sceneNavState.tag)]); \n      SettingsUtil.apply(SETTINGS.sceneNavState.tag); \n    }); \n\n    Hooks.on(HOOKS_CORE.COLLAPSE_SCENE_NAV, (nav, value) => {\n      SettingsUtil.set(SETTINGS.sceneNavState.tag, value); \n      LogUtil.log(\"NAV toggle\", [nav, value]); \n    }); \n    // SettingsUtil.apply(SETTINGS.sceneNavState.tag); \n    \n  } \n\n  static placeNavButtons(){ \n    this.#navElem = document.querySelector(\"#navigation\"); \n    this.#scenesList = document.querySelector(\"#scene-list\"); \n    // btnLast.classList.add(\"ui-nav-left\"); \n\n    const btnLast = document.createElement(\"button\"); \n    btnLast.classList.add(\"crlngn\"); \n    btnLast.classList.add(\"ui-nav-left\"); \n    const arrowLeft = document.createElement(\"i\"); \n    arrowLeft.classList.add(\"fa\"); \n    arrowLeft.classList.add(\"fa-chevron-left\"); \n    btnLast.addEventListener(\"click\", this.#onNavLast);\n    btnLast.append(arrowLeft); \n\n    const btnNext = document.createElement(\"button\"); \n    btnNext.classList.add(\"crlngn\"); \n    btnNext.classList.add(\"ui-nav-right\"); \n    const arrowRight = document.createElement(\"i\"); \n    arrowRight.classList.add(\"fa\"); \n    arrowRight.classList.add(\"fa-chevron-right\"); \n    btnNext.append(arrowRight); \n    btnNext.addEventListener(\"click\", this.#onNavNext);\n    // navElem.append(btnLast); \n    // navElem.append(btnNext); \n\n    // this.#navElem.insertBefore(btnLast, this.#scenesList);\n    this.#navElem.appendChild(btnLast);\n    this.#navElem.appendChild(btnNext);\n  }\n\n  static #onNavLast = (e) => {\n    const firstElem = this.#scenesList?.querySelector(\"li:first-child\");\n    const itemWidth = firstElem.offsetWidth;\n    const itemsPerPage = Math.floor(this.#scenesList?.offsetWidth/itemWidth);\n    const currScrollPos = parseInt(firstElem.style.marginLeft || 0); \n    LogUtil.log(\"onNavLast\", [firstElem.style.marginLeft]);\n\n    if(currScrollPos < 0){\n      const newMargin = Number(currScrollPos + (itemWidth*itemsPerPage));\n      firstElem.style.marginLeft = (newMargin < 0 ? newMargin : 0) + 'px';\n    }\n    \n    LogUtil.log(\"onNavLast\", [itemsPerPage, itemWidth, currScrollPos, firstElem.style.marginLeft]);\n  }\n\n  static #onNavNext = (e) => {\n    const firstElem = this.#scenesList?.querySelector(\"li:first-child\");\n    const itemWidth = firstElem.offsetWidth;\n    const itemsPerPage = Math.floor(this.#scenesList?.offsetWidth/itemWidth);\n    const currScrollPos = parseInt(firstElem.style.marginLeft || 0); \n    LogUtil.log(\"onNavNext\", [firstElem.style.marginLeft, currScrollPos]);\n\n    if(this.#scenesList?.scrollWidth + currScrollPos > this.#scenesList?.offsetWidth ){\n      const newMargin = Number(currScrollPos - (itemWidth*itemsPerPage));\n      const minMargin = -(this.#scenesList?.offsetWidth - itemWidth);\n      firstElem.style.marginLeft = (newMargin > minMargin ? newMargin : minMargin) + 'px';\n    }\n    \n    LogUtil.log(\"onNavNext\", [itemsPerPage, itemWidth, currScrollPos, firstElem.style.marginLeft, this.#scenesList?.offsetWidth]);\n  }\n}\n\n","import { HOOKS_CORE } from \"../constants/Hooks.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\nimport { TopNavigation } from \"./TopNavUtil.mjs\";\n\nexport class Main {\n\n  static init(){\n    Hooks.once(HOOKS_CORE.INIT, ()=>{\n      const coreFontSettings = game.settings.settings.get(\"core.fontSize\");\n      game.settings.settings.set(\"core.fontSize\", {\n        ...coreFontSettings,\n        default: 3\n      });\n      LogUtil.log(\"Initiating module\", [], true); \n      // Main.setupKeyListeners();\n    });\n\n    Hooks.once(HOOKS_CORE.READY, () => {\n      SettingsUtil.registerSettings();\n      TopNavigation.init(); \n\n      var isDebugOn = SettingsUtil.get('debug-mode');\n      if(isDebugOn){CONFIG.debug.hooks = true};\n      LogUtil.log(\"Core Ready\", []);\n\n      // SettingsUtil.applySettings();\n    })\n  }\n\n  static setupKeyListeners(){\n    // Listen to keydown event and store keys\n    window.addEventListener('keydown', (event) => {\n      const keyPressed = event.key;\n      const index = Main.keysPressed.indexOf(keyPressed);\n\n      if(index < 0){\n        Main.keysPressed.push(keyPressed);\n      }\n      LogUtil.log(\"Keydown\", [Main.keysPressed]);\n    });\n\n    // Listen to keyup event and remove keys\n    window.addEventListener('keyup', (event) => {\n      const keyReleased = event.key;\n      const index = Main.keysPressed.indexOf(keyReleased);\n\n      if(index >= 0){\n        Main.keysPressed.splice(index,1);\n      }\n      LogUtil.log(\"Keyup\", [Main.keysPressed]); \n    });\n  }\n\n}\n","\nimport \"./styles/main.css\";\nimport \"./styles/ui-middle.css\";\nimport \"./styles/ui-top.css\";\nimport \"./styles/ui-right.css\";\nimport \"./styles/ui-bottom.css\";\nimport \"./styles/ui-left.css\";\nimport \"./styles/camera.css\";\nimport { Main } from \"./components/Main.mjs\";\n\nMain.init();"],"names":["HOOKS_CORE","MODULE_ID","MODULE_SHORT","DEBUG_TAG","SETTING_INPUT","SETTING_SCOPE","SETTINGS","SettingsUtil","entry","setting","LogUtil","value","settingName","moduleName","selectedSetting","newValue","settingTag","currSetting","ref","data","bypassSettings","debugSetting","strRef","options","_a","_navElem","_scenesList","_onNavLast","_onNavNext","_TopNavigation","a","b","c","nav","__privateSet","btnLast","arrowLeft","__privateGet","btnNext","arrowRight","__privateAdd","e","_b","firstElem","itemWidth","itemsPerPage","currScrollPos","newMargin","_c","_d","_e","_f","minMargin","TopNavigation","Main","coreFontSettings","isDebugOn","event","keyPressed","keyReleased","index"],"mappings":"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"}