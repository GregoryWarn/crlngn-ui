var O=i=>{throw TypeError(i)};var v=(i,t,e)=>t.has(i)||O("Cannot "+e);var l=(i,t,e)=>(v(i,t,"read from private field"),e?e.call(i):t.get(i)),p=(i,t,e)=>t.has(i)?O("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,e),A=(i,t,e,s)=>(v(i,t,"write to private field"),s?s.call(i,e):t.set(i,e),e);const y={CHAT_MESSAGE:"chatMessage",INIT:"init",READY:"ready",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",CREATE_CHAT_MESSAGE:"createChatMessage",RENDER_CHAT_MESSAGE:"renderChatMessage",CREATE_MEASURED_TEMPLATE:"createMeasuredTemplate",REFRESH_MEASURED_TEMPLATE:"refreshMeasuredTemplate",GET_SCENE_CONTROLS:"getSceneControlButtons",RENDER_SCENE_NAV:"renderSceneNavigation",COLLAPSE_SCENE_NAV:"collapseSceneNavigation"},L="crlngn-ui",D="crlngn-ui",b=["%cCarolingian UI","color:rgb(54, 0, 119); font-weight: bold;","|"],T={select:"select",checkbox:"checkbox"},x={client:"client",world:"world"},E={debugMode:{tag:"debug-mode",label:"Debug Mode",hint:"Enable or disable debug messages on browser console",propType:Boolean,inputType:T.checkbox,default:!1,scope:x.client,config:!0},sceneNavState:{tag:"scene-nav-collapsed",label:"Scene Navigation Collapsed",hint:"Current state of the scene navigation toggle",propType:Boolean,inputType:T.checkbox,default:!0,scope:x.client,config:!1}};class r{static registerSettings(){document.querySelector("body").classList.add(D),Object.entries(E).forEach(async e=>{const s=e[1];c.log("Registering... ",[e]),await game.settings.register(L,s.tag,{name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,onChange:n=>r.apply(s.tag,n)}),r.get(s.tag)===void 0&&r.set(s.tag,s.default),c.log("registerSettings",[s.tag,r.get(s.tag)])})}static get(t,e=L){if(!t)return null;let s=!1;if(e===L)s=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`)),s=o==null?void 0:o.value,c.log("GET Setting",[o,s])}return s}static set(t,e,s=L){if(!t)return!1;let n=game.settings.storage.get("client")[`${s}.${t}`];n||(n=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{n&&n.update({value:e}),c.log("Able to change setting",[t,n])}catch{c.log("Unable to change setting",[t,n])}return!0}static apply(t,e=void 0){switch(e===void 0&&(e=r.get(t)),c.log("SettingsUtil.apply",[t,e,r.get(t)]),t){case E.sceneNavState.tag:e?ui.nav.collapse():ui.nav.expand();break}}static applySettings(){Object.entries(E).forEach(e=>{const s=e[1];let n=r.get(s.tag);r.apply(s.tag,n)})}}class c{static log(t="",e=[],s=!1){try{const n=r.get(E.debugMode.tag);if(!(s||n))return;console.log(...b,t,...e)}catch{console.log(...b,t,...e)}}static warn(t="",e=[]){console.warn(...b,t,...e)}static logError(t,e){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...b,t)}}var u,g,m,C;const a=class a{static init(){c.log("TopNavigation",[ui,ui.nav.collapse]),Hooks.on(y.RENDER_SCENE_NAV,(t,e,s)=>{c.log(y.RENDER_SCENE_NAV,[t,e,s]),a.placeNavButtons(),r.apply(E.sceneNavState.tag)}),Hooks.on(y.COLLAPSE_SCENE_NAV,(t,e)=>{r.set(E.sceneNavState.tag,e),c.log("NAV toggle",[t,e])})}static placeNavButtons(){A(this,u,document.querySelector("#navigation")),A(this,g,document.querySelector("#scene-list"));const t=document.createElement("button");t.classList.add("crlngn"),t.classList.add("ui-nav-left");const e=document.createElement("i");e.classList.add("fa"),e.classList.add("fa-chevron-left"),t.addEventListener("click",l(this,m)),t.append(e);const s=document.createElement("button");s.classList.add("crlngn"),s.classList.add("ui-nav-right");const n=document.createElement("i");n.classList.add("fa"),n.classList.add("fa-chevron-right"),s.append(n),s.addEventListener("click",l(this,C)),l(this,u).appendChild(t),l(this,u).appendChild(s)}};u=new WeakMap,g=new WeakMap,m=new WeakMap,C=new WeakMap,p(a,u),p(a,g),p(a,m,t=>{var f,h;const e=(f=l(a,g))==null?void 0:f.querySelector("li:first-child"),s=e.offsetWidth,n=Math.floor(((h=l(a,g))==null?void 0:h.offsetWidth)/s),o=parseInt(e.style.marginLeft||0);if(c.log("onNavLast",[e.style.marginLeft]),o<0){const S=Number(o+s*n);e.style.marginLeft=(S<0?S:0)+"px"}c.log("onNavLast",[n,s,o,e.style.marginLeft])}),p(a,C,t=>{var f,h,S,w,R,N;const e=(f=l(a,g))==null?void 0:f.querySelector("li:first-child"),s=e.offsetWidth,n=Math.floor(((h=l(a,g))==null?void 0:h.offsetWidth)/s),o=parseInt(e.style.marginLeft||0);if(c.log("onNavNext",[e.style.marginLeft,o]),((S=l(a,g))==null?void 0:S.scrollWidth)+o>((w=l(a,g))==null?void 0:w.offsetWidth)){const M=Number(o-s*n),P=-(((R=l(a,g))==null?void 0:R.offsetWidth)-s);e.style.marginLeft=(M>P?M:P)+"px"}c.log("onNavNext",[n,s,o,e.style.marginLeft,(N=l(a,g))==null?void 0:N.offsetWidth])});let k=a;class d{static init(){Hooks.once(y.INIT,()=>{const t=game.settings.settings.get("core.fontSize");game.settings.settings.set("core.fontSize",{...t,default:3}),c.log("Initiating module",[],!0)}),Hooks.once(y.READY,()=>{r.registerSettings(),k.init();var t=r.get("debug-mode");t&&(CONFIG.debug.hooks=!0),c.log("Core Ready",[])})}static setupKeyListeners(){window.addEventListener("keydown",t=>{const e=t.key;d.keysPressed.indexOf(e)<0&&d.keysPressed.push(e),c.log("Keydown",[d.keysPressed])}),window.addEventListener("keyup",t=>{const e=t.key,s=d.keysPressed.indexOf(e);s>=0&&d.keysPressed.splice(s,1),c.log("Keyup",[d.keysPressed])})}}d.init();
//# sourceMappingURL=module.js.map
